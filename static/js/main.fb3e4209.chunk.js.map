{"version":3,"sources":["utils/history.js","utils/authConfig.js","utils/context.js","store/actions/actionTypes.js","store/reducers/authReducer.js","components/NavBar.js","components/BtnCareerRenamer.js","components/BtnCareerSwitcher.js","components/BtnCareerAdder.js","components/Step1UrlDesc.js","components/Step2NameTitle.js","components/Step3Notes.js","components/Step4Resume.js","components/Step5CoverLetter.js","components/Step6Tags.js","pages/HomePage.js","components/SearchRadio.js","pages/SearchPage.js","pages/AppViewerPage.js","assets/loading.svg","components/LoadingSpinner.js","pages/ProfilePage.js","pages/AboutPage.js","App.js","store/actions/actions.js","index.js"],"names":["createBrowserHistory","authConfig","domain","clientId","redirectUri","window","location","origin","onRedirectCallback","appState","history","push","returnTo","pathname","Context","React","createContext","LOGIN_SUCCESS","LOGIN_FAILURE","SET_PROFILE","REMOVE_PROFILE","SET_DB_PROFILE","REMOVE_DB_PROFILE","initialState","isAuthenticated","dbProfile","authProfile","AuthReducer","state","action","type","ACTION_TYPES","payload","NavBar","auth0","useAuth0","navigateTo","useNavigate","className","id","to","style","padding","onClick","loginWithPopup","user","email","BtnCareerRenamer","careersList","setCareersList","currentCareerNum","context","useContext","useState","newName","setNewName","modalOn","setModalOn","toggleModal","validateRename","length","find","item","alert","newList","dbProfileState","currentUser","username","oldName","data","oldCareerName","newCareerName","axios","put","then","res","console","log","tempProfile","careers_list","dispatchSetDbProfile","catch","err","updateRenameCareer","isOpen","toggle","onSubmit","e","preventDefault","name","title","placeholder","onChange","target","value","color","BtnCareerSwitcher","setCurrentCareerNum","map","i","disabled","newNum","current_career_num","updateCurrentCareerNum","BtnCareerAdder","newCareer","setNewCareer","validateAddCareer","updateCareersList","autoFocus","undoChange","this","quill","undo","redoChange","redo","Step1UrlDesc","setJobDescription","setPostingURL","quillRef","useRef","previewOpen","setPreviewOpen","previewContent","setPreviewContent","quillModules","useMemo","toolbar","container","handlers","preview","html","root","innerHTML","defaultValue","persist","ref","backgroundColor","minHeight","maxHeight","overflowY","theme","modules","formats","dangerouslySetInnerHTML","__html","Step2","setCompanyName","setJobTitle","htmlFor","Step3Notes","Step4Resume","setResumeFile","resumeDisplayFile","setResumeDisplayFile","multiple","onDrop","getRootProps","getInputProps","size","Step5CoverLetter","setCoverLetterFile","coverLetterDisplayFile","setCoverLetterDisplayFile","Step6Tags","setTags","HomePage","postingURL","companyName","jobTitle","jobDescription","jobNotes","setJobNotes","byteaResume","setByteaResume","byteaCoverLetter","setByteaCoverLetter","tags","toolTipOn","setToolTipOn","newFile","getByteArray","arrayBuffer","bytea","Uint8Array","useEffect","placement","autohide","document","querySelector","toString","resumeFile","coverLetterFile","split","careerName","applicationDate","Date","post","nodeList","getElementsByTagName","Array","prototype","slice","call","forEach","input","clearForm","SearchRadio","selectedSearchOption","setSelectedSearchOption","checked","readOnly","SearchPage","allUserAppsList","setAllUserAppsList","displayedAppsList","setDisplayedAppsList","searchString","setSearchString","dateRangeStart","setDateRangeStart","undefined","fmtRangeStart","setFmtRangeStart","dateRangeEnd","setDateRangeEnd","fmtRangeEnd","setFmtRangeEnd","loadAllRecords","get","params","startDate","endDate","results","app","appDate","application_date","toLowerCase","includes","clientSideSearch","v","f","formattedValue","date","getFullYear","getMonth","getDate","company_name","job_title","AppViewer","LoadingSpinner","src","loading","alt","withAuthenticationRequired","logout","family_name","given_name","locale","nickname","sub","stateAuthReducer","onRedirecting","Search","toolTipOn1","setToolTipOn1","ContextState","profile","dispatchLogin","dispatchSetAuthProfile","dispatchLogout","dispatchRemoveAuthProfile","useReducer","dispatchAuthReducer","ACTIONS","Provider","file","Promise","acc","reader","FileReader","onloadend","event","result","onerror","error","readAsArrayBuffer","basename","path","element","AboutPage","ProfilePage","ReactDOM","createRoot","getElementById","render"],"mappings":"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","file":"static/js/main.fb3e4209.chunk.js","sourcesContent":["import { createBrowserHistory } from \"history\";\n\nexport default createBrowserHistory();\n","import history from \"./history\";\n\nconst appConfig = {\n  domain: \"dev-9npol9r6.us.auth0.com\",\n  clientId: \"4GfZ4cfLN9HiX42YH3oWPq8NHKTiCAIS\",\n};\n\nconst onRedirectCallback = (appState) => {\n  history.push(appState && appState.returnTo ? appState.returnTo : window.location.pathname);\n};\n\nexport const authConfig = {\n  domain: appConfig.domain,\n  clientId: appConfig.clientId,\n  redirectUri: window.location.origin,\n  onRedirectCallback,\n};\n","import React from \"react\";\n\nconst Context = React.createContext();\n\nexport default Context;\n","\r\nexport const SUCCESS = \"SUCCESS\"\r\n\r\nexport const FAILURE = \"FAILURE\"\r\n\r\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\"\r\n\r\nexport const LOGIN_FAILURE = \"LOGIN_FAILURE\"\r\n\r\nexport const SET_PROFILE = \"SET_PROFILE\"\r\n\r\nexport const REMOVE_PROFILE = \"REMOVE_PROFILE\"\r\n\r\nexport const USER_INPUT_CHANGE = \"USER_INPUT_CHANGE\"\r\n\r\nexport const USER_INPUT_SUBMIT = \"USER_INPUT_SUBMIT\"\r\n\r\nexport const SET_DB_PROFILE = \"SET_DB_PROFILE\"\r\n\r\nexport const REMOVE_DB_PROFILE = \"REMOVE_DB_PROFILE\"\r\n\r\nexport const FETCH_DB_POSTS = \"FETCH_DB_POSTS\"\r\n\r\nexport const REMOVE_DB_POSTS = \"REMOVE_DB_POSTS\"\r\n","import * as ACTION_TYPES from \"../actions/actionTypes\";\n\nexport const initialState = {\n  isAuthenticated: false,\n  dbProfile: null,\n  authProfile: null,\n};\n\nexport const AuthReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ACTION_TYPES.LOGIN_SUCCESS:\n      return {\n        ...state,\n        isAuthenticated: true,\n      };\n    case ACTION_TYPES.LOGIN_FAILURE:\n      return {\n        ...state,\n        isAuthenticated: false,\n      };\n    case ACTION_TYPES.SET_PROFILE:\n      return {\n        ...state,\n        authProfile: action.payload,\n      };\n    case ACTION_TYPES.REMOVE_PROFILE:\n      return {\n        ...state,\n        authProfile: null,\n      };\n    case ACTION_TYPES.SET_DB_PROFILE:\n      return {\n        ...state,\n        dbProfile: action.payload,\n      };\n    case ACTION_TYPES.REMOVE_DB_PROFILE:\n      return {\n        ...state,\n        dbProfile: null,\n      };\n    default:\n      return state;\n  }\n};\n","import { Link } from \"react-router-dom\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst NavBar = () => {\n  const auth0 = useAuth0();\n  const navigateTo = useNavigate();\n\n  return (\n    <div className=\"d-flex justify-content-center\">\n      <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n          <ul className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item active\">\n              <Link to=\"/home\" style={{ padding: \"5px\" }}>\n                Home\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/search\" style={{ padding: \"5px\" }}>\n                Search\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/about\" style={{ padding: \"5px\" }}>\n                About\n              </Link>\n            </li>\n          </ul>\n          <button\n            className=\"btn btn-outline-primary\"\n            onClick={() => {\n              auth0.isAuthenticated ? navigateTo(\"/profile\") : auth0.loginWithPopup();\n            }}\n          >\n            {auth0.isAuthenticated ? auth0.user.email : \"Log in\"}\n          </button>\n        </div>\n      </nav>\n    </div>\n  );\n};\n\nexport default NavBar;\n","import { useState, useContext } from \"react\";\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\nimport Context from \"../utils/context\";\nimport axios from \"axios\";\n\nexport default function BtnCareerRenamer({ careersList, setCareersList, currentCareerNum }) {\n  const context = useContext(Context);\n  const [newName, setNewName] = useState(careersList[currentCareerNum]);\n  const [modalOn, setModalOn] = useState(false);\n\n  function toggleModal() {\n    setModalOn(!modalOn);\n  }\n\n  function validateRename() {\n    if (newName.length === 0 || newName === careersList[currentCareerNum]) {\n      return;\n    }\n    if (\n      careersList.find((item) => {\n        return item === newName;\n      })\n    ) {\n      alert(`Error: \"${newName}\" already exists. Cannot create duplicate careers.`);\n    } else {\n      updateRenameCareer(careersList, currentCareerNum, newName);\n      toggleModal();\n    }\n  }\n\n  /* Update both \"users\" table's careersList value and \"apps\" table's career values*/\n  function updateRenameCareer(careersList, currentCareerNum, newName) {\n    let newList = [...careersList];\n    newList[currentCareerNum] = newName;\n    if (context.isAuthenticated && context.dbProfileState) {\n      let currentUser = context.dbProfileState.username;\n      const oldName = careersList[currentCareerNum];\n      const data = {\n        username: currentUser,\n        careersList: newList,\n        oldCareerName: oldName,\n        newCareerName: newName,\n      };\n      axios\n        .put(\"/api/put/renamecareer\", data) // db update\n        .then((res) => {\n          console.log(\"api/put/renamecareer res.data: \", res.data);\n          const tempProfile = { ...context.dbProfileState };\n          tempProfile.careers_list = data.careersList;\n          context.dispatchSetDbProfile(tempProfile); // reducer update\n          setCareersList(newList); // HomePage ui update\n        })\n        .catch((err) => {\n          console.log(\"api/put/careernum err\", err);\n        });\n    } else {\n      setCareersList(newList);\n    }\n\n    // let currentUser =\n    //   context.isAuthenticated && context.dbProfileState\n    //     ? context.dbProfileState.username\n    //     : \"demoUser\";\n  }\n\n  return (\n    <div>\n      <div className=\"dropdown\">\n        <button type=\"button\" className=\"btn btn-success m-1\" onClick={toggleModal}>\n          Rename Career\n        </button>\n        <Modal isOpen={modalOn} toggle={toggleModal}>\n          <ModalHeader toggle={toggleModal}>\n            Rename The Current Career: \"{careersList[currentCareerNum]}\"\n          </ModalHeader>\n          <ModalBody>\n            <form\n              onSubmit={(e) => {\n                e.preventDefault();\n                validateRename();\n              }}\n            >\n              <div>\n                Note: renaming this career will change the \"career\" attribute of all job\n                applications saved with the name \"{careersList[currentCareerNum]}\" to the new\n                name which you're about to enter.\n              </div>\n              <input\n                name=\"renameCareer\"\n                id=\"renameCareer\"\n                type=\"text\"\n                className=\"form-control\"\n                title=\"Rename Career\"\n                placeholder=\"New name\"\n                onChange={(e) => {\n                  setNewName(e.target.value);\n                }}\n              />\n              <button type=\"button\" className=\"btn btn-success w-100\" onClick={validateRename}>\n                Rename\n              </button>\n            </form>\n          </ModalBody>\n          <ModalFooter>\n            <Button color=\"primary\" onClick={toggleModal}>\n              Close\n            </Button>\n          </ModalFooter>\n        </Modal>\n      </div>\n    </div>\n  );\n}\n","import { Link } from \"react-router-dom\";\nimport { useState, useContext } from \"react\";\nimport Context from \"../utils/context\";\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\nimport axios from \"axios\";\n\nexport default function BtnCareerSwitcher({ careersList, currentCareerNum, setCurrentCareerNum }) {\n  const context = useContext(Context);\n  const [modalOn, setModalOn] = useState(false);\n\n  function toggleModal() {\n    setModalOn(!modalOn);\n  }\n\n  function updateCurrentCareerNum(newNum) {\n    if (context.isAuthenticated && context.dbProfileState) {\n      let currentUser = context.dbProfileState.username;\n      const data = {\n        currentCareerNum: newNum,\n        username: currentUser,\n      };\n      axios\n        .put(\"/api/put/careernum\", data) // db update\n        .then((res) => {\n          const tempProfile = { ...context.dbProfileState };\n          tempProfile.current_career_num = data.currentCareerNum;\n          context.dispatchSetDbProfile(tempProfile); // reducer update\n          setCurrentCareerNum(newNum); // HomePage ui update\n        })\n        .catch((err) => {\n          console.log(\"api/put/careernum err\", err);\n        });\n    } else {\n      setCurrentCareerNum(newNum);\n    }\n\n    // let currentUser =\n    //   context.isAuthenticated && context.dbProfileState\n    //     ? context.dbProfileState.username\n    //     : \"demoUser\";\n  }\n\n  return (\n    <div>\n      <div className=\"dropdown\">\n        <button\n          type=\"button\"\n          className=\"btn btn-success m-1\"\n          onClick={() => {\n            toggleModal();\n          }}\n        >\n          Switch Career\n        </button>\n        <Modal isOpen={modalOn} toggle={toggleModal}>\n          <ModalHeader toggle={toggleModal}>Select career:</ModalHeader>\n          <ModalBody>\n            {careersList.map((name, i) => {\n              return (\n                <div key={i}>\n                  <button\n                    type=\"button\"\n                    className=\"btn btn-success w-100\"\n                    disabled={currentCareerNum === i ? true : false}\n                    onClick={() => {\n                      updateCurrentCareerNum(i);\n                      toggleModal();\n                    }}\n                  >\n                    {name}\n                  </button>\n                </div>\n              );\n            })}\n            <div className=\"text-center\">\n              <Link to=\"/about\">How to delete a career</Link>\n            </div>\n          </ModalBody>\n          <ModalFooter>\n            <Button color=\"primary\" onClick={toggleModal}>\n              Close\n            </Button>\n          </ModalFooter>\n        </Modal>\n      </div>\n    </div>\n  );\n}\n","import { useState, useContext } from \"react\";\nimport Context from \"../utils/context\";\nimport axios from \"axios\";\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\n\nexport default function BtnCareerAdder({ careersList, setCareersList }) {\n  const context = useContext(Context);\n  const [newCareer, setNewCareer] = useState(\"\");\n  const [modalOn, setModalOn] = useState(false);\n\n  function toggleModal() {\n    setModalOn(!modalOn);\n  }\n\n  function validateAddCareer() {\n    if (newCareer.length === 0) {\n      return;\n    }\n    if (\n      careersList.find((item) => {\n        return item === newCareer;\n      })\n    ) {\n      alert(`\"${newCareer}\" already exists. Cannot create duplicate careers.`);\n    } else {\n      let newList = [...careersList, newCareer];\n      updateCareersList(newList);\n      toggleModal();\n    }\n  }\n\n  function updateCareersList(newList) {\n    if (context.isAuthenticated && context.dbProfileState) {\n      let currentUser = context.dbProfileState.username;\n      const data = {\n        username: currentUser,\n        careersList: newList,\n      };\n      axios\n        .put(\"/api/put/careerslist\", data) // db update\n        .then((res) => {\n          console.log(\"api/put/careerslist res\", res.data);\n          const tempProfile = { ...context.dbProfileState };\n          tempProfile.careers_list = data.careersList;\n          context.dispatchSetDbProfile(tempProfile); // reducer update\n          setCareersList(newList); // HomePage ui update\n        })\n        .catch((err) => {\n          console.log(\"api/put/careernum err\", err);\n        });\n    } else {\n      setCareersList(newList);\n    }\n\n    // let currentUser =\n    //   context.isAuthenticated && context.dbProfileState\n    //     ? context.dbProfileState.username\n    //     : \"demoUser\";\n  }\n\n  return (\n    <div>\n      <div className=\"dropdown\">\n        <button\n          type=\"button\"\n          className=\"btn btn-success m-1\"\n          onClick={() => {\n            toggleModal();\n          }}\n        >\n          Add Career\n        </button>\n        <Modal isOpen={modalOn} toggle={toggleModal}>\n          <ModalHeader toggle={toggleModal}>New career name:</ModalHeader>\n          <ModalBody>\n            <form\n              autoFocus\n              onSubmit={(e) => {\n                e.preventDefault();\n                validateAddCareer();\n              }}\n            >\n              <input\n                name=\"newCareer\"\n                id=\"newCareer\"\n                type=\"text\"\n                title=\"New Career\"\n                placeholder=\"career\"\n                className=\"form-control\"\n                onChange={(e) => {\n                  setNewCareer(e.target.value);\n                }}\n              />\n              <button type=\"submit\" className=\"btn btn-success w-100\">\n                Add\n              </button>\n              <div className=\"text-center\">Existing Careers:</div>\n              {careersList.map((name, i) => {\n                return (\n                  <div key={i}>\n                    <button type=\"button\" className=\"btn btn-outline-success w-100\" disabled>\n                      {name}\n                    </button>\n                  </div>\n                );\n              })}\n            </form>\n          </ModalBody>\n          <ModalFooter>\n            <Button color=\"primary\" onClick={toggleModal}>\n              Close\n            </Button>\n          </ModalFooter>\n        </Modal>\n      </div>\n    </div>\n  );\n}\n","import React, { useState, useMemo } from \"react\";\nimport ReactQuill from \"react-quill\";\nimport \"react-quill/dist/quill.snow.css\";\n// https://codesandbox.io/s/react-quill-multiple-editor-gttvm?file=/src/App.js:351-359\n\n/* \nThis component will render the inputs for the posting URL and the job description.\nThe job description input will use the react-quill rich text editor.\n*/\n\n// For react-quill, custom svgs are needed as the default icons don't always work\nconst CustomUndoIcon = () => (\n  <svg viewBox=\"0 0 18 18\">\n    <polygon className=\"ql-fill ql-stroke\" points=\"6 10 4 12 2 10 6 10\" />\n    <path className=\"ql-stroke\" d=\"M8.09,13.91A4.6,4.6,0,0,0,9,14,5,5,0,1,0,4,9\" />\n  </svg>\n);\n\nconst CustomRedoIcon = () => (\n  <svg viewBox=\"0 0 18 18\">\n    <polygon className=\"ql-fill ql-stroke\" points=\"12 10 14 12 16 10 12 10\" />\n    <path className=\"ql-stroke\" d=\"M9.91,13.91A4.6,4.6,0,0,1,9,14a5,5,0,1,1,5-5\" />\n  </svg>\n);\n\n// Custom undo and redo functions for Custom Toolbar\nfunction undoChange() {\n  this.quill.history.undo();\n}\nfunction redoChange() {\n  this.quill.history.redo();\n}\n\nexport default function Step1UrlDesc({ id, value, setJobDescription, setPostingURL }) {\n  const quillRef = React.useRef();\n  const [previewOpen, setPreviewOpen] = useState(false);\n  const [previewContent, setPreviewContent] = useState(\"\");\n\n  const CustomToolbar = () => (\n    <div id={`toolbar-${id}`}>\n      <span className=\"ql-formats\">\n        <button className=\"ql-bold\" />\n        <button className=\"ql-italic\" />\n        <button className=\"ql-underline\" />\n        {/* <button className=\"ql-strike\" /> */}\n      </span>\n      <span className=\"ql-formats\">\n        <select className=\"ql-align\" />\n        {/* <select className=\"ql-color\" /> */}\n        {/* <select className=\"ql-background\" /> */}\n      </span>\n      <span className=\"ql-formats\">\n        <button className=\"ql-list\" value=\"ordered\" />\n        <button className=\"ql-list\" value=\"bullet\" />\n        <select className=\"ql-size\" defaultValue={\"\"} onChange={(e) => e.persist()}>\n          {[\"false\", \"small\", \"large\", \"huge\"].map((value, i) => (\n            <option key={i} value={value} />\n          ))}\n        </select>\n\n        {/* <button className=\"ql-indent\" value=\"-1\" /> */}\n        {/* <button className=\"ql-indent\" value=\"+1\" /> */}\n      </span>\n      {/* <span className=\"ql-formats\">\n        <button className=\"ql-undo\">\n          <CustomUndoIcon />\n        </button>\n        <button className=\"ql-redo\">\n          <CustomRedoIcon />\n        </button>\n      </span> */}\n      {/* <span className=\"ql-formats\">\n        <button className=\"ql-code-block\" />\n        <button className=\"ql-clean\" />\n      </span> */}\n      <span className=\"ql-formats\">\n        {/* <select className=\"ql-header\" defaultValue={\"\"} onChange={(e) => e.persist()}>\n          {[\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"false\"].map((value) => (\n            <option key={value} value={value} />\n          ))}\n        </select> */}\n        {/* <select className=\"ql-font\" defaultValue=\"arial\">\n          <option value=\"arial\">Arial</option>\n          <option value=\"comic-sans\">Comic Sans</option>\n          <option value=\"courier-new\">Courier New</option>\n          <option value=\"georgia\">Georgia</option>\n          <option value=\"helvetica\">Helvetica</option>\n          <option value=\"lucida\">Lucida</option>\n        </select> */}\n      </span>\n      <span className=\"ql-formats\">\n        <button className=\"ql-link\" />\n        {/* <button className=\"ql-image\" /> */}\n        {/* <button className=\"ql-video\" /> */}\n      </span>\n    </div>\n  );\n\n  const quillModules = useMemo(() => {\n    return {\n      toolbar: {\n        container: `#toolbar-${id}`,\n        handlers: {\n          preview: function (value) {\n            const html = this.quill.root.innerHTML;\n            setPreviewContent(html);\n            setPreviewOpen(!previewOpen);\n          },\n          undo: undoChange,\n          redo: redoChange,\n        },\n      },\n    };\n  }, [id, previewOpen]);\n\n  const quillFormats = [\n    \"bold\",\n    \"italic\",\n    \"underline\",\n    \"strike\",\n    \"script\",\n    \"size\",\n    \"header\",\n    \"list\",\n    \"indent\",\n    \"link\",\n    \"color\",\n    \"background\",\n    \"align\",\n    \"font\",\n    \"blockquote\",\n    \"bullet\",\n    \"image\",\n    \"code-block\",\n  ];\n\n  return (\n    <div className=\"step d-flex  flex-column \">\n      {/* Posting URL input*/}\n      <h3 id=\"step1Heading\">Job posting URL</h3>\n      <input\n        id=\"jobPostingURL\"\n        name=\"jobPostingURL\"\n        className=\"form-control\"\n        type=\"url\"\n        title=\"Job Posting URL\"\n        onChange={(e) => {\n          setPostingURL(e.target.value);\n        }}\n      />\n      {/* Job description input*/}\n      <h3 id=\"step3Heading\">Job posting description</h3>\n      <div className=\"text-editor\">\n        {CustomToolbar(id)}\n        <ReactQuill\n          ref={quillRef}\n          style={{\n            backgroundColor: \"white\",\n            minHeight: \"255px\",\n            maxHeight: \"900px\",\n            overflowY: \"auto\",\n          }}\n          className=\"step3Desc\"\n          theme=\"snow\"\n          // defaultValue={value}\n          value={value}\n          onChange={setJobDescription}\n          modules={quillModules}\n          formats={quillFormats}\n        />\n        {previewOpen ? <div dangerouslySetInnerHTML={{ __html: previewContent }} /> : \"\"}\n      </div>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\n\nexport default function Step2({ setCompanyName, setJobTitle }) {\n  const [modalOn, setModalOn] = useState(false);\n\n  function toggleModal() {\n    setModalOn(!modalOn);\n  }\n\n  return (\n    <div className=\"step w-md-75\" style={{ backgroundColor: \"white\", minHeight: \"100px\" }}>\n      <div className=\"d-flex justify-content-space-between justify-content-md-center gap-1 gap-md-5 required\">\n        <div className=\"d-flex flex-column\">\n          <label htmlFor=\"jobTitle\">Company: </label>\n          <input\n            id=\"companyName\"\n            className=\"form-control w-100\"\n            name=\"companyName\"\n            type=\"text\"\n            title=\"Company Name\"\n            placeholder=\"Company\"\n            // onClick={toggleModal}\n            onChange={(e) => {\n              setCompanyName(e.target.value);\n            }}\n          />\n        </div>\n        <div className=\"d-flex flex-column\">\n          <label htmlFor=\"jobTitle\">Job Title: </label>\n          <input\n            id=\"jobTitle\"\n            className=\"form-control w-100\"\n            name=\"jobTitle\"\n            type=\"text\"\n            title=\"Job Title\"\n            placeholder=\"Job Title\"\n            // onClick={toggleModal}\n            onChange={(e) => {\n              setJobTitle(e.target.value);\n            }}\n          />\n        </div>\n      </div>\n      <Modal isOpen={modalOn} toggle={toggleModal}>\n        <ModalHeader toggle={toggleModal}>You are currently not logged in.</ModalHeader>\n        <ModalBody>\n          If you proceed to save this application without logging in, it will be saved to the public\n          demonstration database. It will not be saved to your personal account. Please log in to\n          save your application privately.\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"primary\" onClick={toggleModal}>\n            Ok\n          </Button>\n        </ModalFooter>\n      </Modal>\n    </div>\n  );\n}\n","import React, { useState, useMemo } from \"react\";\nimport ReactQuill from \"react-quill\";\nimport \"react-quill/dist/quill.snow.css\";\n\nfunction undoChange() {\n  this.quill.history.undo();\n}\nfunction redoChange() {\n  this.quill.history.redo();\n}\n\nexport default function Step3Notes({ id, value, onChange }) {\n  const quillRef = React.useRef();\n  const [previewOpen, setPreviewOpen] = useState(false);\n  const [previewContent, setPreviewContent] = useState(\"\");\n\n  const CustomToolbar = () => (\n    <div id={`toolbar-${id}`}>\n      <span className=\"ql-formats\">\n        <button className=\"ql-bold\" />\n        <button className=\"ql-italic\" />\n        <button className=\"ql-underline\" />\n        {/* <button className=\"ql-strike\" /> */}\n      </span>\n      <span className=\"ql-formats\">\n        <select className=\"ql-align\" />\n        {/* <select className=\"ql-color\" /> */}\n        {/* <select className=\"ql-background\" /> */}\n      </span>\n      <span className=\"ql-formats\">\n        <button className=\"ql-list\" value=\"ordered\" />\n        <button className=\"ql-list\" value=\"bullet\" />\n        <select className=\"ql-size\" defaultValue={\"\"} onChange={(e) => e.persist()}>\n          {[\"false\", \"small\", \"large\", \"huge\"].map((value, i) => (\n            <option key={value} value={value} />\n          ))}\n        </select>\n\n        {/* <button className=\"ql-indent\" value=\"-1\" /> */}\n        {/* <button className=\"ql-indent\" value=\"+1\" /> */}\n      </span>\n      {/* <span className=\"ql-formats\">\n        <button className=\"ql-undo\">\n          <CustomUndoIcon />\n        </button>\n        <button className=\"ql-redo\">\n          <CustomRedoIcon />\n        </button>\n      </span> */}\n      {/* <span className=\"ql-formats\">\n        <button className=\"ql-code-block\" />\n        <button className=\"ql-clean\" />\n      </span> */}\n      <span className=\"ql-formats\">\n        {/* <select className=\"ql-header\" defaultValue={\"\"} onChange={(e) => e.persist()}>\n          {[\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"false\"].map((value) => (\n            <option key={value} value={value} />\n          ))}\n        </select> */}\n        {/* <select className=\"ql-font\" defaultValue=\"arial\">\n          <option value=\"arial\">Arial</option>\n          <option value=\"comic-sans\">Comic Sans</option>\n          <option value=\"courier-new\">Courier New</option>\n          <option value=\"georgia\">Georgia</option>\n          <option value=\"helvetica\">Helvetica</option>\n          <option value=\"lucida\">Lucida</option>\n        </select> */}\n      </span>\n      <span className=\"ql-formats\">\n        <button className=\"ql-link\" />\n        {/* <button className=\"ql-image\" /> */}\n        {/* <button className=\"ql-video\" /> */}\n      </span>\n    </div>\n  );\n\n  const quillModules = useMemo(() => {\n    return {\n      toolbar: {\n        container: `#toolbar-${id}`,\n        handlers: {\n          preview: function (value) {\n            const html = this.quill.root.innerHTML;\n            setPreviewContent(html);\n            setPreviewOpen(!previewOpen);\n          },\n          undo: undoChange,\n          redo: redoChange,\n        },\n      },\n    };\n  }, [id, previewOpen]);\n\n  const quillFormats = [\n    \"bold\",\n    \"italic\",\n    \"underline\",\n    \"strike\",\n    \"script\",\n    \"size\",\n    \"header\",\n    \"list\",\n    \"indent\",\n    \"link\",\n    \"color\",\n    \"background\",\n    \"align\",\n    \"font\",\n    \"blockquote\",\n    \"bullet\",\n    \"image\",\n    \"code-block\",\n  ];\n\n  return (\n    <div className=\"step\">\n      <h3 id=\"step4Heading\">Application Notes</h3>\n      <div className=\"text-editor\">\n        {CustomToolbar(id)}\n        <ReactQuill\n          ref={quillRef}\n          style={{\n            backgroundColor: \"white\",\n            minHeight: \"150px\",\n            maxHeight: \"770px\",\n            overflowY: \"auto\",\n          }}\n          theme=\"snow\"\n          // defaultValue={value}\n          value={value}\n          placeholder=\"Enter your notes in here\"\n          onChange={onChange}\n          modules={quillModules}\n          formats={quillFormats}\n        />\n        {previewOpen ? <div dangerouslySetInnerHTML={{ __html: previewContent }} /> : \"\"}\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport Dropzone from \"react-dropzone\";\n// https://react-dropzone.js.org/#section-examples\n\nexport default function Step4Resume({ setResumeFile, resumeDisplayFile, setResumeDisplayFile }) {\n  return (\n    <div className=\"step\">\n      <h3>Resume</h3>\n      <Dropzone multiple={false} onDrop={setResumeFile}>\n        {({ getRootProps, getInputProps }) => (\n          <section>\n            <div {...getRootProps({ className: \"dropzone\" })}>\n              <input {...getInputProps()} />\n              {resumeDisplayFile.name ? (\n                <div>\n                  <span className=\"text-primary\">\n                    <strong>{resumeDisplayFile.name}</strong> - {resumeDisplayFile.size} bytes\n                    &nbsp;\n                    <button\n                      className=\"btn btn-outline-success\"\n                      onClick={() => {\n                        setResumeDisplayFile({});\n                      }}\n                    >\n                      x\n                    </button>\n                  </span>\n                </div>\n              ) : (\n                <strong>Drag & drop file, or click to select</strong>\n              )}\n            </div>\n          </section>\n        )}\n      </Dropzone>\n    </div>\n  );\n}\n","import React from \"react\";\nimport Dropzone from \"react-dropzone\";\n\nexport default function Step5CoverLetter({\n  setCoverLetterFile,\n  coverLetterDisplayFile,\n  setCoverLetterDisplayFile,\n}) {\n  return (\n    <div className=\"step\">\n      <h3>Cover Letter</h3>\n      <Dropzone multiple={false} onDrop={setCoverLetterFile}>\n        {({ getRootProps, getInputProps }) => (\n          <section>\n            <div {...getRootProps({ className: \"dropzone\" })}>\n              <input {...getInputProps()} />\n              {coverLetterDisplayFile.name ? (\n                <div>\n                  <span className=\"text-primary\">\n                    <strong>{coverLetterDisplayFile.name}</strong> - {coverLetterDisplayFile.size}{\" \"}\n                    bytes &nbsp;\n                    <button\n                      className=\"btn btn-outline-success\"\n                      onClick={() => {\n                        setCoverLetterDisplayFile({});\n                      }}\n                    >\n                      x\n                    </button>\n                  </span>\n                </div>\n              ) : (\n                <strong>Drag & drop file, or click to select</strong>\n              )}\n            </div>\n          </section>\n        )}\n      </Dropzone>\n    </div>\n  );\n}\n","export default function Step6Tags({ setTags }) {\n  return (\n    <div className=\"step w-50\">\n      <strong>Optional Tags Separated By Commas</strong>\n      <input\n        id=\"jobTags\"\n        name=\"jobTags\"\n        className=\"form-control\"\n        type=\"string\"\n        title=\"Job tags\"\n        placeholder=\"i.e. indeed, remote, react\"\n        onChange={(e) => {\n          setTags(e.target.value);\n        }}\n      />\n    </div>\n  );\n}\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { Tooltip } from \"reactstrap\";\nimport { BsInfoCircle } from \"react-icons/bs\";\nimport axios from \"axios\";\nimport Context from \"../utils/context\";\nimport BtnCareerRenamer from \"../components/BtnCareerRenamer\";\nimport BtnCareerSwitcher from \"../components/BtnCareerSwitcher\";\nimport BtnCareerAdder from \"../components/BtnCareerAdder\";\nimport Step1UrlDesc from \"../components/Step1UrlDesc\";\nimport Step2NameTitle from \"../components/Step2NameTitle\";\nimport Step3Notes from \"../components/Step3Notes\";\nimport Step4Resume from \"../components/Step4Resume\";\nimport Step5CoverLetter from \"../components/Step5CoverLetter\";\nimport Step6Tags from \"../components/Step6Tags\";\n\nexport default function HomePage() {\n  const context = useContext(Context);\n  const [currentCareerNum, setCurrentCareerNum] = useState(0);\n  const [careersList, setCareersList] = useState([\"C1\", \"C2\"]);\n  const [postingURL, setPostingURL] = useState(\"\");\n  const [companyName, setCompanyName] = useState(\"\");\n  const [jobTitle, setJobTitle] = useState(\"\");\n  const [jobDescription, setJobDescription] = useState(\"\");\n  const [jobNotes, setJobNotes] = useState(\"\");\n  const [byteaResume, setByteaResume] = useState();\n  const [byteaCoverLetter, setByteaCoverLetter] = useState();\n  const [resumeDisplayFile, setResumeDisplayFile] = useState({});\n  const [coverLetterDisplayFile, setCoverLetterDisplayFile] = useState({});\n  const [tags, setTags] = useState(\"\");\n  const [toolTipOn, setToolTipOn] = useState(false);\n\n  useEffect(() => {\n    let dbProfile = context.dbProfileState;\n    if (dbProfile) {\n      setCurrentCareerNum(dbProfile.current_career_num);\n      setCareersList(dbProfile.careers_list);\n    }\n  }, [context.dbProfileState]);\n\n  async function setResumeFile(newFile) {\n    const arrayBuffer = await context.getByteArray(newFile[0]);\n    console.log(arrayBuffer);\n    const bytea = new Uint8Array(arrayBuffer);\n    console.log(bytea);\n    setByteaResume(bytea);\n    setResumeDisplayFile(newFile[0]);\n  }\n\n  async function setCoverLetterFile(newFile) {\n    const arrayBuffer = await context.getByteArray(newFile[0]);\n    const bytea = new Uint8Array(arrayBuffer);\n    setByteaCoverLetter(bytea);\n    setCoverLetterDisplayFile(newFile[0]);\n  }\n\n  function handleSaveApp() {\n    if (companyName.length === 0 || jobTitle.length === 0) {\n      document.querySelector(\".required\").style.color = \"red\";\n      alert(\"Save unsuccessful. Required data is missing.\");\n      return;\n    }\n    const data = {\n      username: context.isAuthenticated ? context.user.email : \"demoUser\",\n      postingURL: postingURL,\n      companyName: companyName,\n      jobDescription: jobDescription.toString(\"html\"),\n      jobTitle: jobTitle,\n      jobNotes: jobNotes.toString(\"html\"),\n      resumeFile: byteaResume,\n      coverLetterFile: byteaCoverLetter,\n      tags: tags.split(\",\"),\n      careerName: careersList[currentCareerNum],\n      applicationDate: new Date().toString(),\n    };\n    // console.log(data);\n    axios\n      .post(\"/api/post/postapp\", data)\n      .then((res) => {\n        console.log(\"/api/post/postapp\", res);\n        if (context.isAuthenticated) {\n          console.log(`Saved to user ${context.user.email}'s database.`);\n        } else {\n          console.log(`Saved to public demonstration database.`);\n        }\n        clearForm();\n      })\n      .catch((err) => {\n        console.log(err);\n        alert(\"Not saved. Error: Website under development\");\n      });\n  }\n\n  function clearForm() {\n    setPostingURL(\"\");\n    setJobDescription(\"\");\n    setCompanyName(\"\");\n    setJobTitle(\"\");\n    setJobNotes(\"\");\n    setByteaResume([]);\n    setByteaCoverLetter([]);\n    let nodeList = document.getElementsByTagName(\"input\");\n    let nodeListConvertedToArray = Array.prototype.slice.call(nodeList);\n    nodeListConvertedToArray.forEach((input) => {\n      input.value = \"\";\n    });\n    document.querySelector(\"#step1Heading\").style.color = \"initial\";\n    document.querySelector(\"#step3Heading\").style.color = \"initial\";\n  }\n\n  return (\n    <div className=\"centeredPage\">\n      <h1>Home</h1>\n      <h3>\n        <span>\n          <BsInfoCircle id=\"tipBtn\" />\n          <Tooltip\n            placement=\"top\"\n            autohide={false}\n            isOpen={toolTipOn}\n            target=\"tipBtn\"\n            toggle={() => {\n              setToolTipOn(!toolTipOn);\n            }}\n          >\n            This application is inteneded to be used while you are applying for a job on a site like\n            Indeed or a company HR site. Fill out this form as you apply, then click the save button\n            after you've submitted your application.\n          </Tooltip>\n        </span>\n      </h3>\n      <h3>\n        Current Career:&nbsp;\n        <span className=\"text-success\">{careersList[currentCareerNum]}</span>\n      </h3>\n      <div className=\"d-flex\">\n        <BtnCareerSwitcher\n          careersList={careersList}\n          currentCareerNum={currentCareerNum}\n          setCurrentCareerNum={setCurrentCareerNum}\n        />\n        <BtnCareerAdder\n          careersList={careersList}\n          setCareersList={setCareersList}\n          setCurrentCareerNum={setCurrentCareerNum}\n        />\n        <BtnCareerRenamer\n          careersList={careersList}\n          setCareersList={setCareersList}\n          currentCareerNum={currentCareerNum}\n        />\n      </div>\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col\">\n            <Step1UrlDesc\n              id=\"step3editor\"\n              name=\"step3editor\"\n              value={jobDescription}\n              setPostingURL={setPostingURL}\n              setJobDescription={setJobDescription}\n            />\n          </div>\n          <div className=\"col w75\">\n            <Step2NameTitle setCompanyName={setCompanyName} setJobTitle={setJobTitle} />\n            <Step3Notes id=\"step4editor\" value={jobNotes} onChange={setJobNotes} />\n          </div>\n        </div>\n      </div>\n      <div className=\"container w-50\">\n        <div className=\"row\">\n          <div className=\"col\">\n            <Step4Resume\n              setResumeFile={setResumeFile}\n              resumeDisplayFile={resumeDisplayFile}\n              setResumeDisplayFile={setResumeDisplayFile}\n            />\n          </div>\n          <div className=\"col\">\n            <Step5CoverLetter\n              setCoverLetterFile={setCoverLetterFile}\n              coverLetterDisplayFile={coverLetterDisplayFile}\n              setCoverLetterDisplayFile={setCoverLetterDisplayFile}\n            />\n          </div>\n        </div>\n      </div>\n      <Step6Tags setTags={setTags} />\n      <div className=\"step w-50\">\n        <button className=\"btn btn-success p-2\" onClick={handleSaveApp}>\n          Save\n        </button>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\n\nexport default function SearchRadio({ selectedSearchOption, setSelectedSearchOption }) {\n  return (\n    <form className=\"d-flex mt-2\">\n      {/* <strong>Criteria: &nbsp;</strong> */}\n      <div className=\"form-check\">\n        <label>\n          <input\n            type=\"radio\"\n            name=\"react-tips\"\n            value=\"job_title\"\n            checked={selectedSearchOption === \"job_title\"}\n            onClick={() => {\n              setSelectedSearchOption(\"job_title\");\n            }}\n            className=\"form-check-input\"\n            readOnly\n          />\n          Job Title\n        </label>\n      </div>\n      &nbsp;\n      <div className=\"form-check\">\n        <label>\n          <input\n            type=\"radio\"\n            name=\"react-tips\"\n            value=\"company_name\"\n            checked={selectedSearchOption === \"company_name\"}\n            onClick={() => {\n              setSelectedSearchOption(\"company_name\");\n            }}\n            className=\"form-check-input\"\n            readOnly\n          />\n          Company\n        </label>\n      </div>\n      &nbsp;\n      <div className=\"form-check\">\n        <label>\n          <input\n            type=\"radio\"\n            name=\"react-tips\"\n            value=\"job_description\"\n            checked={selectedSearchOption === \"job_description\"}\n            onClick={() => {\n              setSelectedSearchOption(\"job_description\");\n            }}\n            className=\"form-check-input\"\n            readOnly\n          />\n          Description\n        </label>\n      </div>\n    </form>\n  );\n}\n","import React from \"react\";\nimport Context from \"../utils/context\";\nimport { useState, useEffect, useContext } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport { FormGroup, Label } from \"reactstrap\";\nimport { DatePicker } from \"reactstrap-date-picker\";\nimport SearchRadio from \"../components/SearchRadio\";\n\nexport default function SearchPage() {\n  const context = useContext(Context);\n  const [allUserAppsList, setAllUserAppsList] = useState([]);\n  const [displayedAppsList, setDisplayedAppsList] = useState([]);\n  const [searchString, setSearchString] = useState(\"\");\n  const [selectedSearchOption, setSelectedSearchOption] = useState(\"job_title\");\n  const [dateRangeStart, setDateRangeStart] = useState(\"\");\n  const [fmtRangeStart, setFmtRangeStart] = useState(undefined);\n  const [dateRangeEnd, setDateRangeEnd] = useState(\"\");\n  const [fmtRangeEnd, setFmtRangeEnd] = useState(undefined);\n\n  // Given an input string of n words, generate all possible consecutive-word substrings of the following word counts: n, n-1, n-2, ... 1.\n  // For example, if given \"front end web developer\", return\n  // [\"front end web developer\", \"front end web\", \"front end\", \"front\", \"end Web Developer\", \"end web\", \"end\", \"web developer\", \"web\", \"developer\"]\n  // Each substring will be used to search for a record\n  function getQuerySubSequences(string) {\n    const words = string.split(\" \");\n    let subStrings = [];\n    let rightSlice, leftSlice;\n    for (let i = 0; i < words.length; i++) {\n      rightSlice = words.slice(i);\n      for (let j = rightSlice.length; j > 0; j--) {\n        leftSlice = rightSlice.slice(0, j);\n        subStrings.push(leftSlice);\n      }\n    }\n    subStrings.sort((a, b) => {\n      return b.length - a.length;\n    });\n    return subStrings.map((item) => {\n      return item.join(\" \");\n    });\n  }\n\n  /* allUserAppsList will contain all of current user's records in this format: \n    [{app_id: 1, application_date: 'Sat Dec 24 2022 13:07:37 GMT-0800 (Pacific Standard Time)', company_name: 'xyz', job_title: 'abc', job_description: ''},\n    {app_id: 2, application_date: 'Sat Dec 24 2022 13:07:37 GMT-0800 (Pacific Standard Time)', company_name: 'xyz', job_title: 'abc', job_description: ''},\n    {app_id: 3, application_date: 'Sat Dec 24 2022 13:07:37 GMT-0800 (Pacific Standard Time)', company_name: 'xyz', job_title: 'abc', job_description: ''}] \n    Use the input values of searchString, selectedSearchOption, dateRangeStart, and dateRangeEnd to create a subset of these records that corresponds to \n    these input values. Set displayedAppsList equal to the resulting subset using setDisplayedAppsList. */\n  function clientSideSearch(\n    searchString,\n    selectedSearchOption,\n    dateRangeStart,\n    dateRangeEnd,\n    allUserAppsList,\n    setDisplayedAppsList\n  ) {\n    if (searchString) {\n      // const searchPhrases = getWordSubSequences(searchString);\n      const startDate = dateRangeStart ? new Date(dateRangeStart) : new Date(0);\n      const endDate = dateRangeEnd ? new Date(dateRangeEnd) : new Date();\n      let results = [];\n      // since we're looking for a 'contains' condition and not an equality, we need to examine each item rather than skipping like in binary search\n      allUserAppsList.forEach((app) => {\n        const appDate = new Date(app.application_date);\n        if (\n          app[selectedSearchOption].toLowerCase().includes(searchString.toLowerCase()) &&\n          appDate >= startDate &&\n          appDate <= endDate\n        ) {\n          results.push(app);\n        }\n      });\n      setDisplayedAppsList(results);\n    }\n  }\n\n  // Whenever the context changes due to new user login, load the recent records onto the search page\n  useEffect(() => {\n    loadAllRecords();\n  }, [context]);\n\n  useEffect(() => {\n    // when the date range changes, retrieve the corresponding records and load it into displayedAppsList using setDisplayedAppsList()\n    if (fmtRangeStart || fmtRangeEnd) {\n      console.log(`Range start: ${fmtRangeStart}. Range end: ${fmtRangeEnd}`);\n    }\n  }, [fmtRangeStart, fmtRangeEnd]);\n\n  function loadAllRecords() {\n    if (context.isAuthenticated && context.dbProfileState) {\n      const username = context.dbProfileState.username;\n      axios\n        .get(\"/api/get/all-user-records\", { params: { email: username } })\n        .then((res) => {\n          setAllUserAppsList(res.data);\n          setDisplayedAppsList(res.data);\n          // console.log(res.data);\n        })\n        .catch((err) => console.log(err));\n    }\n  }\n\n  function handleSetRangeStart(value, formattedValue) {\n    setDateRangeStart(value);\n    setFmtRangeStart(formattedValue);\n  }\n\n  function handleSetRangeEnd(value, formattedValue) {\n    setDateRangeEnd(value);\n    setFmtRangeEnd(formattedValue);\n  }\n\n  // Server side searching is needed should we not load all user application records into allUserAppsList when this component is mounted\n  function serverSideSearch() {\n    if (context.isAuthenticated && context.dbProfileState) {\n      const username = context.dbProfileState.username;\n      axios\n        .get(\"/api/get/search-terms\", {\n          params: { email: username, searchStr: searchString, searchOption: selectedSearchOption },\n        })\n        .then((res) => {\n          setDisplayedAppsList(res.data);\n          console.log(res.data);\n        })\n        .catch((err) => console.log(err));\n    }\n  }\n\n  function resetSearchParams() {\n    setSelectedSearchOption(\"job_title\");\n    setSearchString(\"\");\n  }\n\n  return (\n    <div className=\"centeredPage\">\n      <h1>Search</h1>\n      <form\n        className=\"form-inline d-flex my-2 my-lg-0\"\n        onSubmit={(e) => {\n          e.preventDefault();\n          // serverSideSearch();\n          clientSideSearch(\n            searchString,\n            selectedSearchOption,\n            dateRangeStart,\n            dateRangeEnd,\n            allUserAppsList,\n            setDisplayedAppsList\n          );\n        }}\n      >\n        <input\n          className=\"form-control mr-sm-2\"\n          id=\"searchInput\"\n          type=\"search\"\n          placeholder=\"Search\"\n          aria-label=\"Search\"\n          value={searchString}\n          onChange={(e) => {\n            setSearchString(e.target.value);\n          }}\n        />\n        <button className=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">\n          Search\n        </button>\n      </form>\n\n      <SearchRadio\n        selectedSearchOption={selectedSearchOption}\n        setSelectedSearchOption={setSelectedSearchOption}\n      />\n\n      <div className=\"d-flex mt-3\">\n        <FormGroup className=\"text-center\">\n          <Label>\n            <u>From</u>\n          </Label>\n          <DatePicker\n            id=\"example-datepicker1\"\n            value={dateRangeStart}\n            onChange={(v, f) => handleSetRangeStart(v, f)}\n          />\n        </FormGroup>\n        &nbsp;\n        <FormGroup className=\"text-center\">\n          <Label>\n            <u>To</u>\n          </Label>\n          <DatePicker\n            id=\"example-datepicker2\"\n            value={dateRangeEnd}\n            onChange={(v, f) => handleSetRangeEnd(v, f)}\n          />\n        </FormGroup>\n      </div>\n      <button\n        className=\"btn btn-outline-success my-2 my-sm-0\"\n        onClick={() => {\n          loadAllRecords();\n          resetSearchParams();\n        }}\n      >\n        Reset\n      </button>\n\n      <table className=\"table table-bordered text-center w-50 mt-4\">\n        <thead>\n          <tr>\n            <th>Date</th>\n            <th>Company</th>\n            <th>Job Title</th>\n            <th>Application</th>\n          </tr>\n        </thead>\n        <tbody>\n          {displayedAppsList.length > 0 &&\n            displayedAppsList.map((item, i) => {\n              let date = new Date(item.application_date);\n              return (\n                <tr key={i}>\n                  <td>\n                    <Link to=\"/appviewer\">{`${date.getFullYear()}-${\n                      date.getMonth() + 1\n                    }-${date.getDate()}`}</Link>\n                  </td>\n                  <td>\n                    <Link to=\"/appviewer\">{item.company_name}</Link>\n                  </td>\n                  <td>\n                    <Link to=\"/appviewer\">{item.job_title}</Link>\n                  </td>\n                  <td>\n                    <Link to=\"/appviewer\">View/Edit</Link>\n                  </td>\n                </tr>\n              );\n            })}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n","export default function AppViewer() {\n  return (\n    <div className=\"centeredPage\">\n      <h1>App Viewer</h1>\n      <p>View and edit a selected application</p>\n    </div>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/loading.330b7d99.svg\";","import React from \"react\";\nimport loading from \"../assets/loading.svg\";\n\nconst LoadingSpinner = () => (\n  <div className=\"page\">\n    <h3>Loading</h3>\n    <img src={loading} alt=\"Loading\" />\n  </div>\n);\n\nexport default LoadingSpinner;\n","import React, { useContext } from \"react\";\nimport { useAuth0, withAuthenticationRequired } from \"@auth0/auth0-react\";\nimport LoadingSpinner from \"../components/LoadingSpinner\";\nimport Context from \"../utils/context\";\n\nconst Profile = () => {\n  const { user, logout } = useAuth0();\n  const context = useContext(Context);\n\n  return (\n    <div className=\"centeredPage\">\n      <h1>Profile</h1>\n      <button className=\"btn btn-primary\" onClick={() => logout()}>\n        Log out\n      </button>\n      {user.email && <p>Email: {user.email}</p>}\n      {user.family_name && <p>Family name: {user.family_name}</p>}\n      {user.given_name && <p>Given name: {user.given_name}</p>}\n      {user.name && <p>Name: {user.name}</p>}\n      {user.locale && <p>Locale: {user.locale}</p>}\n      {user.nickname && <p>Nickname: {user.nickname}</p>}\n      {user.sub && <p>User ID: {user.sub}</p>}\n      <button\n        className=\"btn btn-primary\"\n        onClick={() => {\n          console.log(context.stateAuthReducer);\n          console.log(user);\n        }}\n        style={{ padding: \"5px\" }}\n      >\n        Log the user profile(stateAuthReducer) to the console\n      </button>\n    </div>\n  );\n};\n\nexport default withAuthenticationRequired(Profile, {\n  onRedirecting: () => <LoadingSpinner />,\n});\n","import React, { useState } from \"react\";\nimport { Tooltip } from \"reactstrap\";\nimport { BsInfoCircle } from \"react-icons/bs\";\n\nconst Search = () => {\n  const [toolTipOn1, setToolTipOn1] = useState(false);\n\n  return (\n    <div className=\"centeredPage\">\n      <h1>About</h1>\n      <p>About page</p>\n      <h3>\n        <span>\n          <BsInfoCircle id=\"tipBtn\" />\n          <Tooltip\n            placement=\"top\"\n            autohide={false}\n            isOpen={toolTipOn1}\n            target=\"tipBtn\"\n            toggle={() => {\n              setToolTipOn1(!toolTipOn1);\n            }}\n          >\n            This webpage is inteneded to be used while you are applying for a job on a site like\n            Indeed or a company HR site. Fill out this form as you apply, then click the save button\n            after you've submitted your application.\n          </Tooltip>\n        </span>\n      </h3>\n    </div>\n  );\n};\nexport default Search;\n","import React, { useReducer, useEffect } from \"react\";\nimport Context from \"./utils/context\";\nimport * as AuthReducer from \"./store/reducers/authReducer\";\nimport * as ACTIONS from \"./store/actions/actions\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport axios from \"axios\";\nimport { HashRouter, Route, Routes } from \"react-router-dom\";\nimport NavBar from \"./components/NavBar\";\nimport HomePage from \"./pages/HomePage\";\nimport SearchPage from \"./pages/SearchPage\";\nimport AppViewerPage from \"./pages/AppViewerPage\";\nimport ProfilePage from \"./pages/ProfilePage\";\nimport AboutPage from \"./pages/AboutPage\";\n\nexport default function ContextState() {\n  const auth0 = useAuth0();\n\n  useEffect(() => {\n    if (auth0.isAuthenticated) {\n      let profile = auth0.user;\n      dispatchLogin();\n      dispatchSetAuthProfile(profile);\n      axios\n        .post(\"/api/post/userprofiletodb\", profile)\n        .then(\n          axios\n            .get(\"/api/get/userprofilefromdb\", { params: { email: profile.email } })\n            .then((res) => dispatchSetDbProfile(res.data[0]))\n            .catch((err) => console.log(err))\n        )\n        .catch((err) => console.log(err));\n    } else {\n      dispatchLogout();\n      dispatchRemoveAuthProfile();\n    }\n  }, [auth0.isAuthenticated, auth0.user]);\n\n  /*Auth Reducer: although the useAuth0 library object provides global auth state access from the \n  cloud, storing our own version in a reducer at login allows for local retrieval of auth state values \n  in between login/logout*/\n  const [stateAuthReducer, dispatchAuthReducer] = useReducer(\n    AuthReducer.AuthReducer,\n    AuthReducer.initialState\n  );\n\n  function dispatchLogin() {\n    dispatchAuthReducer(ACTIONS.login_success());\n  }\n\n  function dispatchLogout() {\n    dispatchAuthReducer(ACTIONS.login_failure());\n  }\n\n  function dispatchSetAuthProfile(profile) {\n    dispatchAuthReducer(ACTIONS.set_profile(profile));\n  }\n\n  function dispatchSetDbProfile(profile) {\n    dispatchAuthReducer(ACTIONS.set_db_profile(profile));\n  }\n\n  function dispatchRemoveAuthProfile() {\n    dispatchAuthReducer(ACTIONS.remove_profile());\n  }\n\n  function getByteArray(file) {\n    return new Promise((acc, err) => {\n      const reader = new FileReader();\n      reader.onloadend = (event) => {\n        acc(event.target.result);\n      };\n      reader.onerror = (error) => {\n        err(error);\n      };\n      reader.readAsArrayBuffer(file);\n    });\n  }\n\n  return (\n    <Context.Provider\n      value={{\n        auth0: auth0,\n        user: auth0.user,\n        dispatchLogin: () => dispatchLogin(),\n        dispatchLogout: () => dispatchLogout(),\n        dispatchSetAuthProfile: (profile) => dispatchSetAuthProfile(profile),\n        dispatchRemoveAuthProfile: () => dispatchRemoveAuthProfile(),\n        dispatchSetDbProfile: (profile) => dispatchSetDbProfile(profile),\n        stateAuthReducer: stateAuthReducer,\n        isAuthenticated: stateAuthReducer.isAuthenticated,\n        dbProfileState: stateAuthReducer.dbProfile,\n        authProfile: stateAuthReducer.authProfile,\n        getByteArray: (file) => getByteArray(file),\n      }}\n    >\n      <HashRouter basename=\"/\">\n        <NavBar />\n        <Routes>\n          <Route path=\"/\" element={<HomePage />} />\n          <Route path=\"/about\" element={<AboutPage />} />\n          <Route path=\"/home\" element={<HomePage />} />\n          <Route path=\"/search\" element={<SearchPage />} />\n          <Route path=\"/appviewer\" element={<AppViewerPage />} />\n          <Route path=\"/profile\" element={<ProfilePage />} />\n        </Routes>\n      </HashRouter>\n    </Context.Provider>\n  );\n}\n","import * as ACTION_TYPES from \"./actionTypes\";\r\n\r\nexport const SUCCESS = {\r\n  type: ACTION_TYPES.SUCCESS,\r\n};\r\n\r\nexport const FAILURE = {\r\n  type: ACTION_TYPES.FAILURE,\r\n};\r\n\r\nexport const success = () => {\r\n  return {\r\n    type: ACTION_TYPES.SUCCESS,\r\n  };\r\n};\r\n\r\nexport const failure = () => {\r\n  return {\r\n    type: ACTION_TYPES.FAILURE,\r\n  };\r\n};\r\n\r\nexport const set_profile = (profile) => {\r\n  return {\r\n    type: ACTION_TYPES.SET_PROFILE,\r\n    payload: profile,\r\n  };\r\n};\r\n\r\nexport const remove_profile = () => {\r\n  return {\r\n    type: ACTION_TYPES.REMOVE_PROFILE,\r\n  };\r\n};\r\n\r\nexport const login_success = () => {\r\n  return {\r\n    type: ACTION_TYPES.LOGIN_SUCCESS,\r\n  };\r\n};\r\n\r\nexport const login_failure = () => {\r\n  return {\r\n    type: ACTION_TYPES.LOGIN_FAILURE,\r\n  };\r\n};\r\n\r\nexport const user_input_change = (text) => {\r\n  return {\r\n    type: ACTION_TYPES.USER_INPUT_CHANGE,\r\n    payload: text,\r\n  };\r\n};\r\n\r\nexport const user_input_submit = (text) => {\r\n  return {\r\n    type: ACTION_TYPES.USER_INPUT_SUBMIT,\r\n    payload: text,\r\n  };\r\n};\r\n\r\nexport const set_db_profile = (profile) => {\r\n  return {\r\n    type: ACTION_TYPES.SET_DB_PROFILE,\r\n    payload: profile,\r\n  };\r\n};\r\n\r\nexport const remove_db_profile = () => {\r\n  return {\r\n    type: ACTION_TYPES.REMOVE_DB_PROFILE,\r\n  };\r\n};\r\n\r\nexport const set_db_posts = (posts) => {\r\n  return {\r\n    type: ACTION_TYPES.FETCH_DB_POSTS,\r\n    payload: posts,\r\n  };\r\n};\r\n\r\nexport const remove_db_posts = () => {\r\n  return {\r\n    type: ACTION_TYPES.REMOVE_DB_POSTS,\r\n  };\r\n};\r\n","// import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport { Auth0Provider } from \"@auth0/auth0-react\";\nimport { authConfig } from \"./utils/authConfig\";\nimport App from \"./App\";\nimport \"./style.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <Auth0Provider {...authConfig}>\n      <App />\n  </Auth0Provider>\n);\n"],"sourceRoot":""}