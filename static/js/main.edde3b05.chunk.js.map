{"version":3,"sources":["utils/history.js","utils/authConfig.js","components/NavBar.js","utils/context.js","components/BtnCareerRenamer.js","components/BtnCareerSwitcher.js","components/BtnCareerAdder.js","components/Step1.js","components/Step2.js","components/Step3.js","components/Step4.js","components/FilesDropper.js","components/Step5.js","components/Step6.js","components/StepSave.js","pages/HomePage.js","pages/SearchPage.js","assets/loading.svg","components/LoadingSpinner.js","pages/ProfilePage.js","pages/DispatchAuthPage.js","pages/AboutPage.js","Routes.js","store/actions/actionTypes.js","store/reducers/authReducer.js","App.js","store/actions/actions.js","index.js"],"names":["createBrowserHistory","authConfig","domain","clientId","redirectUri","window","location","origin","onRedirectCallback","appState","history","push","returnTo","pathname","NavBar","auth0","useAuth0","className","id","to","style","padding","onClick","e","preventDefault","isAuthenticated","user","email","Context","React","createContext","BtnCareerRenamer","careersList","setCareersList","currentCareerNum","context","useContext","useState","newName","setNewName","modalOn","setModalOn","toggleModal","validateRename","length","find","item","alert","newList","data","username","dbProfileState","axios","put","then","res","console","log","tempProfile","careers_list","dispatchSetDbProfile","catch","err","updateRenameCareer","type","isOpen","toggle","onSubmit","name","title","placeholder","onChange","target","value","color","BtnCareerSwitcher","setCurrentCareerNum","map","i","disabled","newNum","currentUser","current_career_num","updateCurrentCareerNum","BtnCareerAdder","newCareer","setNewCareer","validateAddCareer","updateCareersList","autoFocus","Step1","setPostingURL","Step2","jobDescription","setJobDescription","toolbarConfig","display","INLINE_STYLE_BUTTONS","label","BLOCK_TYPE_DROPDOWN","BLOCK_TYPE_BUTTONS","Step3","setCompanyName","setJobTitle","htmlFor","Step4","jobNotes","setJobNotes","toolTipOn","setToolTipOn","placement","autohide","FilesDropper","handleFilesDrop","files","setFiles","multiple","onDrop","getRootProps","getInputProps","file","size","arr","splice","deleteFile","Step5","Step6","setTags","StepSave","handleSaveApp","HomePage","postingURL","RichTextEditor","createEmptyValue","companyName","jobTitle","tags","getTimeStamp","date","Date","year","getFullYear","toString","month","getMonth","day","getDate","hour","getHours","min","getMinutes","parseInt","useEffect","dbProfile","newFiles","document","querySelector","split","careerName","applicationDate","post","nodeList","getElementsByTagName","Array","prototype","slice","call","forEach","input","clearForm","Search","LoadingSpinner","src","loading","alt","withAuthenticationRequired","logout","family_name","given_name","locale","nickname","sub","stateAuthReducer","onRedirecting","DispatchAuthPage","profile","dispatchLogin","dispatchSetAuthProfile","get","params","replace","dispatchLogout","dispatchRemoveAuthProfile","Routes","path","exact","component","AboutPage","SearchPage","ProfilePage","LOGIN_SUCCESS","LOGIN_FAILURE","SET_PROFILE","REMOVE_PROFILE","SET_DB_PROFILE","REMOVE_DB_PROFILE","initialState","authProfile","AuthReducer","state","action","ACTION_TYPES","payload","ContextState","useReducer","dispatchAuthReducer","ACTIONS","setTimeout","Provider","ReactDOM","createRoot","getElementById","render"],"mappings":"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","file":"static/js/main.edde3b05.chunk.js","sourcesContent":["import { createBrowserHistory } from \"history\";\n\nexport default createBrowserHistory();\n","import history from \"./history\";\n\nconst appConfig = {\n  domain: \"dev-9npol9r6.us.auth0.com\",\n  clientId: \"4GfZ4cfLN9HiX42YH3oWPq8NHKTiCAIS\",\n};\n\nconst onRedirectCallback = (appState) => {\n  history.push(appState && appState.returnTo ? appState.returnTo : window.location.pathname);\n};\n\nexport const authConfig = {\n  domain: appConfig.domain,\n  clientId: appConfig.clientId,\n  redirectUri: window.location.origin,\n  onRedirectCallback,\n};\n","import { Link } from \"react-router-dom\";\n// import React, { useContext } from \"react\";\n// import Context from \"../utils/context\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\n// import { useParams } from \"react-router-dom\";\nimport history from \"../utils/history\";\n\nconst NavBar = () => {\n  const auth0 = useAuth0();\n  // let { page } = useParams();\n\n  return (\n    <div className=\"d-flex justify-content-center\">\n      <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n          <ul className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item active\">\n              <Link to=\"/home\" style={{ padding: \"5px\" }}>\n                Home\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/search\" style={{ padding: \"5px\" }}>\n                Search\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/about\" style={{ padding: \"5px\" }}>\n                About\n              </Link>\n            </li>\n          </ul>\n          <button\n            className=\"btn btn-outline-primary\"\n            onClick={(e) => {\n              e.preventDefault();\n              // auth0.isAuthenticated ? history.replace(\"/profile\") : auth0.loginWithRedirect();\n            }}\n          >\n            {auth0.isAuthenticated ? auth0.user.email : \"Log in\"}\n          </button>\n        </div>\n      </nav>\n    </div>\n  );\n};\n\nexport default NavBar;\n","import React from \"react\";\n\nconst Context = React.createContext();\n\nexport default Context;\n","import { useState, useContext } from \"react\";\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\nimport Context from \"../utils/context\";\nimport axios from \"axios\";\n\nexport default function BtnCareerRenamer({ careersList, setCareersList, currentCareerNum }) {\n  const context = useContext(Context);\n  const [newName, setNewName] = useState(careersList[currentCareerNum]);\n  const [modalOn, setModalOn] = useState(false);\n\n  function toggleModal() {\n    setModalOn(!modalOn);\n  }\n\n  function validateRename() {\n    if (newName.length === 0 || newName === careersList[currentCareerNum]) {\n      return;\n    }\n    if (\n      careersList.find((item) => {\n        return item === newName;\n      })\n    ) {\n      alert(`Error: \"${newName}\" already exists. Cannot create duplicate careers.`);\n    } else {\n      updateRenameCareer(careersList, currentCareerNum, newName);\n      toggleModal();\n    }\n  }\n\n  /* Update careersList in db whenever careersList changes AND all job applications made under the careers that have been changed must now have their career values updated to the new career names*/\n  function updateRenameCareer(careersList, currentCareerNum, newName) {\n    const oldName = careersList[currentCareerNum];\n    let newList = [...careersList];\n    newList[currentCareerNum] = newName;\n    let currentUser =\n      context.isAuthenticated && context.dbProfileState\n        ? context.dbProfileState.username\n        : \"demoUser\";\n    const data = {\n      username: currentUser,\n      careersList: newList,\n    };\n    // update careers list\n    axios\n      .put(\"/api/put/careerslist\", data) // db update\n      .then((res) => {\n        console.log(\"api/put/careerslist res\", res);\n        const tempProfile = { ...context.dbProfileState };\n        tempProfile.careers_list = data.careersList;\n        context.dispatchSetDbProfile(tempProfile); // reducer update\n        setCareersList(newList); // HomePage ui update\n      })\n      .catch((err) => {\n        console.log(\"api/put/careernum err\", err);\n      });\n    // update all application entries with the old name to the new name\n    axios.put(\"/api/put/???\", data);\n  }\n\n  return (\n    <div>\n      <div className=\"dropdown\">\n        <button type=\"button\" className=\"btn btn-success m-1\" onClick={toggleModal}>\n          Rename Current Career\n        </button>\n        <Modal isOpen={modalOn} toggle={toggleModal}>\n          <ModalHeader toggle={toggleModal}>\n            Rename The Current Career: \"{careersList[currentCareerNum]}\"\n          </ModalHeader>\n          <ModalBody>\n            <form\n              onSubmit={(e) => {\n                e.preventDefault();\n                validateRename();\n              }}\n            >\n              <div>\n                Note: renaming this career will change the \"career\" attribute of all job\n                applications saved with the career name \"{careersList[currentCareerNum]}\" to the new\n                name which you're about to enter, and the operation may take some time to complete.\n              </div>\n              <input\n                name=\"renameCareer\"\n                id=\"renameCareer\"\n                type=\"text\"\n                className=\"form-control\"\n                title=\"Rename Career\"\n                placeholder=\"New name\"\n                onChange={(e) => {\n                  setNewName(e.target.value);\n                }}\n              />\n              <button type=\"button\" className=\"btn btn-success w-100\" onClick={validateRename}>\n                Rename\n              </button>\n            </form>\n          </ModalBody>\n          <ModalFooter>\n            <Button color=\"primary\" onClick={toggleModal}>\n              Close\n            </Button>\n          </ModalFooter>\n        </Modal>\n      </div>\n    </div>\n  );\n}\n","import { Link } from \"react-router-dom\";\nimport { useState, useContext } from \"react\";\nimport Context from \"../utils/context\";\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\nimport axios from \"axios\";\n\nexport default function BtnCareerSwitcher({ careersList, currentCareerNum, setCurrentCareerNum }) {\n  const context = useContext(Context);\n  const [modalOn, setModalOn] = useState(false);\n\n  function updateCurrentCareerNum(newNum) {\n    let currentUser =\n      context.isAuthenticated && context.dbProfileState\n        ? context.dbProfileState.username\n        : \"demoUser\";\n    const data = {\n      currentCareerNum: newNum,\n      username: currentUser,\n    };\n    axios\n      .put(\"/api/put/careernum\", data) // db update\n      .then((res) => {\n        console.log(\"api/put/careernum res\", res);\n        const tempProfile = { ...context.dbProfileState };\n        tempProfile.current_career_num = data.currentCareerNum;\n        context.dispatchSetDbProfile(tempProfile); // reducer update\n        setCurrentCareerNum(newNum); // HomePage ui update\n      })\n      .catch((err) => {\n        console.log(\"api/put/careernum err\", err);\n      });\n  }\n\n  function toggleModal() {\n    setModalOn(!modalOn);\n  }\n\n  return (\n    <div>\n      <div className=\"dropdown\">\n        <button\n          type=\"button\"\n          className=\"btn btn-success m-1\"\n          onClick={() => {\n            toggleModal();\n          }}\n        >\n          Switch Career\n        </button>\n        <Modal isOpen={modalOn} toggle={toggleModal}>\n          <ModalHeader toggle={toggleModal}>Select career:</ModalHeader>\n          <ModalBody>\n            {careersList.map((name, i) => {\n              return (\n                <div key={i}>\n                  <button\n                    type=\"button\"\n                    className=\"btn btn-success w-100\"\n                    disabled={currentCareerNum === i ? true : false}\n                    onClick={() => {\n                      updateCurrentCareerNum(i);\n                      toggleModal();\n                    }}\n                  >\n                    {name}\n                  </button>\n                </div>\n              );\n            })}\n            <div className=\"text-center\">\n              <Link to=\"/about\">How to delete a career</Link>\n            </div>\n          </ModalBody>\n          <ModalFooter>\n            <Button color=\"primary\" onClick={toggleModal}>\n              Close\n            </Button>\n          </ModalFooter>\n        </Modal>\n      </div>\n    </div>\n  );\n}\n","import { useState, useContext } from \"react\";\nimport Context from \"../utils/context\";\nimport axios from \"axios\";\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\n\nexport default function BtnCareerAdder({ careersList, setCareersList }) {\n  const context = useContext(Context);\n  const [newCareer, setNewCareer] = useState(\"\");\n  const [modalOn, setModalOn] = useState(false);\n\n  function toggleModal() {\n    setModalOn(!modalOn);\n  }\n\n  function validateAddCareer() {\n    if (newCareer.length === 0) {\n      return;\n    }\n    if (\n      careersList.find((item) => {\n        return item === newCareer;\n      })\n    ) {\n      alert(`\"${newCareer}\" already exists. Cannot create duplicate careers.`);\n    } else {\n      let newList = [...careersList, newCareer];\n      updateCareersList(newList);\n      toggleModal();\n    }\n  }\n\n  function updateCareersList(newList) {\n    let currentUser =\n      context.isAuthenticated && context.dbProfileState\n        ? context.dbProfileState.username\n        : \"demoUser\";\n    const data = {\n      username: currentUser,\n      careersList: newList,\n    };\n    axios\n      .put(\"/api/put/careerslist\", data) // db update\n      .then((res) => {\n        console.log(\"api/put/careerslist res\", res);\n        const tempProfile = { ...context.dbProfileState };\n        tempProfile.careers_list = data.careersList;\n        context.dispatchSetDbProfile(tempProfile); // reducer update\n        setCareersList(newList); // HomePage ui update\n      })\n      .catch((err) => {\n        console.log(\"api/put/careernum err\", err);\n      });\n  }\n\n  return (\n    <div>\n      <div className=\"dropdown\">\n        <button\n          type=\"button\"\n          className=\"btn btn-success m-1\"\n          onClick={() => {\n            toggleModal();\n          }}\n        >\n          Add Career\n        </button>\n        <Modal isOpen={modalOn} toggle={toggleModal}>\n          <ModalHeader toggle={toggleModal}>New career name:</ModalHeader>\n          <ModalBody>\n            <form\n              autoFocus\n              onSubmit={(e) => {\n                e.preventDefault();\n                validateAddCareer();\n              }}\n            >\n              <input\n                name=\"newCareer\"\n                id=\"newCareer\"\n                type=\"text\"\n                title=\"New Career\"\n                placeholder=\"career\"\n                className=\"form-control\"\n                onChange={(e) => {\n                  setNewCareer(e.target.value);\n                }}\n              />\n              <button type=\"submit\" className=\"btn btn-success w-100\">\n                Add\n              </button>\n            </form>\n          </ModalBody>\n          <ModalFooter>\n            <Button color=\"primary\" onClick={toggleModal}>\n              Close\n            </Button>\n          </ModalFooter>\n        </Modal>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\n\nexport default function Step1({ setPostingURL }) {\n  return (\n    <div className=\"step w-md-75\">\n      <h3 id=\"step1Heading\">Copy and paste the job posting page URL.</h3>\n      <input\n        id=\"jobPostingURL\"\n        name=\"jobPostingURL\"\n        className=\"form-control\"\n        type=\"url\"\n        title=\"Job Posting URL\"\n        onChange={(e) => {\n          setPostingURL(e.target.value);\n        }}\n      />\n    </div>\n  );\n}\n","import React from \"react\";\nimport RichTextEditor from \"react-rte\";\n\nexport default function Step2({ jobDescription, setJobDescription }) {\n  const toolbarConfig = {\n    // Optionally specify the groups to display (displayed in the order listed).\n    display: [\n      \"INLINE_STYLE_BUTTONS\",\n      \"BLOCK_TYPE_BUTTONS\",\n      \"LINK_BUTTONS\",\n      \"BLOCK_TYPE_DROPDOWN\",\n      \"HISTORY_BUTTONS\",\n    ],\n    INLINE_STYLE_BUTTONS: [\n      { label: \"Bold\", style: \"BOLD\", className: \"custom-css-class\" },\n      { label: \"Italic\", style: \"ITALIC\" },\n      { label: \"Underline\", style: \"UNDERLINE\" },\n      {\n        label: \"Strikethrough\",\n        style: \"STRIKETHROUGH\",\n      },\n      { label: \"Monospace\", style: \"CODE\" },\n    ],\n    BLOCK_TYPE_DROPDOWN: [\n      { label: \"Normal\", style: \"unstyled\" },\n      { label: \"Heading Large\", style: \"header-one\" },\n      { label: \"Heading Medium\", style: \"header-two\" },\n      { label: \"Heading Small\", style: \"header-three\" },\n    ],\n    BLOCK_TYPE_BUTTONS: [\n      { label: \"UL\", style: \"unordered-list-item\" },\n      { label: \"OL\", style: \"ordered-list-item\" },\n      { label: \"Blockquote\", style: \"blockquote\" },\n    ],\n  };\n  return (\n    <div className=\"step w-50\">\n      <h3 id=\"step2Heading\">Copy and paste the full job posting.</h3>\n      <RichTextEditor\n        id=\"jobDescription\"\n        value={jobDescription}\n        placeholder=\"CLICK TO ADD TEXT\"\n        className=\"richTextEditor\"\n        onChange={setJobDescription}\n        toolbarConfig={toolbarConfig}\n      />\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\n\nexport default function Step3({ setCompanyName, setJobTitle }) {\n  const [modalOn, setModalOn] = useState(false);\n\n  function toggleModal() {\n    setModalOn(!modalOn);\n  }\n\n  return (\n    <div className=\"step w-md-75\">\n      <h3 id=\"step3Heading\">Copy and paste company name and job title (required).</h3>\n      <div className=\"d-flex justify-content-space-between justify-content-md-center gap-1 gap-md-5\">\n        <div className=\"d-flex flex-column\">\n          <label htmlFor=\"jobTitle\">Company: </label>\n          <input\n            id=\"companyName\"\n            className=\"form-control w-100\"\n            name=\"companyName\"\n            type=\"text\"\n            title=\"Company Name\"\n            // onClick={toggleModal}\n            onChange={(e) => {\n              setCompanyName(e.target.value);\n            }}\n          />\n        </div>\n        <div className=\"d-flex flex-column\">\n          <label htmlFor=\"jobTitle\">Title: </label>\n          <input\n            id=\"jobTitle\"\n            className=\"form-control w-100\"\n            name=\"jobTitle\"\n            type=\"text\"\n            title=\"Job Title\"\n            // onClick={toggleModal}\n            onChange={(e) => {\n              setJobTitle(e.target.value);\n            }}\n          />\n        </div>\n      </div>\n      <Modal isOpen={modalOn} toggle={toggleModal}>\n        <ModalHeader toggle={toggleModal}>You are currently not logged in.</ModalHeader>\n        <ModalBody>\n          If you proceed to save this application without logging in, it will be saved to the public\n          demonstration database. It will not be saved to your personal account. Please log in to\n          save your application privately.\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"primary\" onClick={toggleModal}>\n            Ok\n          </Button>\n        </ModalFooter>\n      </Modal>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport RichTextEditor from \"react-rte\";\nimport { Tooltip } from \"reactstrap\";\nimport { BsInfoCircle } from \"react-icons/bs\";\n\nexport default function Step4({ jobNotes, setJobNotes }) {\n  const [toolTipOn, setToolTipOn] = useState(false);\n  const toolbarConfig = {\n    // Optionally specify the groups to display (displayed in the order listed).\n    display: [\n      \"INLINE_STYLE_BUTTONS\",\n      \"BLOCK_TYPE_BUTTONS\",\n      \"LINK_BUTTONS\",\n      \"BLOCK_TYPE_DROPDOWN\",\n      \"HISTORY_BUTTONS\",\n    ],\n    INLINE_STYLE_BUTTONS: [\n      { label: \"Bold\", style: \"BOLD\", className: \"custom-css-class\" },\n      { label: \"Italic\", style: \"ITALIC\" },\n      { label: \"Underline\", style: \"UNDERLINE\" },\n      {\n        label: \"Strikethrough\",\n        style: \"STRIKETHROUGH\",\n      },\n      { label: \"Monospace\", style: \"CODE\" },\n    ],\n    BLOCK_TYPE_DROPDOWN: [\n      { label: \"Normal\", style: \"unstyled\" },\n      { label: \"Heading Large\", style: \"header-one\" },\n      { label: \"Heading Medium\", style: \"header-two\" },\n      { label: \"Heading Small\", style: \"header-three\" },\n    ],\n    BLOCK_TYPE_BUTTONS: [\n      { label: \"UL\", style: \"unordered-list-item\" },\n      { label: \"OL\", style: \"ordered-list-item\" },\n      { label: \"Blockquote\", style: \"blockquote\" },\n    ],\n  };\n\n  return (\n    <div className=\"step w-50\">\n      <h3>\n        Type in your notes for this application.&nbsp;\n        <span>\n          <BsInfoCircle id=\"noteTipBtn\" />\n          <Tooltip\n            placement=\"top\"\n            autohide={false}\n            isOpen={toolTipOn}\n            target=\"noteTipBtn\"\n            toggle={() => {\n              setToolTipOn(!toolTipOn);\n            }}\n          >\n            Deconstruct the job description and highlight the important parts. Record notes about\n            your analysis of the position, company research, company web links, application Q&As,\n            quizzes, contact names, email addresses, external application sites, etc.\n          </Tooltip>\n        </span>\n      </h3>\n      <RichTextEditor\n        id=\"jobNotes\"\n        value={jobNotes}\n        placeholder=\"CLICK TO ADD TEXT\"\n        className=\"richTextEditor\"\n        onChange={setJobNotes}\n        toolbarConfig={toolbarConfig}\n      />\n    </div>\n  );\n}\n","// https://react-dropzone.js.org/#section-examples\nimport Dropzone from \"react-dropzone\";\nimport React from \"react\";\n\nexport default function FilesDropper({ handleFilesDrop, files, setFiles }) {\n  function deleteFile(i) {\n    let arr = [...files];\n    arr.splice(i, 1);\n    setFiles(arr);\n  }\n\n  return (\n    <Dropzone multiple={true} onDrop={handleFilesDrop}>\n      {({ getRootProps, getInputProps }) => (\n        <section>\n          <div {...getRootProps({ className: \"dropzone\" })}>\n            <input {...getInputProps()} />\n            <h5>Drag & drop files, or click to select</h5>\n          </div>\n          <div>\n            {files.map((file, i) => (\n              <div key={i}>\n                <span className=\"text-primary\">\n                  <strong>{file.name}</strong> - {file.size} bytes &nbsp;\n                  <button\n                    className=\"btn btn-outline-success\"\n                    onClick={() => {\n                      deleteFile(i);\n                    }}\n                  >\n                    x\n                  </button>\n                </span>\n              </div>\n            ))}\n          </div>\n        </section>\n      )}\n    </Dropzone>\n  );\n}\n","import React from \"react\";\nimport FilesDropper from \"../components/FilesDropper\";\n\nexport default function Step5({ handleFilesDrop, files, setFiles }) {\n  return (\n    <div className=\"step w-md-75\">\n      <h3>\n        Drag and drop the documents you used in this application, such as your resume and cover\n        letter.\n      </h3>\n      <FilesDropper\n        handleFilesDrop={handleFilesDrop}\n        files={files}\n        setFiles={setFiles}\n      />\n    </div>\n  );\n}\n","import React from \"react\";\n\nexport default function Step6({ setTags }) {\n  return (\n    <div className=\"step  w-md-75\">\n      <h3>Add optional tags separated by commas.</h3>\n      <input\n        id=\"jobTags\"\n        name=\"jobTags\"\n        className=\"form-control\"\n        type=\"string\"\n        title=\"Job tags\"\n        onChange={(e) => {\n          setTags(e.target.value);\n        }}\n      />\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport { Tooltip } from \"reactstrap\";\nimport { BsInfoCircle } from \"react-icons/bs\";\n\nexport default function StepSave({ handleSaveApp }) {\n  const [toolTipOn, setToolTipOn] = useState(false);\n\n  return (\n    <div className=\"step \">\n      <h3>\n        After submitting your application online, click Save.\n        <span>\n          <BsInfoCircle id=\"saveTipBtn\" />\n          <Tooltip\n            placement=\"top\"\n            autohide={false}\n            isOpen={toolTipOn}\n            target=\"saveTipBtn\"\n            toggle={() => {\n              setToolTipOn(!toolTipOn);\n            }}\n          >\n            After saving this application, you can later access the saved information to guide your\n            interview preparation and make further edits like adding interview dates, pre-interview\n            notes, interview Q&A prep, post-interview notes, negotiation details, ideas for\n            improvement and more. You should keep all of your records into the future to help\n            improve your job search skills.\n          </Tooltip>\n        </span>\n      </h3>\n      <button className=\"btn btn-success p-2\" onClick={handleSaveApp}>\n        Save\n      </button>\n    </div>\n  );\n}\n","import React, { useContext, useEffect, useState } from \"react\";\nimport Context from \"../utils/context\";\nimport axios from \"axios\";\n// import history from \"../utils/history\";\nimport RichTextEditor from \"react-rte\";\nimport BtnCareerRenamer from \"../components/BtnCareerRenamer\";\nimport BtnCareerSwitcher from \"../components/BtnCareerSwitcher\";\nimport BtnCareerAdder from \"../components/BtnCareerAdder\";\nimport Step1 from \"../components/Step1\";\nimport Step2 from \"../components/Step2\";\nimport Step3 from \"../components/Step3\";\nimport Step4 from \"../components/Step4\";\nimport Step5 from \"../components/Step5\";\nimport Step6 from \"../components/Step6\";\nimport StepSave from \"../components/StepSave\";\n\nexport default function HomePage() {\n  const context = useContext(Context);\n  const [currentCareerNum, setCurrentCareerNum] = useState(0);\n  const [careersList, setCareersList] = useState([\"C1\", \"C2\"]);\n  const [postingURL, setPostingURL] = useState(\"\");\n  const [jobDescription, setJobDescription] = useState(RichTextEditor.createEmptyValue());\n  const [companyName, setCompanyName] = useState(\"\");\n  const [jobTitle, setJobTitle] = useState(\"\");\n  const [jobNotes, setJobNotes] = useState(RichTextEditor.createEmptyValue());\n  const [files, setFiles] = useState([]);\n  const [tags, setTags] = useState(\"\");\n\n  useEffect(() => {\n    let dbProfile = context.dbProfileState;\n    if (dbProfile) {\n      /* dbProfile structure:\n      {\n        username: 'freemovement@live.ca', \n        careers_list: ['1', '2', '3', '4', '5', '6'], \n        current_career_num: 0\n      } */\n      setCurrentCareerNum(dbProfile.current_career_num);\n      setCareersList(dbProfile.careers_list);\n    }\n  }, [context.dbProfileState]);\n\n  function getTimeStamp() {\n    // format: 202211152250\n    let date = new Date();\n    let year = date.getFullYear().toString(); // 4-digit year\n    let month = (date.getMonth() + 1).toString(); // 00-11\n    let day = date.getDate().toString(); // 00-06\n    let hour = date.getHours(); // 0-23\n    let min = date.getMinutes(); // 0-59\n    if (month.length === 1) {\n      month = \"0\" + month;\n    }\n    if (day.length === 1) {\n      day = \"0\" + day;\n    }\n    return parseInt(year + month + day + hour + min);\n  }\n\n  function clearForm() {\n    setPostingURL(\"\");\n    setJobDescription(RichTextEditor.createEmptyValue());\n    setCompanyName(\"\");\n    setJobTitle(\"\");\n    setJobNotes(RichTextEditor.createEmptyValue());\n    setFiles([]);\n    let nodeList = document.getElementsByTagName(\"input\");\n    let nodeListConvertedToArray = Array.prototype.slice.call(nodeList);\n    nodeListConvertedToArray.forEach((input) => {\n      input.value = \"\";\n    });\n    document.querySelector(\"#step1Heading\").style.color = \"initial\";\n    document.querySelector(\"#step3Heading\").style.color = \"initial\";\n  }\n\n  function handleFilesDrop(newFiles) {\n    setFiles([...files, ...newFiles]);\n  }\n\n  function handleSaveApp() {\n    if (companyName.length === 0 || jobTitle.length === 0) {\n      document.querySelector(\"#step3Heading\").style.color = \"red\";\n      alert(\"Save unsuccessful. Required data is missing.\");\n      return;\n    }\n    const data = {\n      username: context.isAuthenticated ? context.user.email : \"demoUser\",\n      postingURL: postingURL,\n      companyName: companyName,\n      jobDescription: jobDescription.toString(\"html\"),\n      jobTitle: jobTitle,\n      jobNotes: jobNotes.toString(\"html\"),\n      files: files,\n      tags: tags.split(\",\"),\n      careerName: careersList[currentCareerNum],\n      applicationDate: getTimeStamp(),\n    };\n    axios\n      .post(\"/api/post/postapp\", data)\n      .then((res) => {\n        // console.log(res.data);\n        if (context.isAuthenticated) {\n          alert(`Saved to user ${context.user.email}'s database.`);\n        } else {\n          alert(`Saved to public demonstration database.`);\n        }\n        clearForm();\n      })\n      .catch((err) => {\n        console.log(err);\n        alert(\"Website under development\");\n      });\n    // .then(setTimeout(() => history.replace(\"/search\"), 700));\n  }\n\n  return (\n    <div className=\"centeredPage\">\n      <h1>Home</h1>\n      <h3>\n        Current Career:&nbsp;\n        <span className=\"text-success\">{careersList[currentCareerNum]}</span>\n      </h3>\n\n      <div className=\"d-flex\">\n        <BtnCareerSwitcher\n          careersList={careersList}\n          currentCareerNum={currentCareerNum}\n          setCurrentCareerNum={setCurrentCareerNum}\n        />\n        <BtnCareerAdder\n          careersList={careersList}\n          setCareersList={setCareersList}\n          setCurrentCareerNum={setCurrentCareerNum}\n        />\n        <BtnCareerRenamer\n          careersList={careersList}\n          setCareersList={setCareersList}\n          currentCareerNum={currentCareerNum}\n        />\n      </div>\n      <Step1 setPostingURL={setPostingURL} />\n      <Step3 setCompanyName={setCompanyName} setJobTitle={setJobTitle} />\n      <div className=\"d-flex \">\n        <Step2 jobDescription={jobDescription} setJobDescription={setJobDescription} />\n        <Step4 jobNotes={jobNotes} setJobNotes={setJobNotes} />\n      </div>\n      <Step5 handleFilesDrop={handleFilesDrop} files={files} setFiles={setFiles} />\n      <Step6 setTags={setTags} />\n      <StepSave handleSaveApp={handleSaveApp} />\n    </div>\n  );\n}\n","import React from \"react\";\n\nconst Search = () => {\n  return (\n    <div className=\"centeredPage\">\n      <h1>Search</h1>\n      <form className=\"form-inline d-flex my-2 my-lg-0\">\n        <input\n          className=\"form-control mr-sm-2\"\n          type=\"search\"\n          placeholder=\"Search\"\n          aria-label=\"Search\"\n        />\n        <button className=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">\n          Search\n        </button>\n      </form>\n\n      <p>\n        If user is logged out, load a bunch of sample job applications here so that guests can use\n        the search feature\n      </p>\n    </div>\n  );\n};\nexport default Search;\n","export default __webpack_public_path__ + \"static/media/loading.330b7d99.svg\";","import React from \"react\";\nimport loading from \"../assets/loading.svg\";\n\nconst LoadingSpinner = () => (\n  <div className=\"page\">\n    <h3>Loading</h3>\n    <img src={loading} alt=\"Loading\" />\n  </div>\n);\n\nexport default LoadingSpinner;\n","import React, { useContext } from \"react\";\nimport { useAuth0, withAuthenticationRequired } from \"@auth0/auth0-react\";\nimport LoadingSpinner from \"../components/LoadingSpinner\";\nimport Context from \"../utils/context\";\n\nconst Profile = () => {\n  const { user, logout } = useAuth0();\n  const context = useContext(Context);\n\n  return (\n    <div className=\"centeredPage\">\n      <h1>Profile</h1>\n      <button className=\"btn btn-primary\" onClick={() => logout()}>\n        Log out\n      </button>\n      {user.email && <p>Email: {user.email}</p>}\n      {user.family_name && <p>Family name: {user.family_name}</p>}\n      {user.given_name && <p>Given name: {user.given_name}</p>}\n      {user.name && <p>Name: {user.name}</p>}\n      {user.locale && <p>Locale: {user.locale}</p>}\n      {user.nickname && <p>Nickname: {user.nickname}</p>}\n      {user.sub && <p>User ID: {user.sub}</p>}\n      <button\n        className=\"btn btn-primary\"\n        onClick={() => {\n          console.log(context.stateAuthReducer);\n          console.log(user);\n        }}\n        style={{ padding: \"5px\" }}\n      >\n        Log the user profile(stateAuthReducer) to the console\n      </button>\n    </div>\n  );\n};\n\nexport default withAuthenticationRequired(Profile, {\n  onRedirecting: () => <LoadingSpinner />,\n});\n","import React, { useEffect, useContext } from \"react\";\nimport history from \"../utils/history\";\nimport Context from \"../utils/context\";\nimport axios from \"axios\";\n\nexport default function DispatchAuthPage() {\n  const context = useContext(Context);\n\n  useEffect(() => {\n    if (context.auth0.isAuthenticated) {\n      let profile = context.auth0.user;\n      context.dispatchLogin();\n      context.dispatchSetAuthProfile(profile);\n      axios\n        .post(\"/api/post/userprofiletodb\", profile)\n        .then(\n          axios\n            .get(\"/api/get/userprofilefromdb\", { params: { email: profile.email } })\n            .then((res) => {\n              context.dispatchSetDbProfile(res.data[0]);\n            })\n        )\n        .then(history.replace(\"/\"));\n    } else {\n      context.dispatchLogout();\n      context.dispatchRemoveAuthProfile();\n    }\n    history.replace(\"/\");\n  });\n\n  return (\n    <div>\n      <h1>DispatchAuthPage</h1>\n    </div>\n  );\n}\n","import React from \"react\";\n\nconst Search = () => {\n  return (\n    <div className=\"centeredPage\">\n      <h1>About</h1>\n      <p>About page</p>\n    </div>\n  );\n};\nexport default Search;\n","import { Router, Route, Switch } from \"react-router-dom\";\nimport history from \"./utils/history\";\nimport NavBar from \"./components/NavBar\";\nimport HomePage from \"./pages/HomePage\";\nimport SearchPage from \"./pages/SearchPage\";\nimport ProfilePage from \"./pages/ProfilePage\";\nimport DispatchAuthPage from \"./pages/DispatchAuthPage\";\nimport AboutPage from \"./pages/AboutPage\";\n\nfunction Routes() {\n  return (\n    <Router history={history}>\n      <NavBar />\n      <h5 className=\"text-center text-warning\">Project Under Construction :)</h5>\n      <Switch>\n        <Route path=\"/\" exact component={HomePage} />\n        <Route path=\"/about\" exact component={AboutPage} />\n        <Route path=\"/home\" exact component={HomePage} />\n        <Route path=\"/search\" component={SearchPage} />\n        <Route path=\"/profile\" component={ProfilePage} />\n        <Route path=\"/dispatchauth\" component={DispatchAuthPage} />\n      </Switch>\n    </Router>\n  );\n}\nexport default Routes;\n","\r\nexport const SUCCESS = \"SUCCESS\"\r\n\r\nexport const FAILURE = \"FAILURE\"\r\n\r\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\"\r\n\r\nexport const LOGIN_FAILURE = \"LOGIN_FAILURE\"\r\n\r\nexport const SET_PROFILE = \"SET_PROFILE\"\r\n\r\nexport const REMOVE_PROFILE = \"REMOVE_PROFILE\"\r\n\r\nexport const USER_INPUT_CHANGE = \"USER_INPUT_CHANGE\"\r\n\r\nexport const USER_INPUT_SUBMIT = \"USER_INPUT_SUBMIT\"\r\n\r\nexport const SET_DB_PROFILE = \"SET_DB_PROFILE\"\r\n\r\nexport const REMOVE_DB_PROFILE = \"REMOVE_DB_PROFILE\"\r\n\r\nexport const FETCH_DB_POSTS = \"FETCH_DB_POSTS\"\r\n\r\nexport const REMOVE_DB_POSTS = \"REMOVE_DB_POSTS\"\r\n","import * as ACTION_TYPES from \"../actions/actionTypes\";\n\nexport const initialState = {\n  isAuthenticated: false,\n  dbProfile: null,\n  authProfile: null,\n};\n\nexport const AuthReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ACTION_TYPES.LOGIN_SUCCESS:\n      return {\n        ...state,\n        isAuthenticated: true,\n      };\n    case ACTION_TYPES.LOGIN_FAILURE:\n      return {\n        ...state,\n        isAuthenticated: false,\n      };\n    case ACTION_TYPES.SET_PROFILE:\n      return {\n        ...state,\n        authProfile: action.payload,\n      };\n    case ACTION_TYPES.REMOVE_PROFILE:\n      return {\n        ...state,\n        authProfile: null,\n      };\n    case ACTION_TYPES.SET_DB_PROFILE:\n      return {\n        ...state,\n        dbProfile: action.payload,\n      };\n    case ACTION_TYPES.REMOVE_DB_PROFILE:\n      return {\n        ...state,\n        dbProfile: null,\n      };\n    default:\n      return state;\n  }\n};\n","import React, { useReducer, useEffect } from \"react\";\nimport Routes from \"./Routes\";\nimport Context from \"./utils/context\";\nimport * as AuthReducer from \"./store/reducers/authReducer\";\nimport * as ACTIONS from \"./store/actions/actions\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport history from \"./utils/history\";\nimport NavBar from \"./components/NavBar\";\n\nexport default function ContextState() {\n  const auth0 = useAuth0();\n\n  /*Auth Reducer: although auth0 object keeps global auth state, we'll keep our own in a reducer */\n  const [stateAuthReducer, dispatchAuthReducer] = useReducer(\n    AuthReducer.AuthReducer,\n    AuthReducer.initialState\n  );\n\n  const dispatchLogin = () => {\n    dispatchAuthReducer(ACTIONS.login_success());\n  };\n\n  const dispatchLogout = () => {\n    dispatchAuthReducer(ACTIONS.login_failure());\n  };\n\n  const dispatchSetAuthProfile = (profile) => {\n    dispatchAuthReducer(ACTIONS.set_profile(profile));\n  };\n\n  const dispatchSetDbProfile = (profile) => {\n    dispatchAuthReducer(ACTIONS.set_db_profile(profile));\n  };\n\n  const dispatchRemoveAuthProfile = () => {\n    dispatchAuthReducer(ACTIONS.remove_profile());\n  };\n\n  /* When the auth state changes, dispatch the auth reducer */\n  useEffect(() => {\n    setTimeout(() => {\n      history.replace(\"/dispatchauth\");\n    }, 200);\n  }, [auth0.isAuthenticated]);\n\n  return (\n    <Context.Provider\n      value={{\n        auth0: auth0,\n        user: auth0.user,\n\n        dispatchLogin: () => dispatchLogin(),\n        dispatchLogout: () => dispatchLogout(),\n        dispatchSetAuthProfile: (profile) => dispatchSetAuthProfile(profile),\n        dispatchRemoveAuthProfile: () => dispatchRemoveAuthProfile(),\n        dispatchSetDbProfile: (profile) => dispatchSetDbProfile(profile),\n\n        //Auth Reducer\n        //keep for global state\n        stateAuthReducer: stateAuthReducer,\n        isAuthenticated: stateAuthReducer.isAuthenticated,\n        dbProfileState: stateAuthReducer.dbProfile,\n        authProfile: stateAuthReducer.authProfile,\n      }}\n    >\n      <Routes />\n    </Context.Provider>\n  );\n}\n","import * as ACTION_TYPES from \"./actionTypes\";\r\n\r\nexport const SUCCESS = {\r\n  type: ACTION_TYPES.SUCCESS,\r\n};\r\n\r\nexport const FAILURE = {\r\n  type: ACTION_TYPES.FAILURE,\r\n};\r\n\r\nexport const success = () => {\r\n  return {\r\n    type: ACTION_TYPES.SUCCESS,\r\n  };\r\n};\r\n\r\nexport const failure = () => {\r\n  return {\r\n    type: ACTION_TYPES.FAILURE,\r\n  };\r\n};\r\n\r\nexport const set_profile = (profile) => {\r\n  return {\r\n    type: ACTION_TYPES.SET_PROFILE,\r\n    payload: profile,\r\n  };\r\n};\r\n\r\nexport const remove_profile = () => {\r\n  return {\r\n    type: ACTION_TYPES.REMOVE_PROFILE,\r\n  };\r\n};\r\n\r\nexport const login_success = () => {\r\n  return {\r\n    type: ACTION_TYPES.LOGIN_SUCCESS,\r\n  };\r\n};\r\n\r\nexport const login_failure = () => {\r\n  return {\r\n    type: ACTION_TYPES.LOGIN_FAILURE,\r\n  };\r\n};\r\n\r\nexport const user_input_change = (text) => {\r\n  return {\r\n    type: ACTION_TYPES.USER_INPUT_CHANGE,\r\n    payload: text,\r\n  };\r\n};\r\n\r\nexport const user_input_submit = (text) => {\r\n  return {\r\n    type: ACTION_TYPES.USER_INPUT_SUBMIT,\r\n    payload: text,\r\n  };\r\n};\r\n\r\nexport const set_db_profile = (profile) => {\r\n  return {\r\n    type: ACTION_TYPES.SET_DB_PROFILE,\r\n    payload: profile,\r\n  };\r\n};\r\n\r\nexport const remove_db_profile = () => {\r\n  return {\r\n    type: ACTION_TYPES.REMOVE_DB_PROFILE,\r\n  };\r\n};\r\n\r\nexport const set_db_posts = (posts) => {\r\n  return {\r\n    type: ACTION_TYPES.FETCH_DB_POSTS,\r\n    payload: posts,\r\n  };\r\n};\r\n\r\nexport const remove_db_posts = () => {\r\n  return {\r\n    type: ACTION_TYPES.REMOVE_DB_POSTS,\r\n  };\r\n};\r\n","// import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport { Auth0Provider } from \"@auth0/auth0-react\";\nimport { authConfig } from \"./utils/authConfig\";\nimport App from \"./App\";\nimport \"./style.css\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <Auth0Provider {...authConfig}>\n    <App />\n  </Auth0Provider>\n);\n"],"sourceRoot":""}