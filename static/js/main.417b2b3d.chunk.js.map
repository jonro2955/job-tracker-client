{"version":3,"sources":["utils/history.js","utils/authConfig.js","utils/context.js","store/actions/actionTypes.js","store/reducers/authReducer.js","assets/logo2.png","components/NavBar.js","components/BtnModalCareerRenamer.js","components/BtnModalCareerSwitcher.js","components/BtnModalCareerAdder.js","components/Step1UrlDesc.js","components/Step2NameTitle.js","components/Step3Notes.js","components/Step4Resume.js","components/Step5CoverLetter.js","components/Step6Tags.js","components/Step7Date.js","pages/AddPage.js","components/BtnModalCreateJob.js","components/SearchRadio.js","components/SearchAccordion.js","pages/JobsPage.js","pages/AppPage.js","assets/loading.svg","components/LoadingSpinner.js","pages/ProfilePage.js","assets/logo1.png","pages/HomePage.js","App.js","store/actions/actions.js","index.js"],"names":["createBrowserHistory","authConfig","domain","clientId","redirectUri","window","location","origin","onRedirectCallback","appState","history","push","returnTo","pathname","Context","React","createContext","LOGIN_SUCCESS","LOGIN_FAILURE","SET_PROFILE","REMOVE_PROFILE","SET_DB_PROFILE","REMOVE_DB_PROFILE","initialState","isAuthenticated","dbProfile","authProfile","AuthReducer","state","action","type","ACTION_TYPES","payload","NavBar","auth0","useAuth0","navigateTo","useNavigate","className","to","style","padding","width","height","src","logo2","alt","onClick","loginWithPopup","user","email","BtnCareerRenamer","careersList","setCareersList","currentCareerNum","context","useContext","useState","newName","setNewName","modalOn","setModalOn","toggleModal","validateRename","length","find","item","alert","newList","dbProfileState","currentUser","username","oldName","data","oldCareerName","newCareerName","axios","put","then","res","console","log","tempProfile","careers_list","dispatchSetDbProfile","catch","err","updateRenameCareer","isOpen","toggle","onSubmit","e","preventDefault","name","id","title","placeholder","onChange","target","value","color","BtnCareerSwitcher","setCurrentCareerNum","map","i","disabled","newNum","current_career_num","updateCurrentCareerNum","BtnCareerAdder","newCareer","setNewCareer","validateAddCareer","updateCareersList","autoFocus","undoChange","this","quill","undo","redoChange","redo","Step1UrlDesc","url","setJobDescription","setPostingURL","quillRef","useRef","previewOpen","setPreviewOpen","previewContent","setPreviewContent","quillModules","useMemo","toolbar","container","handlers","preview","html","root","innerHTML","defaultValue","persist","ref","backgroundColor","minHeight","maxHeight","overflowY","theme","modules","formats","dangerouslySetInnerHTML","__html","Step2","setCompanyName","setJobTitle","company","companyDisp","setCompanyDisp","titleDisp","setTitleDisp","htmlFor","Step3Notes","popoverOpen","setPopoverOpen","placement","trigger","Step4Resume","setResumeFile","resumeDisplayFile","setResumeDisplayFile","multiple","onDrop","getRootProps","getInputProps","size","Step5CoverLetter","setCoverLetterFile","coverLetterDisplayFile","setCoverLetterDisplayFile","Step6Tags","tags","setTags","Step7Date","subDate","setSubDate","v","f","String","Date","showClearButton","AddPage","JSON","parse","useParams","postingURL","companyName","jobTitle","jobDescription","jobNotes","setJobNotes","byteaResume","setByteaResume","byteaCoverLetter","setByteaCoverLetter","newFile","getByteArray","arrayBuffer","bytea","Uint8Array","useEffect","document","querySelector","toString","resumeFile","coverLetterFile","split","careerName","applicationDate","post","nodeList","getElementsByTagName","Array","prototype","slice","call","forEach","input","clearForm","BtnModalCreateJob","allAppsList","navigate","similarEntriesList","setSimilarEntriesList","filter","app","toLowerCase","includes","entry","date","getFullYear","getMonth","getDate","SearchRadio","selectedSearchOption","setSelectedSearchOption","checked","readOnly","SearchAccordion","searchString","setSearchString","loadAllRecords","resetSearchParams","dateRangeStart","setDateRangeStart","dateRangeEnd","setDateRangeEnd","open","setOpen","targetId","accordionId","SearchPage","setAllAppsList","displayedAppsList","setDisplayedAppsList","dateSortLatest","setDateSortLatest","companySortAscending","setCompanySortAscending","titleSortAscending","setTitleSortAscending","get","params","toggleDateSort","temp","sort","a","b","dateA","application_date","dateB","startDate","endDate","results","appDate","setDisplayedList","icon","faSort","stringA","job_title","stringB","company_name","currDate","elapsedDays","Math","ceil","app_id","AppPage","appData","setAppData","setCareerName","setAppDate","setElapsedDays","posting_url","job_description","job_notes","career_name","elapsed","LoadingSpinner","loading","withAuthenticationRequired","logout","family_name","given_name","locale","nickname","onRedirecting","HomePage","logo1","ContextState","profile","dispatchLogin","dispatchSetAuthProfile","dispatchLogout","dispatchRemoveAuthProfile","useReducer","stateAuthReducer","dispatchAuthReducer","ACTIONS","Provider","file","Promise","acc","reader","FileReader","onloadend","event","result","onerror","error","readAsArrayBuffer","basename","path","element","ProfilePage","ReactDOM","createRoot","getElementById","render"],"mappings":"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","file":"static/js/main.417b2b3d.chunk.js","sourcesContent":["import { createBrowserHistory } from \"history\";\n\nexport default createBrowserHistory();\n","import history from \"./history\";\n\nconst appConfig = {\n  domain: \"dev-9npol9r6.us.auth0.com\",\n  clientId: \"4GfZ4cfLN9HiX42YH3oWPq8NHKTiCAIS\",\n};\n\nconst onRedirectCallback = (appState) => {\n  history.push(appState && appState.returnTo ? appState.returnTo : window.location.pathname);\n};\n\nexport const authConfig = {\n  domain: appConfig.domain,\n  clientId: appConfig.clientId,\n  redirectUri: window.location.origin,\n  onRedirectCallback,\n};\n","import React from \"react\";\n\nconst Context = React.createContext();\n\nexport default Context;\n","\r\nexport const SUCCESS = \"SUCCESS\"\r\n\r\nexport const FAILURE = \"FAILURE\"\r\n\r\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\"\r\n\r\nexport const LOGIN_FAILURE = \"LOGIN_FAILURE\"\r\n\r\nexport const SET_PROFILE = \"SET_PROFILE\"\r\n\r\nexport const REMOVE_PROFILE = \"REMOVE_PROFILE\"\r\n\r\nexport const USER_INPUT_CHANGE = \"USER_INPUT_CHANGE\"\r\n\r\nexport const USER_INPUT_SUBMIT = \"USER_INPUT_SUBMIT\"\r\n\r\nexport const SET_DB_PROFILE = \"SET_DB_PROFILE\"\r\n\r\nexport const REMOVE_DB_PROFILE = \"REMOVE_DB_PROFILE\"\r\n\r\nexport const FETCH_DB_POSTS = \"FETCH_DB_POSTS\"\r\n\r\nexport const REMOVE_DB_POSTS = \"REMOVE_DB_POSTS\"\r\n","import * as ACTION_TYPES from \"../actions/actionTypes\";\n\nexport const initialState = {\n  isAuthenticated: false,\n  dbProfile: null,\n  authProfile: null,\n};\n\nexport const AuthReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ACTION_TYPES.LOGIN_SUCCESS:\n      return {\n        ...state,\n        isAuthenticated: true,\n      };\n    case ACTION_TYPES.LOGIN_FAILURE:\n      return {\n        ...state,\n        isAuthenticated: false,\n      };\n    case ACTION_TYPES.SET_PROFILE:\n      return {\n        ...state,\n        authProfile: action.payload,\n      };\n    case ACTION_TYPES.REMOVE_PROFILE:\n      return {\n        ...state,\n        authProfile: null,\n      };\n    case ACTION_TYPES.SET_DB_PROFILE:\n      return {\n        ...state,\n        dbProfile: action.payload,\n      };\n    case ACTION_TYPES.REMOVE_DB_PROFILE:\n      return {\n        ...state,\n        dbProfile: null,\n      };\n    default:\n      return state;\n  }\n};\n","export default __webpack_public_path__ + \"static/media/logo2.4b930b0d.png\";","import { Link } from \"react-router-dom\";\nimport logo2 from \"../assets/logo2.png\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst NavBar = () => {\n  const auth0 = useAuth0();\n  const navigateTo = useNavigate();\n\n  return (\n    <div className=\"d-flex justify-content-center border\">\n      {/* <nav className=\"navbar navbar-expand-lg navbar-light bg-light \"> */}\n      {/* <div\n          className=\"collapse navbar-collapse container\"\n          id=\"navbarSupportedContent\"\n        > */}\n      {/* <ul className=\"navbar-nav mr-auto row\">\n            <li className=\"nav-item active col\">\n              <Link to=\"/add\" style={{ padding: \"5px\" }}>\n                Add\n              </Link>\n            </li>\n            <li className=\"nav-item col\">\n              <Link to=\"/jobs\" style={{ padding: \"5px\" }}>\n                Jobs\n              </Link>\n            </li>\n            <li className=\"nav-item col\">\n                <button\n                  className=\"btn btn-outline-primary\"\n                  onClick={() => {\n                    auth0.isAuthenticated\n                      ? navigateTo(\"/profile\")\n                      : auth0.loginWithPopup();\n                  }}\n                >\n                  {auth0.isAuthenticated ? auth0.user.email : \"Log in\"}\n                </button>\n            </li>\n          </ul> */}\n\n      {/*  */}\n\n      <div className=\"container\">\n        <div className=\"row d-flex align-items-center\">\n          <div className=\"col  \">\n            <Link to=\"/\" style={{ padding: \"5px\" }}>\n              <img width=\"30\" height=\"30\" src={logo2} alt=\"Logo\" />\n            </Link>\n          </div>\n          <div className=\"col   text-center\">\n            <button\n              className=\"btn btn-outline-primary\"\n              onClick={() => {\n                auth0.isAuthenticated\n                  ? navigateTo(\"/profile\")\n                  : auth0.loginWithPopup();\n              }}\n            >\n              {auth0.isAuthenticated ? auth0.user.email : \"Log in\"}\n            </button>\n          </div>\n          <div className=\"col  \"></div>\n        </div>\n      </div>\n\n      {/*  */}\n    </div>\n    //   </nav>\n    // </div>\n  );\n};\n\nexport default NavBar;\n","import { useState, useContext } from \"react\";\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\nimport Context from \"../utils/context\";\nimport axios from \"axios\";\n\nexport default function BtnCareerRenamer({\n  careersList,\n  setCareersList,\n  currentCareerNum,\n}) {\n  const context = useContext(Context);\n  const [newName, setNewName] = useState(careersList[currentCareerNum]);\n  const [modalOn, setModalOn] = useState(false);\n\n  function toggleModal() {\n    setModalOn(!modalOn);\n  }\n\n  function validateRename() {\n    if (newName.length === 0 || newName === careersList[currentCareerNum]) {\n      return;\n    }\n    if (\n      careersList.find((item) => {\n        return item === newName;\n      })\n    ) {\n      alert(\n        `Error: \"${newName}\" already exists. Cannot create duplicate careers.`\n      );\n    } else {\n      updateRenameCareer(careersList, currentCareerNum, newName);\n      toggleModal();\n    }\n  }\n\n  /* Update both \"users\" table's careersList value and \"apps\" table's career values*/\n  function updateRenameCareer(careersList, currentCareerNum, newName) {\n    let newList = [...careersList];\n    newList[currentCareerNum] = newName;\n    if (context.isAuthenticated && context.dbProfileState) {\n      let currentUser = context.dbProfileState.username;\n      const oldName = careersList[currentCareerNum];\n      const data = {\n        username: currentUser,\n        careersList: newList,\n        oldCareerName: oldName,\n        newCareerName: newName,\n      };\n      axios\n        .put(\"/api/put/renamecareer\", data) // db update\n        .then((res) => {\n          console.log(\"api/put/renamecareer res.data: \", res.data);\n          const tempProfile = { ...context.dbProfileState };\n          tempProfile.careers_list = data.careersList;\n          context.dispatchSetDbProfile(tempProfile); // reducer update\n          setCareersList(newList); // HomePage ui update\n        })\n        .catch((err) => {\n          console.log(\"api/put/careernum err\", err);\n        });\n    } else {\n      setCareersList(newList);\n    }\n\n    // let currentUser =\n    //   context.isAuthenticated && context.dbProfileState\n    //     ? context.dbProfileState.username\n    //     : \"demoUser\";\n  }\n\n  return (\n    <div>\n      <div className=\"dropdown\">\n        <button\n          type=\"button\"\n          className=\"btn btn-success m-1\"\n          onClick={toggleModal}\n        >\n          Rename Career\n        </button>\n        <Modal isOpen={modalOn} toggle={toggleModal}>\n          <ModalHeader toggle={toggleModal}>\n            Rename The Current Career: \"{careersList[currentCareerNum]}\"\n          </ModalHeader>\n          <ModalBody>\n            <form\n              onSubmit={(e) => {\n                e.preventDefault();\n                validateRename();\n              }}\n            >\n              <div>\n                Note: Renaming this career will change the \"career\" attribute of\n                all saved jobs with the career name \"{careersList[currentCareerNum]}\"\n                to a new name entered below:\n              </div>\n              <input\n                name=\"renameCareer\"\n                id=\"renameCareer\"\n                type=\"text\"\n                className=\"form-control\"\n                title=\"Rename Career\"\n                placeholder=\"New name\"\n                onChange={(e) => {\n                  setNewName(e.target.value);\n                }}\n              />\n              <button\n                type=\"button\"\n                className=\"btn btn-success w-100\"\n                onClick={validateRename}\n              >\n                Rename\n              </button>\n            </form>\n          </ModalBody>\n          <ModalFooter>\n            <Button color=\"primary\" onClick={toggleModal}>\n              Cancel\n            </Button>\n          </ModalFooter>\n        </Modal>\n      </div>\n    </div>\n  );\n}\n","import { Link } from \"react-router-dom\";\nimport { useState, useContext } from \"react\";\nimport Context from \"../utils/context\";\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\nimport axios from \"axios\";\n\nexport default function BtnCareerSwitcher({\n  careersList,\n  currentCareerNum,\n  setCurrentCareerNum,\n}) {\n  const context = useContext(Context);\n  const [modalOn, setModalOn] = useState(false);\n\n  function toggleModal() {\n    setModalOn(!modalOn);\n  }\n\n  function updateCurrentCareerNum(newNum) {\n    if (context.isAuthenticated && context.dbProfileState) {\n      let currentUser = context.dbProfileState.username;\n      const data = {\n        currentCareerNum: newNum,\n        username: currentUser,\n      };\n      axios\n        .put(\"/api/put/careernum\", data) // db update\n        .then((res) => {\n          const tempProfile = { ...context.dbProfileState };\n          tempProfile.current_career_num = data.currentCareerNum;\n          context.dispatchSetDbProfile(tempProfile); // reducer update\n          setCurrentCareerNum(newNum); // HomePage ui update\n        })\n        .catch((err) => {\n          console.log(\"api/put/careernum err\", err);\n        });\n    } else {\n      setCurrentCareerNum(newNum);\n    }\n\n    // let currentUser =\n    //   context.isAuthenticated && context.dbProfileState\n    //     ? context.dbProfileState.username\n    //     : \"demoUser\";\n  }\n\n  return (\n    <div>\n      <div className=\"dropdown\">\n        <button\n          type=\"button\"\n          className=\"btn btn-success m-1\"\n          onClick={() => {\n            toggleModal();\n          }}\n        >\n          Switch Career\n        </button>\n        <Modal isOpen={modalOn} toggle={toggleModal}>\n          <ModalHeader toggle={toggleModal}>Select career:</ModalHeader>\n          <ModalBody>\n            {careersList.map((name, i) => {\n              return (\n                <div key={i}>\n                  <button\n                    type=\"button\"\n                    className=\"btn btn-success w-100\"\n                    disabled={currentCareerNum === i ? true : false}\n                    onClick={() => {\n                      updateCurrentCareerNum(i);\n                      toggleModal();\n                    }}\n                  >\n                    {name}\n                  </button>\n                </div>\n              );\n            })}\n            <div className=\"text-center\">\n              <Link to=\"/home\">How to delete a career</Link>\n            </div>\n          </ModalBody>\n          <ModalFooter>\n            <Button color=\"primary\" onClick={toggleModal}>\n              Cancel\n            </Button>\n          </ModalFooter>\n        </Modal>\n      </div>\n    </div>\n  );\n}\n","import { useState, useContext } from \"react\";\nimport Context from \"../utils/context\";\nimport axios from \"axios\";\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\n\nexport default function BtnCareerAdder({ careersList, setCareersList }) {\n  const context = useContext(Context);\n  const [newCareer, setNewCareer] = useState(\"\");\n  const [modalOn, setModalOn] = useState(false);\n\n  function toggleModal() {\n    setModalOn(!modalOn);\n  }\n\n  function validateAddCareer() {\n    if (newCareer.length === 0) {\n      return;\n    }\n    if (\n      careersList.find((item) => {\n        return item === newCareer;\n      })\n    ) {\n      alert(`\"${newCareer}\" already exists. Cannot create duplicate careers.`);\n    } else {\n      let newList = [...careersList, newCareer];\n      updateCareersList(newList);\n      toggleModal();\n    }\n  }\n\n  function updateCareersList(newList) {\n    if (context.isAuthenticated && context.dbProfileState) {\n      let currentUser = context.dbProfileState.username;\n      const data = {\n        username: currentUser,\n        careersList: newList,\n      };\n      axios\n        .put(\"/api/put/careerslist\", data) // db update\n        .then((res) => {\n          console.log(\"api/put/careerslist res\", res.data);\n          const tempProfile = { ...context.dbProfileState };\n          tempProfile.careers_list = data.careersList;\n          context.dispatchSetDbProfile(tempProfile); // reducer update\n          setCareersList(newList); // HomePage ui update\n        })\n        .catch((err) => {\n          console.log(\"api/put/careernum err\", err);\n        });\n    } else {\n      setCareersList(newList);\n    }\n\n    // let currentUser =\n    //   context.isAuthenticated && context.dbProfileState\n    //     ? context.dbProfileState.username\n    //     : \"demoUser\";\n  }\n\n  return (\n    <div>\n      <div className=\"dropdown\">\n        <button\n          type=\"button\"\n          className=\"btn btn-success m-1\"\n          onClick={() => {\n            toggleModal();\n          }}\n        >\n          New Career\n        </button>\n        <Modal isOpen={modalOn} toggle={toggleModal}>\n          <ModalHeader toggle={toggleModal}>New career name:</ModalHeader>\n          <ModalBody>\n            <form\n              autoFocus\n              onSubmit={(e) => {\n                e.preventDefault();\n                validateAddCareer();\n              }}\n            >\n              <input\n                name=\"newCareer\"\n                id=\"newCareer\"\n                type=\"text\"\n                title=\"New Career\"\n                placeholder=\"career\"\n                className=\"form-control\"\n                onChange={(e) => {\n                  setNewCareer(e.target.value);\n                }}\n              />\n              <button type=\"submit\" className=\"btn btn-success w-100\">\n                Add\n              </button>\n              {/* <div className=\"text-center\">Existing Careers:</div>\n              {careersList.map((name, i) => {\n                return (\n                  <div key={i}>\n                    <button\n                      type=\"button\"\n                      className=\"btn btn-outline-success w-100\"\n                      disabled\n                    >\n                      {name}\n                    </button>\n                  </div>\n                );\n              })} */}\n            </form>\n          </ModalBody>\n          <ModalFooter>\n            <Button color=\"primary\" onClick={toggleModal}>\n              Cancel\n            </Button>\n          </ModalFooter>\n        </Modal>\n      </div>\n    </div>\n  );\n}\n","import React, { useState, useMemo } from \"react\";\nimport ReactQuill from \"react-quill\";\nimport \"react-quill/dist/quill.snow.css\";\n// https://codesandbox.io/s/react-quill-multiple-editor-gttvm?file=/src/App.js:351-359\n\n/* \nThis component will render the inputs for the posting URL and the job description.\nThe job description input will use the react-quill rich text editor.\n*/\n\n/* // For react-quill, custom svgs are needed as the default icons don't always work\nconst CustomUndoIcon = () => (\n  <svg viewBox=\"0 0 18 18\">\n    <polygon className=\"ql-fill ql-stroke\" points=\"6 10 4 12 2 10 6 10\" />\n    <path\n      className=\"ql-stroke\"\n      d=\"M8.09,13.91A4.6,4.6,0,0,0,9,14,5,5,0,1,0,4,9\"\n    />\n  </svg>\n);\n\nconst CustomRedoIcon = () => (\n  <svg viewBox=\"0 0 18 18\">\n    <polygon className=\"ql-fill ql-stroke\" points=\"12 10 14 12 16 10 12 10\" />\n    <path\n      className=\"ql-stroke\"\n      d=\"M9.91,13.91A4.6,4.6,0,0,1,9,14a5,5,0,1,1,5-5\"\n    />\n  </svg>\n);\n */\n// Custom undo and redo functions for Custom Toolbar\nfunction undoChange() {\n  this.quill.history.undo();\n}\nfunction redoChange() {\n  this.quill.history.redo();\n}\n\nexport default function Step1UrlDesc({\n  id,\n  value,\n  url,\n  setJobDescription,\n  setPostingURL,\n}) {\n  const quillRef = React.useRef();\n  const [previewOpen, setPreviewOpen] = useState(false);\n  const [previewContent, setPreviewContent] = useState(\"\");\n\n  const CustomToolbar = () => (\n    <div id={`toolbar-${id}`}>\n      <span className=\"ql-formats\">\n        <select\n          className=\"ql-header\"\n          defaultValue={\"\"}\n          onChange={(e) => e.persist()}\n        >\n          {[\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"false\"].map((value) => (\n            <option key={value} value={value} />\n          ))}\n        </select>\n        <button className=\"ql-bold\" />\n        <button className=\"ql-italic\" />\n        <button className=\"ql-underline\" />\n        <select className=\"ql-align\" />\n        <button className=\"ql-list\" value=\"bullet\" />\n        <button className=\"ql-list\" value=\"ordered\" />\n        <button className=\"ql-indent\" value=\"-1\" />\n        <button className=\"ql-indent\" value=\"+1\" />\n        <button className=\"ql-link\" />\n        <button className=\"ql-clean\" />\n      </span>\n      {/* <span className=\"ql-formats\">\n        <select className=\"ql-color\" />\n        <select className=\"ql-background\" />\n        <button className=\"ql-strike\" /> \n        <button className=\"ql-undo\">\n          <CustomUndoIcon />\n        </button>\n        <button className=\"ql-redo\">\n          <CustomRedoIcon />\n        </button>\n        <select className=\"ql-size\" defaultValue={\"\"} onChange={(e) => e.persist()}>\n          {[\"small\", \"false\", \"large\", \"huge\"].map((value, i) => (\n            <option key={value} value={value} />\n          ))}\n        </select> \n        <select className=\"ql-font\" defaultValue=\"arial\">\n          <option value=\"arial\">Arial</option>\n          <option value=\"comic-sans\">Comic Sans</option>\n          <option value=\"courier-new\">Courier New</option>\n          <option value=\"georgia\">Georgia</option>\n          <option value=\"helvetica\">Helvetica</option>\n          <option value=\"lucida\">Lucida</option>\n        </select> \n        <button className=\"ql-image\" />\n        <button className=\"ql-video\" />\n        <button className=\"ql-code-block\" />\n      </span> */}\n    </div>\n  );\n\n  const quillModules = useMemo(() => {\n    return {\n      toolbar: {\n        container: `#toolbar-${id}`,\n        handlers: {\n          preview: function (value) {\n            const html = this.quill.root.innerHTML;\n            setPreviewContent(html);\n            setPreviewOpen(!previewOpen);\n          },\n          undo: undoChange,\n          redo: redoChange,\n        },\n      },\n    };\n  }, [id, previewOpen]);\n\n  const quillFormats = [\n    \"bold\",\n    \"italic\",\n    \"underline\",\n    \"strike\",\n    \"script\",\n    \"size\",\n    \"header\",\n    \"list\",\n    \"indent\",\n    \"link\",\n    \"color\",\n    \"background\",\n    \"align\",\n    \"font\",\n    \"blockquote\",\n    \"bullet\",\n    \"image\",\n    \"code-block\",\n  ];\n\n  return (\n    <div className=\"step d-flex  flex-column \">\n      {/* Posting URL input*/}\n      <h3 id=\"step1Heading\">Posting URL</h3>\n      <input\n        id=\"jobPostingURL\"\n        name=\"jobPostingURL\"\n        className=\"form-control\"\n        type=\"url\"\n        value={url}\n        title=\"Job Posting URL\"\n        onChange={(e) => {\n          setPostingURL(e.target.value);\n        }}\n      />\n      {/* Job description input*/}\n      <h3>Posting Description</h3>\n      <div className=\"text-editor\">\n        {CustomToolbar(id)}\n        <ReactQuill\n          ref={quillRef}\n          style={{\n            backgroundColor: \"white\",\n            minHeight: \"280px\",\n            maxHeight: \"900px\",\n            overflowY: \"auto\",\n          }}\n          className=\"step3Desc\"\n          theme=\"snow\"\n          // defaultValue={value}\n          value={value}\n          onChange={setJobDescription}\n          modules={quillModules}\n          formats={quillFormats}\n        />\n        {previewOpen ? (\n          <div dangerouslySetInnerHTML={{ __html: previewContent }} />\n        ) : (\n          \"\"\n        )}\n      </div>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\n\nexport default function Step2({ setCompanyName, setJobTitle, data }) {\n  const [companyDisp, setCompanyDisp] = useState(data.company);\n  const [titleDisp, setTitleDisp] = useState(data.title);\n\n  return (\n    <div\n      className=\"step w-md-75\"\n      style={{ backgroundColor: \"white\", minHeight: \"100px\" }}\n    >\n      <div className=\"step2 d-flex justify-content-space-between justify-content-md-center gap-1 gap-md-5 required\">\n        <div className=\"d-flex flex-column\">\n          <label htmlFor=\"jobTitle\">\n            <h3>Company:</h3>\n          </label>\n          <input\n            id=\"companyName\"\n            className=\"form-control w-100 text-success\"\n            name=\"companyName\"\n            type=\"text\"\n            title=\"Company Name\"\n            placeholder=\"Company\"\n            value={companyDisp}\n            onChange={(e) => {\n              setCompanyDisp(e.target.value);\n              setCompanyName(e.target.value);\n            }}\n          />\n        </div>\n        <div className=\"d-flex flex-column\">\n          <label htmlFor=\"jobTitle\">\n            <h3>Title:</h3>\n          </label>\n          <input\n            id=\"jobTitle\"\n            className=\"form-control w-100 text-success\"\n            name=\"jobTitle\"\n            type=\"text\"\n            title=\"Job Title\"\n            placeholder=\"Job Title\"\n            value={titleDisp}\n            onChange={(e) => {\n              setTitleDisp(e.target.value);\n              setJobTitle(e.target.value);\n            }}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React, { useState, useMemo, useRef } from \"react\";\nimport { Button, Popover, PopoverHeader, PopoverBody } from \"reactstrap\";\nimport ReactQuill from \"react-quill\";\nimport \"react-quill/dist/quill.snow.css\";\n// https://codesandbox.io/s/react-quill-multiple-editor-gttvm?file=/src/App.js:351-359\n\n/* // Custom svg needed as the default icon doesn't always work\nconst CustomUndoIcon = () => (\n  <svg viewBox=\"0 0 18 18\">\n    <polygon className=\"ql-fill ql-stroke\" points=\"6 10 4 12 2 10 6 10\" />\n    <path\n      className=\"ql-stroke\"\n      d=\"M8.09,13.91A4.6,4.6,0,0,0,9,14,5,5,0,1,0,4,9\"\n    />\n  </svg>\n);\n\nconst CustomRedoIcon = () => (\n  <svg viewBox=\"0 0 18 18\">\n    <polygon className=\"ql-fill ql-stroke\" points=\"12 10 14 12 16 10 12 10\" />\n    <path\n      className=\"ql-stroke\"\n      d=\"M9.91,13.91A4.6,4.6,0,0,1,9,14a5,5,0,1,1,5-5\"\n    />\n  </svg>\n);\n */\n// Undo and redo functions for Custom Toolbar\nfunction undoChange() {\n  this.quill.history.undo();\n}\nfunction redoChange() {\n  this.quill.history.redo();\n}\n\nexport default function Step3Notes({ id, value, onChange }) {\n  const quillRef = useRef();\n  const [previewOpen, setPreviewOpen] = useState(false);\n  const [previewContent, setPreviewContent] = useState(\"\");\n  const [popoverOpen, setPopoverOpen] = useState(false);\n\n  const CustomToolbar = () => (\n    <div id={`toolbar-${id}`}>\n      <span className=\"ql-formats\">\n        <select\n          className=\"ql-header\"\n          defaultValue={\"\"}\n          onChange={(e) => e.persist()}\n        >\n          {[\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"false\"].map((value) => (\n            <option key={value} value={value} />\n          ))}\n        </select>\n        <button className=\"ql-bold\" />\n        <button className=\"ql-italic\" />\n        <button className=\"ql-underline\" />\n        <select className=\"ql-align\" />\n        <button className=\"ql-list\" value=\"bullet\" />\n        <button className=\"ql-list\" value=\"ordered\" />\n        <button className=\"ql-indent\" value=\"-1\" />\n        <button className=\"ql-indent\" value=\"+1\" />\n        <button className=\"ql-link\" />\n        <button className=\"ql-clean\" />\n      </span>\n      {/* <span className=\"ql-formats\">\n        <select className=\"ql-color\" />\n        <select className=\"ql-background\" />\n        <button className=\"ql-strike\" /> \n        <button className=\"ql-undo\">\n          <CustomUndoIcon />\n        </button>\n        <button className=\"ql-redo\">\n          <CustomRedoIcon />\n        </button>\n        <select className=\"ql-size\" defaultValue={\"\"} onChange={(e) => e.persist()}>\n          {[\"small\", \"false\", \"large\", \"huge\"].map((value, i) => (\n            <option key={value} value={value} />\n          ))}\n        </select> \n        <select className=\"ql-font\" defaultValue=\"arial\">\n          <option value=\"arial\">Arial</option>\n          <option value=\"comic-sans\">Comic Sans</option>\n          <option value=\"courier-new\">Courier New</option>\n          <option value=\"georgia\">Georgia</option>\n          <option value=\"helvetica\">Helvetica</option>\n          <option value=\"lucida\">Lucida</option>\n        </select> \n        <button className=\"ql-image\" />\n        <button className=\"ql-video\" />\n        <button className=\"ql-code-block\" />\n      </span> */}\n    </div>\n  );\n\n  const quillModules = useMemo(() => {\n    return {\n      toolbar: {\n        container: `#toolbar-${id}`,\n        handlers: {\n          preview: function (value) {\n            const html = this.quill.root.innerHTML;\n            setPreviewContent(html);\n            setPreviewOpen(!previewOpen);\n          },\n          undo: undoChange,\n          redo: redoChange,\n        },\n      },\n    };\n  }, [id, previewOpen]);\n\n  const quillFormats = [\n    \"bold\",\n    \"italic\",\n    \"underline\",\n    \"strike\",\n    \"script\",\n    \"size\",\n    \"header\",\n    \"list\",\n    \"indent\",\n    \"link\",\n    \"color\",\n    \"background\",\n    \"align\",\n    \"font\",\n    \"blockquote\",\n    \"bullet\",\n    \"image\",\n    \"code-block\",\n  ];\n\n  return (\n    <div className=\"step\">\n      <h3 id=\"step4Heading\">Application Notes</h3>\n      <Button id=\"Popover1\" type=\"button\">\n        Tips\n      </Button>\n      <Popover\n        isOpen={popoverOpen}\n        target=\"Popover1\"\n        placement=\"top\"\n        trigger=\"hover\"\n        toggle={() => {\n          setPopoverOpen(!popoverOpen);\n        }}\n      >\n        <PopoverHeader className=\"text-center\">\n          Notes to include (now or later)\n        </PopoverHeader>\n        <PopoverBody>\n          <ul>\n            <li>Application trivia</li>\n            <li>Company websites</li>\n            <li>Company research</li>\n            <li>Interview preparation</li>\n            <li>Names and contact info</li>\n            <li>Interview dates</li>\n            <li>Post-interview notes</li>\n            <li>Salary info</li>\n            <li>Updates</li>\n            <li>Personal notes, etc.</li>\n          </ul>\n        </PopoverBody>\n      </Popover>\n      <div className=\"text-editor\">\n        {CustomToolbar(id)}\n        <ReactQuill\n          ref={quillRef}\n          style={{\n            backgroundColor: \"white\",\n            minHeight: \"150px\",\n            maxHeight: \"770px\",\n            overflowY: \"auto\",\n          }}\n          theme=\"snow\"\n          // defaultValue={value}\n          value={value}\n          onChange={onChange}\n          modules={quillModules}\n          formats={quillFormats}\n        />\n        {previewOpen ? (\n          <div dangerouslySetInnerHTML={{ __html: previewContent }} />\n        ) : (\n          \"\"\n        )}\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport Dropzone from \"react-dropzone\";\n// https://react-dropzone.js.org/#section-examples\n\nexport default function Step4Resume({\n  setResumeFile,\n  resumeDisplayFile,\n  setResumeDisplayFile,\n}) {\n  return (\n    <div className=\"step w-md-75\">\n      <div className=\"d-flex align-items-center justify-content-center\">\n        <h3>Resume</h3>\n        {resumeDisplayFile.name && (\n          <button\n            className=\"btn btn-outline-success\"\n            onClick={() => {\n              setResumeDisplayFile({});\n            }}\n          >\n            x\n          </button>\n        )}\n      </div>\n      <Dropzone multiple={false} onDrop={setResumeFile}>\n        {({ getRootProps, getInputProps }) => (\n          <section>\n            <div {...getRootProps({ className: \"dropzone\" })}>\n              <input {...getInputProps()} />\n              {resumeDisplayFile.name ? (\n                <div>\n                  <span className=\"text-primary\">\n                    <strong>{resumeDisplayFile.name}</strong>{\" \"}\n                    {resumeDisplayFile.size} bytes{\" \"}\n                  </span>\n                </div>\n              ) : (\n                <strong>Drag & drop, or click to select</strong>\n              )}\n            </div>\n          </section>\n        )}\n      </Dropzone>\n    </div>\n  );\n}\n","import React from \"react\";\nimport Dropzone from \"react-dropzone\";\n\nexport default function Step5CoverLetter({\n  setCoverLetterFile,\n  coverLetterDisplayFile,\n  setCoverLetterDisplayFile,\n}) {\n  return (\n    <div className=\"step w-md-75\">\n      <div className=\"d-flex align-items-center justify-content-center\">\n        <h3>Cover Letter</h3>\n        {coverLetterDisplayFile.name && (\n          <button\n            className=\"btn btn-outline-success\"\n            onClick={() => {\n              setCoverLetterDisplayFile({});\n            }}\n          >\n            x\n          </button>\n        )}\n      </div>\n      <Dropzone multiple={false} onDrop={setCoverLetterFile}>\n        {({ getRootProps, getInputProps }) => (\n          <section>\n            <div {...getRootProps({ className: \"dropzone\" })}>\n              <input {...getInputProps()} />\n              {coverLetterDisplayFile.name ? (\n                <div>\n                  <span className=\"text-primary\">\n                    <strong>{coverLetterDisplayFile.name}</strong>{\" \"}\n                    {coverLetterDisplayFile.size} bytes{\" \"}\n                  </span>\n                </div>\n              ) : (\n                <strong>Drag & drop, or click to select</strong>\n              )}\n            </div>\n          </section>\n        )}\n      </Dropzone>\n    </div>\n  );\n}\n","export default function Step6Tags({ tags, setTags }) {\n  return (\n    <div className=\"step w-50\">\n      <strong>Tags Separated By Commas (Optional)</strong>\n      <input\n        id=\"jobTags\"\n        name=\"jobTags\"\n        className=\"form-control\"\n        type=\"string\"\n        title=\"Job tags\"\n        // value={tags}\n        onChange={(e) => {\n          setTags(e.target.value);\n        }}\n      />\n    </div>\n  );\n}\n","import React from \"react\";\nimport { DatePicker } from \"reactstrap-date-picker\";\n\nexport default function Step7Date({ subDate, setSubDate }) {\n  return (\n    <div className=\"step w-md-75\">\n      <h3>Submit Date</h3>\n      <DatePicker\n        id=\"subDate\"\n        value={subDate}\n        onChange={(v, f) => {\n          // v=value, f=formatted\n          setSubDate(String(new Date(v)));\n        }}\n        showClearButton={false}\n      />\n    </div>\n  );\n}\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport Context from \"../utils/context\";\nimport BtnCareerRenamer from \"../components/BtnModalCareerRenamer\";\nimport BtnCareerSwitcher from \"../components/BtnModalCareerSwitcher\";\nimport BtnCareerAdder from \"../components/BtnModalCareerAdder\";\nimport Step1UrlDesc from \"../components/Step1UrlDesc\";\nimport Step2NameTitle from \"../components/Step2NameTitle\";\nimport Step3Notes from \"../components/Step3Notes\";\nimport Step4Resume from \"../components/Step4Resume\";\nimport Step5CoverLetter from \"../components/Step5CoverLetter\";\nimport Step6Tags from \"../components/Step6Tags\";\nimport Step7Date from \"../components/Step7Date\";\n\nexport default function AddPage() {\n  const context = useContext(Context);\n  const [data] = useState(JSON.parse(useParams().data));\n  console.log(data);\n  const [currentCareerNum, setCurrentCareerNum] = useState(0);\n  const [careersList, setCareersList] = useState([\"C1\", \"C2\"]);\n  const [postingURL, setPostingURL] = useState(\"\");\n  const [companyName, setCompanyName] = useState(data[\"company\"]);\n  const [jobTitle, setJobTitle] = useState(data[\"title\"]);\n  const [jobDescription, setJobDescription] = useState(\"\");\n  const [jobNotes, setJobNotes] = useState(\"\");\n  const [byteaResume, setByteaResume] = useState();\n  const [byteaCoverLetter, setByteaCoverLetter] = useState();\n  const [resumeDisplayFile, setResumeDisplayFile] = useState({});\n  const [coverLetterDisplayFile, setCoverLetterDisplayFile] = useState({});\n  const [tags, setTags] = useState(\"\");\n  const [subDate, setSubDate] = useState(String(new Date()));\n\n  useEffect(() => {\n    let dbProfile = context.dbProfileState;\n    if (dbProfile) {\n      setCurrentCareerNum(dbProfile.current_career_num);\n      setCareersList(dbProfile.careers_list);\n    }\n  }, [context.dbProfileState]);\n\n  async function setResumeFile(newFile) {\n    const arrayBuffer = await context.getByteArray(newFile[0]);\n    console.log(arrayBuffer);\n    const bytea = new Uint8Array(arrayBuffer);\n    console.log(bytea);\n    setByteaResume(bytea);\n    setResumeDisplayFile(newFile[0]);\n  }\n\n  async function setCoverLetterFile(newFile) {\n    const arrayBuffer = await context.getByteArray(newFile[0]);\n    const bytea = new Uint8Array(arrayBuffer);\n    setByteaCoverLetter(bytea);\n    setCoverLetterDisplayFile(newFile[0]);\n  }\n\n  function handleSaveApp() {\n    if (companyName.length === 0 || jobTitle.length === 0) {\n      document.querySelector(\".step2\").style.color = \"red\";\n      alert(\"Save unsuccessful. Required data is missing.\");\n      return;\n    }\n    const data = {\n      username: context.isAuthenticated ? context.user.email : \"demoUser\",\n      postingURL: postingURL,\n      companyName: companyName,\n      jobDescription: jobDescription.toString(\"html\"),\n      jobTitle: jobTitle,\n      jobNotes: jobNotes.toString(\"html\"),\n      resumeFile: byteaResume,\n      coverLetterFile: byteaCoverLetter,\n      tags: tags.split(\",\"),\n      careerName: careersList[currentCareerNum],\n      applicationDate: String(subDate),\n    };\n    // console.log(data);\n    axios\n      .post(\"/api/post/postapp\", data)\n      .then((res) => {\n        console.log(\"/api/post/postapp\", res);\n        if (context.isAuthenticated) {\n          console.log(`Saved to user ${context.user.email}'s database.`);\n        } else {\n          console.log(`Saved to public demonstration database.`);\n        }\n        clearForm();\n      })\n      .catch((err) => {\n        console.log(err);\n        alert(\"Not saved. Error: Website under development\");\n      });\n  }\n\n  function clearForm() {\n    setPostingURL(\"\");\n    setJobDescription(\"\");\n    setCompanyName(\"\");\n    setJobTitle(\"\");\n    setJobNotes(\"\");\n    setByteaResume([]);\n    setByteaCoverLetter([]);\n    let nodeList = document.getElementsByTagName(\"input\");\n    let nodeListConvertedToArray = Array.prototype.slice.call(nodeList);\n    nodeListConvertedToArray.forEach((input) => {\n      input.value = \"\";\n    });\n    document.querySelector(\".step2\").style.color = \"initial\";\n  }\n\n  return (\n    <div className=\"centeredPage\">\n      <h1>New Application</h1>\n      <h3>\n        Career:&nbsp;\n        <span className=\"text-success\">{careersList[currentCareerNum]}</span>\n      </h3>\n      <div className=\"d-flex\">\n        <BtnCareerSwitcher\n          careersList={careersList}\n          currentCareerNum={currentCareerNum}\n          setCurrentCareerNum={setCurrentCareerNum}\n        />\n        <BtnCareerAdder\n          careersList={careersList}\n          setCareersList={setCareersList}\n          setCurrentCareerNum={setCurrentCareerNum}\n        />\n        <BtnCareerRenamer\n          careersList={careersList}\n          setCareersList={setCareersList}\n          currentCareerNum={currentCareerNum}\n        />\n      </div>\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col\">\n            <Step1UrlDesc\n              id=\"step3editor\"\n              name=\"step3editor\"\n              value={jobDescription}\n              setPostingURL={setPostingURL}\n              setJobDescription={setJobDescription}\n            />\n          </div>\n          <div className=\"col\">\n            <Step2NameTitle\n              setCompanyName={setCompanyName}\n              setJobTitle={setJobTitle}\n              data={data}\n            />\n            <Step3Notes\n              id=\"step4editor\"\n              value={jobNotes}\n              onChange={setJobNotes}\n            />\n          </div>\n        </div>\n      </div>\n      <div className=\"container w-50\">\n        <div className=\"row\">\n          <div className=\"col\">\n            <Step4Resume\n              setResumeFile={setResumeFile}\n              resumeDisplayFile={resumeDisplayFile}\n              setResumeDisplayFile={setResumeDisplayFile}\n            />\n          </div>\n          <div className=\"col\">\n            <Step5CoverLetter\n              setCoverLetterFile={setCoverLetterFile}\n              coverLetterDisplayFile={coverLetterDisplayFile}\n              setCoverLetterDisplayFile={setCoverLetterDisplayFile}\n            />\n          </div>\n        </div>\n      </div>\n      <Step6Tags setTags={setTags} />\n      <Step7Date subDate={subDate} setSubDate={setSubDate} />\n      <div className=\"step w-50\">\n        <button className=\"btn btn-success p-2\" onClick={handleSaveApp}>\n          Save\n        </button>\n      </div>\n    </div>\n  );\n}\n ","import { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\n\nexport default function BtnModalCreateJob({ allAppsList }) {\n  const navigate = useNavigate();\n  const [modalOn, setModalOn] = useState(false);\n  const [companyName, setCompanyName] = useState(\"\");\n  const [jobTitle, setJobTitle] = useState(\"\");\n  const [similarEntriesList, setSimilarEntriesList] = useState([]);\n\n  function toggleModal() {\n    setModalOn(!modalOn);\n  }\n\n  useEffect(() => {\n    if (!companyName && !jobTitle) {\n      setSimilarEntriesList([]);\n    } else {\n      setSimilarEntriesList(\n        allAppsList.filter((app) => {\n          return (\n            app[\"company_name\"]\n              .toLowerCase()\n              .includes(companyName.toLowerCase()) &&\n            app[\"job_title\"].toLowerCase().includes(jobTitle.toLowerCase())\n          );\n        })\n      );\n    }\n  }, [companyName, jobTitle]);\n\n  return (\n    <div className=\"dropdown text-center\">\n      <button\n        type=\"button\"\n        className=\"btn btn-primary m-1\"\n        onClick={() => {\n          toggleModal();\n        }}\n      >\n        + Create\n      </button>\n      <Modal isOpen={modalOn} toggle={toggleModal}>\n        <ModalHeader toggle={toggleModal}>TRACK A NEW JOB</ModalHeader>\n        <ModalBody>\n          <div className=\"step2 d-flex justify-content-space-between justify-content-md-center gap-1 gap-md-5 required\">\n            <div className=\"d-flex flex-column\">\n              <label htmlFor=\"jobTitle\">\n                <strong>Company: </strong>\n              </label>\n              <input\n                id=\"companyName\"\n                className=\"form-control w-100\"\n                name=\"companyName\"\n                type=\"text\"\n                title=\"Company Name\"\n                placeholder=\"Company\"\n                value={companyName}\n                onChange={(e) => {\n                  setCompanyName(e.target.value);\n                }}\n              />\n            </div>\n            <div className=\"d-flex flex-column\">\n              <label htmlFor=\"jobTitle\">\n                <strong>Job Title: </strong>\n              </label>\n              <input\n                id=\"jobTitle\"\n                className=\"form-control w-100\"\n                name=\"jobTitle\"\n                type=\"text\"\n                title=\"Job Title\"\n                placeholder=\"Job Title\"\n                value={jobTitle}\n                onChange={(e) => {\n                  setJobTitle(e.target.value);\n                }}\n              />\n            </div>\n          </div>\n          <div className=\"step2 d-flex justify-content-space-between justify-content-md-center gap-1 gap-md-5 required\"></div>\n        </ModalBody>\n        <ModalFooter className=\"d-flex justify-content-between\">\n          <Button\n            color=\"success\"\n            disabled={!companyName && !jobTitle}\n            onClick={() => {\n              setCompanyName(\"\");\n              setJobTitle(\"\");\n            }}\n          >\n            Reset\n          </Button>\n          <Button\n            color=\"primary\"\n            disabled={!companyName || !jobTitle}\n            onClick={() => {\n              navigate(\n                `/add/{\"company\":\"${companyName}\",\"title\":\"${jobTitle}\"}`\n              );\n            }}\n          >\n            Add\n          </Button>\n        </ModalFooter>\n        <ModalFooter className=\"d-flex flex-column justify-content-between align-items-center\">\n          <h5>Matching Entries</h5>\n          <div>\n            {similarEntriesList.length > 0 && (\n              <table className=\"table table-bordered text-center mt-4\">\n                <thead>\n                  <tr>\n                    <th>Company</th>\n                    <th>Title</th>\n                    <th>Application Date</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {similarEntriesList.map((entry, i) => {\n                    let date = new Date(entry[\"application_date\"]);\n                    return (\n                      <tr key={i}>\n                        <td>{entry[\"company_name\"]}</td>\n                        <td>{entry[\"job_title\"]}</td>\n                        <td>{`${date.getFullYear()}-${\n                          date.getMonth() + 1\n                        }-${date.getDate()}`}</td>\n                      </tr>\n                    );\n                  })}\n                </tbody>\n              </table>\n            )}\n          </div>\n        </ModalFooter>\n      </Modal>\n    </div>\n  );\n}\n","import React from \"react\";\n\nexport default function SearchRadio({ selectedSearchOption, setSelectedSearchOption }) {\n  return (\n    <form className=\"d-flex mt-2\">\n      <div className=\"form-check\">\n        <label>\n          <input\n            type=\"radio\"\n            name=\"react-tips\"\n            value=\"job_title\"\n            checked={selectedSearchOption === \"job_title\"}\n            onClick={() => {\n              setSelectedSearchOption(\"job_title\");\n            }}\n            className=\"form-check-input\"\n            readOnly\n          />\n          Job Title\n        </label>\n      </div>\n      &nbsp;\n      <div className=\"form-check\">\n        <label>\n          <input\n            type=\"radio\"\n            name=\"react-tips\"\n            value=\"company_name\"\n            checked={selectedSearchOption === \"company_name\"}\n            onClick={() => {\n              setSelectedSearchOption(\"company_name\");\n            }}\n            className=\"form-check-input\"\n            readOnly\n          />\n          Company\n        </label>\n      </div>\n      &nbsp;\n      <div className=\"form-check\">\n        <label>\n          <input\n            type=\"radio\"\n            name=\"react-tips\"\n            value=\"job_description\"\n            checked={selectedSearchOption === \"job_description\"}\n            onClick={() => {\n              setSelectedSearchOption(\"job_description\");\n            }}\n            className=\"form-check-input\"\n            readOnly\n          />\n          Description\n        </label>\n      </div>\n    </form>\n  );\n}\n","import React, { useState } from \"react\";\nimport SearchRadio from \"../components/SearchRadio\";\nimport { FormGroup, Label } from \"reactstrap\";\nimport { DatePicker } from \"reactstrap-date-picker\";\n\nimport {\n  Accordion,\n  AccordionBody,\n  AccordionHeader,\n  AccordionItem,\n} from \"reactstrap\";\n\nexport default function SearchAccordion({\n  searchString,\n  setSearchString,\n  loadAllRecords,\n  resetSearchParams,\n  selectedSearchOption,\n  setSelectedSearchOption,\n  dateRangeStart,\n  setDateRangeStart,\n  dateRangeEnd,\n  setDateRangeEnd,\n}) {\n  const [open, setOpen] = useState(\"0\");\n  const toggle = () => {\n    if (open === \"1\") {\n      setOpen(\"0\");\n    } else {\n      setOpen(\"1\");\n    }\n  };\n\n  return (\n    <Accordion open={open} toggle={toggle}>\n      <AccordionItem>\n        <AccordionHeader targetId=\"1\" style={{ width: \"100%\" }}>\n          Search\n        </AccordionHeader>\n        <AccordionBody accordionId=\"1\">\n          <div className=\"d-flex flex-column justify-content-center align-items-center pt-3 px-2\">\n            <form\n              className=\"form-inline d-flex justify-content-center align-items-center my-2 my-lg-0\"\n              onSubmit={(e) => {\n                e.preventDefault();\n              }}\n            >\n              <div className=\"justify-content-center align-items-center\">\n                Search:&nbsp;\n              </div>\n              <input\n                className=\"form-control mr-sm-2\"\n                id=\"searchInput\"\n                type=\"search\"\n                placeholder=\"keywords\"\n                aria-label=\"Search\"\n                value={searchString}\n                onChange={(e) => {\n                  setSearchString(e.target.value);\n                }}\n              />\n              <button\n                className=\"btn btn-outline-success my-2 my-sm-0\"\n                onClick={() => {\n                  loadAllRecords();\n                  resetSearchParams();\n                }}\n              >\n                Reset\n              </button>\n            </form>\n            <SearchRadio\n              selectedSearchOption={selectedSearchOption}\n              setSelectedSearchOption={setSelectedSearchOption}\n            />\n            <div className=\"d-flex mt-3\">\n              <FormGroup className=\"d-flex align-items-center\">\n                <Label>From:&nbsp;</Label>\n                <DatePicker\n                  id=\"example-datepicker1\"\n                  value={dateRangeStart}\n                  onChange={(v, f) => {\n                    //v=value, f=formatted\n                    setDateRangeStart(v);\n                  }}\n                />\n              </FormGroup>\n              &nbsp;\n              <FormGroup className=\"d-flex align-items-center\">\n                <Label>To:&nbsp;</Label>\n                <DatePicker\n                  id=\"example-datepicker2\"\n                  value={dateRangeEnd}\n                  onChange={(v, f) => {\n                    //v=value, f=formatted\n                    setDateRangeEnd(v);\n                  }}\n                />\n              </FormGroup>\n            </div>\n          </div>\n        </AccordionBody>\n      </AccordionItem>\n    </Accordion>\n  );\n}\n","import React from \"react\";\nimport Context from \"../utils/context\";\nimport { useState, useEffect, useContext } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSort } from \"@fortawesome/free-solid-svg-icons\";\nimport BtnModalCreateJob from \"../components/BtnModalCreateJob\";\nimport SearchAccordion from \"../components/SearchAccordion\";\n\nexport default function SearchPage() {\n  const context = useContext(Context);\n  const [allAppsList, setAllAppsList] = useState([]);\n  const [displayedAppsList, setDisplayedAppsList] = useState([]);\n  const [searchString, setSearchString] = useState(\"\");\n  const [selectedSearchOption, setSelectedSearchOption] = useState(\"job_title\");\n  const [dateRangeStart, setDateRangeStart] = useState(\"\");\n  const [dateRangeEnd, setDateRangeEnd] = useState(\"\");\n  const [dateSortLatest, setDateSortLatest] = useState(true);\n  const [companySortAscending, setCompanySortAscending] = useState(true);\n  const [titleSortAscending, setTitleSortAscending] = useState(true);\n\n  /* The allAppsList state will contain all of current user's records in this format: \n    [{app_id: 1, application_date: 'Sat Dec 24 2022 13:07:37 GMT-0800 (Pacific Standard Time)', company_name: 'xyz', job_title: 'abc', job_description: ''},\n    {app_id: 2, application_date: 'Sat Dec 24 2022 13:07:37 GMT-0800 (Pacific Standard Time)', company_name: 'xyz', job_title: 'abc', job_description: ''},\n    {app_id: 3, application_date: 'Sat Dec 24 2022 13:07:37 GMT-0800 (Pacific Standard Time)', company_name: 'xyz', job_title: 'abc', job_description: ''}] \n    Use the input values of searchString, selectedSearchOption, dateRangeStart, and dateRangeEnd to create a subset of these records that corresponds to \n    these input values. Set displayedAppsList equal to the resulting subset using setDisplayedAppsList. */\n\n  // get all records from db\n  function loadAllRecords() {\n    if (context.isAuthenticated && context.dbProfileState) {\n      const username = context.dbProfileState.username;\n      axios\n        .get(\"/api/get/all-user-apps\", { params: { email: username } })\n        .then((res) => {\n          setAllAppsList(res.data);\n          setDisplayedAppsList(res.data);\n          // console.log(res.data);\n        })\n        .catch((err) => console.log(err));\n    }\n  }\n\n  function resetSearchParams() {\n    setSearchString(\"\");\n    setDateRangeStart(\"\");\n    setDateRangeEnd(\"\");\n  }\n\n  function setDisplayedList(searchString) {\n    const startDate = dateRangeStart ? new Date(dateRangeStart) : new Date(0);\n    const endDate = dateRangeEnd ? new Date(dateRangeEnd) : new Date();\n    let results = [];\n    allAppsList.forEach((app) => {\n      const appDate = new Date(app.application_date);\n      if (\n        app[selectedSearchOption]\n          .toLowerCase()\n          .includes(searchString.toLowerCase()) &&\n        appDate >= startDate &&\n        appDate <= endDate\n      ) {\n        results.push(app);\n      }\n    });\n    setDisplayedAppsList(results);\n  }\n\n  /*  \n  // server side search will be used if we decide to load only some records at page load and make server requests later for ones we don't have\n  function serverSideSearch() {\n    if (context.isAuthenticated && context.dbProfileState) {\n      const username = context.dbProfileState.username;\n      axios\n        .get(\"/api/get/search-terms\", {\n          params: {\n            email: username,\n            searchStr: searchString,\n            searchOption: selectedSearchOption,\n          },\n        })\n        .then((res) => {\n          setDisplayedAppsList(res.data);\n          console.log(res.data);\n        })\n        .catch((err) => console.log(err));\n    }\n  }\n  */\n\n  useEffect(() => {\n    setDisplayedList(searchString);\n  }, [searchString, dateRangeStart, dateRangeEnd]);\n\n  // load all records on mount or context change\n  useEffect(() => {\n    loadAllRecords();\n  }, [context]);\n\n  function toggleDateSort() {\n    let temp = [...displayedAppsList];\n    temp.sort(function (a, b) {\n      let dateA = new Date(a.application_date);\n      let dateB = new Date(b.application_date);\n      if (dateSortLatest) {\n        return dateA - dateB;\n      } else {\n        return dateB - dateA;\n      }\n    });\n    setDisplayedAppsList(temp);\n    setDateSortLatest(!dateSortLatest);\n  }\n\n  function toggleCompanySort() {\n    let temp = [...displayedAppsList];\n    temp.sort(function (a, b) {\n      let stringA = a.company_name.toLowerCase();\n      let stringB = b.company_name.toLowerCase();\n      if (companySortAscending) {\n        if (stringA > stringB) {\n          return 1;\n        } else {\n          return -1;\n        }\n      } else {\n        if (stringA < stringB) {\n          return 1;\n        } else {\n          return -1;\n        }\n      }\n    });\n    setDisplayedAppsList(temp);\n    setCompanySortAscending(!companySortAscending);\n  }\n\n  function toggleTitleSort() {\n    let temp = [...displayedAppsList];\n    temp.sort(function (a, b) {\n      let stringA = a.job_title.toLowerCase();\n      let stringB = b.job_title.toLowerCase();\n      if (titleSortAscending) {\n        if (stringA > stringB) {\n          return 1;\n        } else {\n          return -1;\n        }\n      } else {\n        if (stringA < stringB) {\n          return 1;\n        } else {\n          return -1;\n        }\n      }\n    });\n    setDisplayedAppsList(temp);\n    setTitleSortAscending(!titleSortAscending);\n  }\n\n  return (\n    <div className=\"centeredPage\">\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col\"></div>\n          <div className=\"col text-center\">\n            <h1>My Jobs</h1>\n          </div>\n          <div className=\"col d-flex justify-content-start\">\n            <BtnModalCreateJob allAppsList={allAppsList} />\n          </div>\n        </div>\n      </div>\n\n      <SearchAccordion\n        searchString={searchString}\n        setSearchString={setSearchString}\n        loadAllRecords={loadAllRecords}\n        resetSearchParams={resetSearchParams}\n        selectedSearchOption={selectedSearchOption}\n        setSelectedSearchOption={setSelectedSearchOption}\n        dateRangeStart={dateRangeStart}\n        setDateRangeStart={setDateRangeStart}\n        dateRangeEnd={dateRangeEnd}\n        setDateRangeEnd={setDateRangeEnd}\n      />\n\n      <table className=\"table table-bordered text-center w-50 mt-4\">\n        <thead>\n          <tr>\n            <th>\n              Date &nbsp;\n              <button onClick={toggleDateSort}>\n                <FontAwesomeIcon icon={faSort} />\n              </button>\n            </th>\n            <th>\n              Job Title&nbsp;\n              <button onClick={toggleTitleSort}>\n                <FontAwesomeIcon icon={faSort} />\n              </button>\n            </th>\n            <th>\n              Company&nbsp;\n              <button onClick={toggleCompanySort}>\n                <FontAwesomeIcon icon={faSort} />\n              </button>\n            </th>\n            <th>Application</th>\n            <th>\n              Elapsed&nbsp;\n              <button onClick={toggleDateSort}>\n                <FontAwesomeIcon icon={faSort} />\n              </button>\n            </th>\n          </tr>\n        </thead>\n        <tbody>\n          {displayedAppsList.length > 0 &&\n            displayedAppsList.map((item, i) => {\n              let appDate = new Date(item.application_date);\n              let currDate = new Date();\n              let elapsedDays =\n                Math.ceil((currDate - appDate) / (1000 * 3600 * 24)) - 1;\n              return (\n                <tr key={i}>\n                  <td>\n                    <div>{`${appDate.getFullYear()}-${\n                      appDate.getMonth() + 1\n                    }-${appDate.getDate()}`}</div>\n                  </td>\n                  <td>\n                    <div>{item.job_title}</div>\n                  </td>\n                  <td>\n                    <div>{item.company_name}</div>\n                  </td>\n                  <td>\n                    <Link to={`/app/${item.app_id}`}>View/Edit</Link>\n                  </td>\n                  <td>\n                    <div>{`${elapsedDays} days`}</div>\n                  </td>\n                </tr>\n              );\n            })}\n        </tbody>\n      </table>\n      {!displayedAppsList && <h2>Click \"+ Create\" to add new jobs</h2>}\n    </div>\n  );\n}\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport Context from \"../utils/context\";\nimport BtnCareerRenamer from \"../components/BtnModalCareerRenamer\";\nimport BtnCareerSwitcher from \"../components/BtnModalCareerSwitcher\";\nimport BtnCareerAdder from \"../components/BtnModalCareerAdder\";\nimport Step1UrlDesc from \"../components/Step1UrlDesc\";\nimport Step2NameTitle from \"../components/Step2NameTitle\";\nimport Step3Notes from \"../components/Step3Notes\";\nimport Step4Resume from \"../components/Step4Resume\";\nimport Step5CoverLetter from \"../components/Step5CoverLetter\";\nimport Step6Tags from \"../components/Step6Tags\";\nimport Step7Date from \"../components/Step7Date\";\n\nexport default function AppPage() {\n  const { id } = useParams();\n  const context = useContext(Context);\n  const [appData, setAppData] = useState();\n  const [postingURL, setPostingURL] = useState(\"\");\n  const [companyName, setCompanyName] = useState(\"\");\n  const [jobTitle, setJobTitle] = useState(\"\");\n  const [jobDescription, setJobDescription] = useState(\"\");\n  const [jobNotes, setJobNotes] = useState(\"\");\n  const [careerName, setCareerName] = useState(\"\");\n  const [byteaResume, setByteaResume] = useState();\n  const [byteaCoverLetter, setByteaCoverLetter] = useState();\n  const [resumeDisplayFile, setResumeDisplayFile] = useState({});\n  const [coverLetterDisplayFile, setCoverLetterDisplayFile] = useState({});\n  const [tags, setTags] = useState(\"\");\n  const [appDate, setAppDate] = useState();\n  const [careersList, setCareersList] = useState([\"\"]);\n  const [currentCareerNum, setCurrentCareerNum] = useState(0);\n  const [elapsedDays, setElapsedDays] = useState(0);\n\n  /* \n  app_id SERIAL UNIQUE,\n  username TEXT UNIQUE REFERENCES users(username),\n  career_name TEXT,\n  posting_url TEXT,\n  company_name TEXT NOT NULL,\n  job_title TEXT NOT NULL,\n  job_description TEXT,\n  job_notes TEXT,\n  resume_file BYTEA, \n  cover_letter_file BYTEA,\n  tags TEXT [],\n  application_date TEXT,\n  */\n\n  useEffect(() => {\n    if (context.isAuthenticated && context.dbProfileState) {\n      let dbProfile = context.dbProfileState;\n      if (dbProfile) {\n        setCareersList(dbProfile.careers_list);\n      }\n      axios\n        .get(\"/api/get/app\", { params: { id } })\n        .then((res) => {\n          setAppData(res.data);\n          console.log(\"res.data\", res.data);\n          // Set all states here using res.data. In fact, I don't think we even need the appData state by doing this.\n          setPostingURL(res.data.posting_url);\n          setCompanyName(res.data.company_name);\n          setJobTitle(res.data.job_title);\n          setJobDescription(res.data.job_description);\n          setJobNotes(res.data.job_notes);\n          setTags(res.data.tags);\n          setCareerName(res.data.career_name);\n          setCurrentCareerNum(dbProfile.current_career_num);\n          let appDate = new Date(res.data.application_date);\n          setAppDate(appDate);\n          let currDate = new Date();\n          let elapsed =\n            Math.ceil((currDate - appDate) / (1000 * 3600 * 24)) - 1;\n          setElapsedDays(elapsed);\n        })\n        .catch((err) => console.log(err));\n    }\n  }, [context]);\n\n  useEffect(() => {\n    if (appData) {\n    }\n  }, [appData]);\n\n  function handleUpdateApp() {}\n\n  return (\n    appData && (\n      <div className=\"centeredPage\">\n        <h1>View/Edit This Application</h1>\n        {/* <h1>Application ID: {id}</h1>\n        <div>application_date: {appData.application_date}</div>\n        <div>company_name: {appData.company_name}</div>\n        <div>job_title: {appData.job_title}</div>\n        <div>career_name: {appData.career_name}</div>\n        <div>posting_url: {appData.posting_url}</div>\n        <div>job_description: {appData.job_description}</div>\n        <div>job_notes: {appData.job_notes}</div>\n        <div>tags: {appData.tags}</div> */}\n        {/*  */}\n        {/* <h2>Application Date:</h2> */}\n        <Step2NameTitle\n          setCompanyName={setCompanyName}\n          setJobTitle={setJobTitle}\n          data={{\n            company: companyName,\n            title: jobTitle,\n          }}\n        />\n        {appDate && (\n          <h3>\n            Application Date:{\" \"}\n            {`${appDate.getFullYear()}-${\n              appDate.getMonth() + 1\n            }-${appDate.getDate()} (${elapsedDays} day${\n              elapsedDays > 1 ? \"s\" : \"\"\n            } ago)`}\n          </h3>\n        )}\n        <span className=\"text-success d-flex justify-content-center align-items-center\">\n          <h3>\n            Career: {careerName}\n            &nbsp; &nbsp;\n          </h3>\n          <BtnCareerSwitcher\n            careersList={careersList}\n            currentCareerNum={currentCareerNum}\n            setCurrentCareerNum={setCurrentCareerNum}\n          />\n        </span>\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col\">\n              <Step1UrlDesc\n                id=\"step3editor\"\n                name=\"step3editor\"\n                value={jobDescription}\n                url={postingURL}\n                setPostingURL={setPostingURL}\n                setJobDescription={setJobDescription}\n              />\n            </div>\n            <div className=\"col\">\n              <Step3Notes\n                id=\"step4editor\"\n                value={jobNotes}\n                onChange={setJobNotes}\n              />\n            </div>\n          </div>\n        </div>\n        <div className=\"container w-50\">\n          <div className=\"row\">\n            <div className=\"col\">\n              {}\n              {/* <Step4Resume\n                setResumeFile={setResumeFile}\n                resumeDisplayFile={resumeDisplayFile}\n                setResumeDisplayFile={setResumeDisplayFile}\n              /> */}\n            </div>\n            <div className=\"col\">\n              {/* <Step5CoverLetter\n                setCoverLetterFile={setCoverLetterFile}\n                coverLetterDisplayFile={coverLetterDisplayFile}\n                setCoverLetterDisplayFile={setCoverLetterDisplayFile}\n              /> */}\n            </div>\n          </div>\n        </div>\n        <Step6Tags setTags={setTags} value={appData.tags} />\n        <div className=\"step w-50\">\n          <button className=\"btn btn-success p-2\" onClick={handleUpdateApp}>\n            Update\n          </button>\n        </div>\n        {/*  */}\n      </div>\n    )\n  );\n}\n","export default __webpack_public_path__ + \"static/media/loading.330b7d99.svg\";","import React from \"react\";\nimport loading from \"../assets/loading.svg\";\n\nconst LoadingSpinner = () => (\n  <div className=\"centeredPage\">\n    <h3>Loading</h3>\n    <img src={loading} alt=\"Loading\" />\n  </div>\n);\n\nexport default LoadingSpinner;\n","import React from \"react\";\nimport { useAuth0, withAuthenticationRequired } from \"@auth0/auth0-react\";\nimport { useNavigate } from \"react-router-dom\";\nimport LoadingSpinner from \"../components/LoadingSpinner\";\n\nconst Profile = () => {\n  const { user, logout } = useAuth0();\n  const navigate = useNavigate();\n  const goBack = () => {\n    navigate(-1);\n  };\n\n  return (\n    <div className=\"centeredPage\">\n      <h1>Profile</h1>\n      <button onClick={goBack}>Back</button>\n      {user.email && <p>Email: {user.email}</p>}\n      {user.family_name && <p>Family name: {user.family_name}</p>}\n      {user.given_name && <p>Given name: {user.given_name}</p>}\n      {user.name && <p>Name: {user.name}</p>}\n      {user.locale && <p>Locale: {user.locale}</p>}\n      {user.nickname && <p>Nickname: {user.nickname}</p>}\n      <button className=\"btn btn-primary\" onClick={() => logout()}>\n        Log out\n      </button>\n    </div>\n  );\n};\n\nexport default withAuthenticationRequired(Profile, {\n  onRedirecting: () => <LoadingSpinner />,\n});\n","export default __webpack_public_path__ + \"static/media/logo1.37c20868.png\";","import React from \"react\";\nimport logo1 from \"../assets/logo1.png\";\n\nexport default function HomePage() {\n  return (\n    <div className=\"d-flex flex-column justify-content-center align-items-center \">\n      <h1>Job Tracker</h1>\n      \n      <img src={logo1} alt=\"logo\"></img>\n      <h3>Log in</h3>\n    </div>\n  );\n}\n","import React, { useReducer, useEffect } from \"react\";\nimport Context from \"./utils/context\";\nimport * as AuthReducer from \"./store/reducers/authReducer\";\nimport * as ACTIONS from \"./store/actions/actions\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport axios from \"axios\";\nimport { HashRouter, Route, Routes } from \"react-router-dom\";\nimport NavBar from \"./components/NavBar\";\nimport AddPage from \"./pages/AddPage\";\nimport JobsPage from \"./pages/JobsPage\";\nimport AppPage from \"./pages/AppPage\";\nimport ProfilePage from \"./pages/ProfilePage\";\nimport HomePage from \"./pages/HomePage\";\n\nexport default function ContextState() {\n  const auth0 = useAuth0();\n\n  useEffect(() => {\n    if (auth0.isAuthenticated) {\n      let profile = auth0.user;\n      dispatchLogin();\n      dispatchSetAuthProfile(profile);\n      axios\n        .post(\"/api/post/userprofiletodb\", profile)\n        .then(\n          axios\n            .get(\"/api/get/userprofilefromdb\", {\n              params: { email: profile.email },\n            })\n            .then((res) => dispatchSetDbProfile(res.data[0]))\n            .catch((err) => console.log(err))\n        )\n        .catch((err) => console.log(err));\n    } else {\n      dispatchLogout();\n      dispatchRemoveAuthProfile();\n    }\n  }, [auth0.isAuthenticated, auth0.user]);\n\n  /*Auth Reducer: although the useAuth0 library object provides global auth state access from the \n  cloud, storing our own version in a reducer at login allows for local retrieval of auth state values \n  in between login/logout*/\n  const [stateAuthReducer, dispatchAuthReducer] = useReducer(\n    AuthReducer.AuthReducer,\n    AuthReducer.initialState\n  );\n\n  function dispatchLogin() {\n    dispatchAuthReducer(ACTIONS.login_success());\n  }\n\n  function dispatchLogout() {\n    dispatchAuthReducer(ACTIONS.login_failure());\n  }\n\n  function dispatchSetAuthProfile(profile) {\n    dispatchAuthReducer(ACTIONS.set_profile(profile));\n  }\n\n  function dispatchSetDbProfile(profile) {\n    dispatchAuthReducer(ACTIONS.set_db_profile(profile));\n  }\n\n  function dispatchRemoveAuthProfile() {\n    dispatchAuthReducer(ACTIONS.remove_profile());\n  }\n\n  function getByteArray(file) {\n    return new Promise((acc, err) => {\n      const reader = new FileReader();\n      reader.onloadend = (event) => {\n        acc(event.target.result);\n      };\n      reader.onerror = (error) => {\n        err(error);\n      };\n      reader.readAsArrayBuffer(file);\n    });\n  }\n\n  return (\n    <Context.Provider\n      value={{\n        auth0: auth0,\n        user: auth0.user,\n        dispatchLogin: () => dispatchLogin(),\n        dispatchLogout: () => dispatchLogout(),\n        dispatchSetAuthProfile: (profile) => dispatchSetAuthProfile(profile),\n        dispatchRemoveAuthProfile: () => dispatchRemoveAuthProfile(),\n        dispatchSetDbProfile: (profile) => dispatchSetDbProfile(profile),\n        stateAuthReducer: stateAuthReducer,\n        isAuthenticated: stateAuthReducer.isAuthenticated,\n        dbProfileState: stateAuthReducer.dbProfile,\n        authProfile: stateAuthReducer.authProfile,\n        getByteArray: (file) => getByteArray(file),\n      }}\n    >\n      <HashRouter basename=\"/\">\n        <NavBar />\n        <Routes>\n          <Route\n            path=\"/\"\n            element={auth0.isAuthenticated ? <JobsPage /> : <HomePage />}\n          />\n          <Route path=\"/home\" element={<HomePage />} />\n          <Route path=\"/add/:data\" element={<AddPage />} />\n          <Route path=\"/jobs\" element={<JobsPage />} />\n          <Route path=\"/app/:id\" element={<AppPage />} />\n          <Route path=\"/profile\" element={<ProfilePage />} />\n        </Routes>\n      </HashRouter>\n    </Context.Provider>\n  );\n}\n","import * as ACTION_TYPES from \"./actionTypes\";\r\n\r\nexport const SUCCESS = {\r\n  type: ACTION_TYPES.SUCCESS,\r\n};\r\n\r\nexport const FAILURE = {\r\n  type: ACTION_TYPES.FAILURE,\r\n};\r\n\r\nexport const success = () => {\r\n  return {\r\n    type: ACTION_TYPES.SUCCESS,\r\n  };\r\n};\r\n\r\nexport const failure = () => {\r\n  return {\r\n    type: ACTION_TYPES.FAILURE,\r\n  };\r\n};\r\n\r\nexport const set_profile = (profile) => {\r\n  return {\r\n    type: ACTION_TYPES.SET_PROFILE,\r\n    payload: profile,\r\n  };\r\n};\r\n\r\nexport const remove_profile = () => {\r\n  return {\r\n    type: ACTION_TYPES.REMOVE_PROFILE,\r\n  };\r\n};\r\n\r\nexport const login_success = () => {\r\n  return {\r\n    type: ACTION_TYPES.LOGIN_SUCCESS,\r\n  };\r\n};\r\n\r\nexport const login_failure = () => {\r\n  return {\r\n    type: ACTION_TYPES.LOGIN_FAILURE,\r\n  };\r\n};\r\n\r\nexport const user_input_change = (text) => {\r\n  return {\r\n    type: ACTION_TYPES.USER_INPUT_CHANGE,\r\n    payload: text,\r\n  };\r\n};\r\n\r\nexport const user_input_submit = (text) => {\r\n  return {\r\n    type: ACTION_TYPES.USER_INPUT_SUBMIT,\r\n    payload: text,\r\n  };\r\n};\r\n\r\nexport const set_db_profile = (profile) => {\r\n  return {\r\n    type: ACTION_TYPES.SET_DB_PROFILE,\r\n    payload: profile,\r\n  };\r\n};\r\n\r\nexport const remove_db_profile = () => {\r\n  return {\r\n    type: ACTION_TYPES.REMOVE_DB_PROFILE,\r\n  };\r\n};\r\n\r\nexport const set_db_posts = (posts) => {\r\n  return {\r\n    type: ACTION_TYPES.FETCH_DB_POSTS,\r\n    payload: posts,\r\n  };\r\n};\r\n\r\nexport const remove_db_posts = () => {\r\n  return {\r\n    type: ACTION_TYPES.REMOVE_DB_POSTS,\r\n  };\r\n};\r\n","// import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport { Auth0Provider } from \"@auth0/auth0-react\";\nimport { authConfig } from \"./utils/authConfig\";\nimport App from \"./App\";\nimport \"./style.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <Auth0Provider {...authConfig}>\n      <App />\n  </Auth0Provider>\n);\n"],"sourceRoot":""}