{"version":3,"sources":["utils/history.js","utils/authConfig.js","utils/context.js","store/actions/actionTypes.js","store/reducers/authReducer.js","components/NavBar.js","components/BtnCareerRenamer.js","components/BtnCareerSwitcher.js","components/BtnCareerAdder.js","components/Step1URL.js","components/Step2NameTitle.js","components/Step3Desc.js","components/Step4Notes.js","components/Step5Resume.js","components/Step6CL.js","components/Step7Tags.js","pages/HomePage.js","pages/SearchPage.js","pages/AppViewerPage.js","assets/loading.svg","components/LoadingSpinner.js","pages/ProfilePage.js","pages/AboutPage.js","App.js","store/actions/actions.js","index.js"],"names":["createBrowserHistory","authConfig","domain","clientId","redirectUri","window","location","origin","onRedirectCallback","appState","history","push","returnTo","pathname","Context","React","createContext","LOGIN_SUCCESS","LOGIN_FAILURE","SET_PROFILE","REMOVE_PROFILE","SET_DB_PROFILE","REMOVE_DB_PROFILE","initialState","isAuthenticated","dbProfile","authProfile","AuthReducer","state","action","type","ACTION_TYPES","payload","NavBar","auth0","useAuth0","navigateTo","useNavigate","className","id","to","style","padding","onClick","loginWithPopup","user","email","BtnCareerRenamer","careersList","setCareersList","currentCareerNum","context","useContext","useState","newName","setNewName","modalOn","setModalOn","toggleModal","validateRename","length","find","item","alert","newList","dbProfileState","currentUser","username","oldName","data","oldCareerName","newCareerName","axios","put","then","res","console","log","tempProfile","careers_list","dispatchSetDbProfile","catch","err","updateRenameCareer","isOpen","toggle","onSubmit","e","preventDefault","name","title","placeholder","onChange","target","value","color","BtnCareerSwitcher","setCurrentCareerNum","map","i","disabled","newNum","current_career_num","updateCurrentCareerNum","BtnCareerAdder","newCareer","setNewCareer","validateAddCareer","updateCareersList","autoFocus","Step1","setPostingURL","Step2","setCompanyName","setJobTitle","backgroundColor","minHeight","htmlFor","undoChange","this","quill","undo","redoChange","redo","Step3","quillRef","useRef","previewOpen","setPreviewOpen","previewContent","setPreviewContent","quillModules","useMemo","toolbar","container","handlers","preview","html","root","innerHTML","defaultValue","persist","ref","maxHeight","overflowY","theme","modules","formats","dangerouslySetInnerHTML","__html","Step4","Step5","setResumeFile","resumeDisplayFile","setResumeDisplayFile","multiple","onDrop","getRootProps","getInputProps","size","Step6","setCoverLetterFile","coverLetterDisplayFile","setCoverLetterDisplayFile","setTags","HomePage","postingURL","companyName","jobTitle","jobDescription","setJobDescription","jobNotes","setJobNotes","byteaResume","setByteaResume","byteaCoverLetter","setByteaCoverLetter","tags","newFile","getByteArray","arrayBuffer","bytea","Uint8Array","useEffect","document","querySelector","toString","resumeFile","coverLetterFile","split","careerName","applicationDate","Date","post","nodeList","getElementsByTagName","Array","prototype","slice","call","forEach","input","clearForm","SearchPage","appsList","setAppsList","selectedSearchOption","setSelectedSearchOption","toISOString","dateRangeStart","setDateRangeStart","undefined","fmtRangeStart","setFmtRangeStart","dateRangeEnd","setDateRangeEnd","fmtRangeEnd","setFmtRangeEnd","get","params","checked","readOnly","v","f","formattedValue","date","application_date","getFullYear","getMonth","getDate","company_name","job_title","AppViewer","LoadingSpinner","src","loading","alt","withAuthenticationRequired","logout","family_name","given_name","locale","nickname","sub","stateAuthReducer","onRedirecting","Search","toolTipOn1","setToolTipOn1","placement","autohide","ContextState","profile","dispatchLogin","dispatchSetAuthProfile","dispatchLogout","dispatchRemoveAuthProfile","useReducer","dispatchAuthReducer","ACTIONS","Provider","file","Promise","acc","reader","FileReader","onloadend","event","result","onerror","error","readAsArrayBuffer","basename","path","element","AboutPage","ProfilePage","ReactDOM","createRoot","getElementById","render"],"mappings":"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","file":"static/js/main.399d81bb.chunk.js","sourcesContent":["import { createBrowserHistory } from \"history\";\n\nexport default createBrowserHistory();\n","import history from \"./history\";\n\nconst appConfig = {\n  domain: \"dev-9npol9r6.us.auth0.com\",\n  clientId: \"4GfZ4cfLN9HiX42YH3oWPq8NHKTiCAIS\",\n};\n\nconst onRedirectCallback = (appState) => {\n  history.push(appState && appState.returnTo ? appState.returnTo : window.location.pathname);\n};\n\nexport const authConfig = {\n  domain: appConfig.domain,\n  clientId: appConfig.clientId,\n  redirectUri: window.location.origin,\n  onRedirectCallback,\n};\n","import React from \"react\";\n\nconst Context = React.createContext();\n\nexport default Context;\n","\r\nexport const SUCCESS = \"SUCCESS\"\r\n\r\nexport const FAILURE = \"FAILURE\"\r\n\r\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\"\r\n\r\nexport const LOGIN_FAILURE = \"LOGIN_FAILURE\"\r\n\r\nexport const SET_PROFILE = \"SET_PROFILE\"\r\n\r\nexport const REMOVE_PROFILE = \"REMOVE_PROFILE\"\r\n\r\nexport const USER_INPUT_CHANGE = \"USER_INPUT_CHANGE\"\r\n\r\nexport const USER_INPUT_SUBMIT = \"USER_INPUT_SUBMIT\"\r\n\r\nexport const SET_DB_PROFILE = \"SET_DB_PROFILE\"\r\n\r\nexport const REMOVE_DB_PROFILE = \"REMOVE_DB_PROFILE\"\r\n\r\nexport const FETCH_DB_POSTS = \"FETCH_DB_POSTS\"\r\n\r\nexport const REMOVE_DB_POSTS = \"REMOVE_DB_POSTS\"\r\n","import * as ACTION_TYPES from \"../actions/actionTypes\";\n\nexport const initialState = {\n  isAuthenticated: false,\n  dbProfile: null,\n  authProfile: null,\n};\n\nexport const AuthReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ACTION_TYPES.LOGIN_SUCCESS:\n      return {\n        ...state,\n        isAuthenticated: true,\n      };\n    case ACTION_TYPES.LOGIN_FAILURE:\n      return {\n        ...state,\n        isAuthenticated: false,\n      };\n    case ACTION_TYPES.SET_PROFILE:\n      return {\n        ...state,\n        authProfile: action.payload,\n      };\n    case ACTION_TYPES.REMOVE_PROFILE:\n      return {\n        ...state,\n        authProfile: null,\n      };\n    case ACTION_TYPES.SET_DB_PROFILE:\n      return {\n        ...state,\n        dbProfile: action.payload,\n      };\n    case ACTION_TYPES.REMOVE_DB_PROFILE:\n      return {\n        ...state,\n        dbProfile: null,\n      };\n    default:\n      return state;\n  }\n};\n","import { Link } from \"react-router-dom\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst NavBar = () => {\n  const auth0 = useAuth0();\n  const navigateTo = useNavigate();\n\n  return (\n    <div className=\"d-flex justify-content-center\">\n      <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n          <ul className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item active\">\n              <Link to=\"/home\" style={{ padding: \"5px\" }}>\n                Home\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/search\" style={{ padding: \"5px\" }}>\n                Search\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/about\" style={{ padding: \"5px\" }}>\n                About\n              </Link>\n            </li>\n          </ul>\n          <button\n            className=\"btn btn-outline-primary\"\n            onClick={() => {\n              auth0.isAuthenticated ? navigateTo(\"/profile\") : auth0.loginWithPopup();\n            }}\n          >\n            {auth0.isAuthenticated ? auth0.user.email : \"Log in\"}\n          </button>\n        </div>\n      </nav>\n    </div>\n  );\n};\n\nexport default NavBar;\n","import { useState, useContext } from \"react\";\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\nimport Context from \"../utils/context\";\nimport axios from \"axios\";\n\nexport default function BtnCareerRenamer({ careersList, setCareersList, currentCareerNum }) {\n  const context = useContext(Context);\n  const [newName, setNewName] = useState(careersList[currentCareerNum]);\n  const [modalOn, setModalOn] = useState(false);\n\n  function toggleModal() {\n    setModalOn(!modalOn);\n  }\n\n  function validateRename() {\n    if (newName.length === 0 || newName === careersList[currentCareerNum]) {\n      return;\n    }\n    if (\n      careersList.find((item) => {\n        return item === newName;\n      })\n    ) {\n      alert(`Error: \"${newName}\" already exists. Cannot create duplicate careers.`);\n    } else {\n      updateRenameCareer(careersList, currentCareerNum, newName);\n      toggleModal();\n    }\n  }\n\n  /* Update both \"users\" table's careersList value and \"apps\" table's career values*/\n  function updateRenameCareer(careersList, currentCareerNum, newName) {\n    let newList = [...careersList];\n    newList[currentCareerNum] = newName;\n    if (context.isAuthenticated && context.dbProfileState) {\n      let currentUser = context.dbProfileState.username;\n      const oldName = careersList[currentCareerNum];\n      const data = {\n        username: currentUser,\n        careersList: newList,\n        oldCareerName: oldName,\n        newCareerName: newName,\n      };\n      axios\n        .put(\"/api/put/renamecareer\", data) // db update\n        .then((res) => {\n          console.log(\"api/put/renamecareer res.data: \", res.data);\n          const tempProfile = { ...context.dbProfileState };\n          tempProfile.careers_list = data.careersList;\n          context.dispatchSetDbProfile(tempProfile); // reducer update\n          setCareersList(newList); // HomePage ui update\n        })\n        .catch((err) => {\n          console.log(\"api/put/careernum err\", err);\n        });\n    } else {\n      setCareersList(newList);\n    }\n\n    // let currentUser =\n    //   context.isAuthenticated && context.dbProfileState\n    //     ? context.dbProfileState.username\n    //     : \"demoUser\";\n  }\n\n  return (\n    <div>\n      <div className=\"dropdown\">\n        <button type=\"button\" className=\"btn btn-success m-1\" onClick={toggleModal}>\n          Rename Career\n        </button>\n        <Modal isOpen={modalOn} toggle={toggleModal}>\n          <ModalHeader toggle={toggleModal}>\n            Rename The Current Career: \"{careersList[currentCareerNum]}\"\n          </ModalHeader>\n          <ModalBody>\n            <form\n              onSubmit={(e) => {\n                e.preventDefault();\n                validateRename();\n              }}\n            >\n              <div>\n                Note: renaming this career will change the \"career\" attribute of all job\n                applications saved with the career name \"{careersList[currentCareerNum]}\" to the new\n                name which you're about to enter.\n              </div>\n              <input\n                name=\"renameCareer\"\n                id=\"renameCareer\"\n                type=\"text\"\n                className=\"form-control\"\n                title=\"Rename Career\"\n                placeholder=\"New name\"\n                onChange={(e) => {\n                  setNewName(e.target.value);\n                }}\n              />\n              <button type=\"button\" className=\"btn btn-success w-100\" onClick={validateRename}>\n                Rename\n              </button>\n            </form>\n          </ModalBody>\n          <ModalFooter>\n            <Button color=\"primary\" onClick={toggleModal}>\n              Close\n            </Button>\n          </ModalFooter>\n        </Modal>\n      </div>\n    </div>\n  );\n}\n","import { Link } from \"react-router-dom\";\nimport { useState, useContext } from \"react\";\nimport Context from \"../utils/context\";\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\nimport axios from \"axios\";\n\nexport default function BtnCareerSwitcher({ careersList, currentCareerNum, setCurrentCareerNum }) {\n  const context = useContext(Context);\n  const [modalOn, setModalOn] = useState(false);\n\n  function toggleModal() {\n    setModalOn(!modalOn);\n  }\n\n  function updateCurrentCareerNum(newNum) {\n    if (context.isAuthenticated && context.dbProfileState) {\n      let currentUser = context.dbProfileState.username;\n      const data = {\n        currentCareerNum: newNum,\n        username: currentUser,\n      };\n      axios\n        .put(\"/api/put/careernum\", data) // db update\n        .then((res) => {\n          const tempProfile = { ...context.dbProfileState };\n          tempProfile.current_career_num = data.currentCareerNum;\n          context.dispatchSetDbProfile(tempProfile); // reducer update\n          setCurrentCareerNum(newNum); // HomePage ui update\n        })\n        .catch((err) => {\n          console.log(\"api/put/careernum err\", err);\n        });\n    } else {\n      setCurrentCareerNum(newNum);\n    }\n\n    // let currentUser =\n    //   context.isAuthenticated && context.dbProfileState\n    //     ? context.dbProfileState.username\n    //     : \"demoUser\";\n  }\n\n  return (\n    <div>\n      <div className=\"dropdown\">\n        <button\n          type=\"button\"\n          className=\"btn btn-success m-1\"\n          onClick={() => {\n            toggleModal();\n          }}\n        >\n          Switch Career\n        </button>\n        <Modal isOpen={modalOn} toggle={toggleModal}>\n          <ModalHeader toggle={toggleModal}>Select career:</ModalHeader>\n          <ModalBody>\n            {careersList.map((name, i) => {\n              return (\n                <div key={i}>\n                  <button\n                    type=\"button\"\n                    className=\"btn btn-success w-100\"\n                    disabled={currentCareerNum === i ? true : false}\n                    onClick={() => {\n                      updateCurrentCareerNum(i);\n                      toggleModal();\n                    }}\n                  >\n                    {name}\n                  </button>\n                </div>\n              );\n            })}\n            <div className=\"text-center\">\n              <Link to=\"/about\">How to delete a career</Link>\n            </div>\n          </ModalBody>\n          <ModalFooter>\n            <Button color=\"primary\" onClick={toggleModal}>\n              Close\n            </Button>\n          </ModalFooter>\n        </Modal>\n      </div>\n    </div>\n  );\n}\n","import { useState, useContext } from \"react\";\nimport Context from \"../utils/context\";\nimport axios from \"axios\";\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\n\nexport default function BtnCareerAdder({ careersList, setCareersList }) {\n  const context = useContext(Context);\n  const [newCareer, setNewCareer] = useState(\"\");\n  const [modalOn, setModalOn] = useState(false);\n\n  function toggleModal() {\n    setModalOn(!modalOn);\n  }\n\n  function validateAddCareer() {\n    if (newCareer.length === 0) {\n      return;\n    }\n    if (\n      careersList.find((item) => {\n        return item === newCareer;\n      })\n    ) {\n      alert(`\"${newCareer}\" already exists. Cannot create duplicate careers.`);\n    } else {\n      let newList = [...careersList, newCareer];\n      updateCareersList(newList);\n      toggleModal();\n    }\n  }\n\n  function updateCareersList(newList) {\n    if (context.isAuthenticated && context.dbProfileState) {\n      let currentUser = context.dbProfileState.username;\n      const data = {\n        username: currentUser,\n        careersList: newList,\n      };\n      axios\n        .put(\"/api/put/careerslist\", data) // db update\n        .then((res) => {\n          console.log(\"api/put/careerslist res\", res.data);\n          const tempProfile = { ...context.dbProfileState };\n          tempProfile.careers_list = data.careersList;\n          context.dispatchSetDbProfile(tempProfile); // reducer update\n          setCareersList(newList); // HomePage ui update\n        })\n        .catch((err) => {\n          console.log(\"api/put/careernum err\", err);\n        });\n    } else {\n      setCareersList(newList);\n    }\n\n    // let currentUser =\n    //   context.isAuthenticated && context.dbProfileState\n    //     ? context.dbProfileState.username\n    //     : \"demoUser\";\n  }\n\n  return (\n    <div>\n      <div className=\"dropdown\">\n        <button\n          type=\"button\"\n          className=\"btn btn-success m-1\"\n          onClick={() => {\n            toggleModal();\n          }}\n        >\n          Add Career\n        </button>\n        <Modal isOpen={modalOn} toggle={toggleModal}>\n          <ModalHeader toggle={toggleModal}>New career name:</ModalHeader>\n          <ModalBody>\n            <form\n              autoFocus\n              onSubmit={(e) => {\n                e.preventDefault();\n                validateAddCareer();\n              }}\n            >\n              <input\n                name=\"newCareer\"\n                id=\"newCareer\"\n                type=\"text\"\n                title=\"New Career\"\n                placeholder=\"career\"\n                className=\"form-control\"\n                onChange={(e) => {\n                  setNewCareer(e.target.value);\n                }}\n              />\n              <button type=\"submit\" className=\"btn btn-success w-100\">\n                Add\n              </button>\n              <div className=\"text-center\">Existing Careers:</div>\n              {careersList.map((name, i) => {\n                return (\n                  <div key={i}>\n                    <button type=\"button\" className=\"btn btn-outline-success w-100\" disabled>\n                      {name}\n                    </button>\n                  </div>\n                );\n              })}\n            </form>\n          </ModalBody>\n          <ModalFooter>\n            <Button color=\"primary\" onClick={toggleModal}>\n              Close\n            </Button>\n          </ModalFooter>\n        </Modal>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\n\nexport default function Step1({ setPostingURL }) {\n  return (\n    <div className=\"step\">\n      <h3 id=\"step1Heading\">Posting URL</h3>\n      <input\n        id=\"jobPostingURL\"\n        name=\"jobPostingURL\"\n        className=\"form-control\"\n        type=\"url\"\n        placeholder=\"URL\"\n        title=\"Job Posting URL\"\n        onChange={(e) => {\n          setPostingURL(e.target.value);\n        }}\n      />\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\n\nexport default function Step2({ setCompanyName, setJobTitle }) {\n  const [modalOn, setModalOn] = useState(false);\n\n  function toggleModal() {\n    setModalOn(!modalOn);\n  }\n\n  return (\n    <div className=\"step w-md-75\" style={{ backgroundColor: \"white\", minHeight: \"100px\" }}>\n      <div className=\"d-flex justify-content-space-between justify-content-md-center gap-1 gap-md-5 required\">\n        <div className=\"d-flex flex-column\">\n          <label htmlFor=\"jobTitle\">Company: </label>\n          <input\n            id=\"companyName\"\n            className=\"form-control w-100\"\n            name=\"companyName\"\n            type=\"text\"\n            title=\"Company Name\"\n            placeholder=\"Company\"\n            // onClick={toggleModal}\n            onChange={(e) => {\n              setCompanyName(e.target.value);\n            }}\n          />\n        </div>\n        <div className=\"d-flex flex-column\">\n          <label htmlFor=\"jobTitle\">Job Title: </label>\n          <input\n            id=\"jobTitle\"\n            className=\"form-control w-100\"\n            name=\"jobTitle\"\n            type=\"text\"\n            title=\"Job Title\"\n            placeholder=\"Job Title\"\n            // onClick={toggleModal}\n            onChange={(e) => {\n              setJobTitle(e.target.value);\n            }}\n          />\n        </div>\n      </div>\n      <Modal isOpen={modalOn} toggle={toggleModal}>\n        <ModalHeader toggle={toggleModal}>You are currently not logged in.</ModalHeader>\n        <ModalBody>\n          If you proceed to save this application without logging in, it will be saved to the public\n          demonstration database. It will not be saved to your personal account. Please log in to\n          save your application privately.\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"primary\" onClick={toggleModal}>\n            Ok\n          </Button>\n        </ModalFooter>\n      </Modal>\n    </div>\n  );\n}\n","import React, { useState, useMemo } from \"react\";\nimport ReactQuill from \"react-quill\";\nimport \"react-quill/dist/quill.snow.css\";\n// https://codesandbox.io/s/react-quill-multiple-editor-gttvm?file=/src/App.js:351-359\n\nfunction undoChange() {\n  this.quill.history.undo();\n}\nfunction redoChange() {\n  this.quill.history.redo();\n}\n\nexport default function Step3({ id, value, onChange }) {\n  const quillRef = React.useRef();\n  const [previewOpen, setPreviewOpen] = useState(false);\n  const [previewContent, setPreviewContent] = useState(\"\");\n\n  const CustomToolbar = () => (\n    <div id={`toolbar-${id}`}>\n      <span className=\"ql-formats\">\n        <button className=\"ql-bold\" />\n        <button className=\"ql-italic\" />\n        <button className=\"ql-underline\" />\n        {/* <button className=\"ql-strike\" /> */}\n      </span>\n      <span className=\"ql-formats\">\n        <select className=\"ql-align\" />\n        {/* <select className=\"ql-color\" /> */}\n        {/* <select className=\"ql-background\" /> */}\n      </span>\n      <span className=\"ql-formats\">\n        <button className=\"ql-list\" value=\"ordered\" />\n        <button className=\"ql-list\" value=\"bullet\" />\n        <select className=\"ql-size\" defaultValue={\"\"} onChange={(e) => e.persist()}>\n          {[\"false\", \"small\", \"large\", \"huge\"].map((value, i) => (\n            <option key={i} value={value} />\n          ))}\n        </select>\n\n        {/* <button className=\"ql-indent\" value=\"-1\" /> */}\n        {/* <button className=\"ql-indent\" value=\"+1\" /> */}\n      </span>\n      {/* <span className=\"ql-formats\">\n        <button className=\"ql-undo\">\n          <CustomUndoIcon />\n        </button>\n        <button className=\"ql-redo\">\n          <CustomRedoIcon />\n        </button>\n      </span> */}\n      {/* <span className=\"ql-formats\">\n        <button className=\"ql-code-block\" />\n        <button className=\"ql-clean\" />\n      </span> */}\n      <span className=\"ql-formats\">\n        {/* <select className=\"ql-header\" defaultValue={\"\"} onChange={(e) => e.persist()}>\n          {[\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"false\"].map((value) => (\n            <option key={value} value={value} />\n          ))}\n        </select> */}\n        {/* <select className=\"ql-font\" defaultValue=\"arial\">\n          <option value=\"arial\">Arial</option>\n          <option value=\"comic-sans\">Comic Sans</option>\n          <option value=\"courier-new\">Courier New</option>\n          <option value=\"georgia\">Georgia</option>\n          <option value=\"helvetica\">Helvetica</option>\n          <option value=\"lucida\">Lucida</option>\n        </select> */}\n      </span>\n      <span className=\"ql-formats\">\n        <button className=\"ql-link\" />\n        {/* <button className=\"ql-image\" /> */}\n        {/* <button className=\"ql-video\" /> */}\n      </span>\n    </div>\n  );\n\n  const quillModules = useMemo(() => {\n    return {\n      toolbar: {\n        container: `#toolbar-${id}`,\n        handlers: {\n          preview: function (value) {\n            const html = this.quill.root.innerHTML;\n            setPreviewContent(html);\n            setPreviewOpen(!previewOpen);\n          },\n          undo: undoChange,\n          redo: redoChange,\n        },\n      },\n    };\n  }, [id, previewOpen]);\n\n  const quillFormats = [\n    \"bold\",\n    \"italic\",\n    \"underline\",\n    \"strike\",\n    \"script\",\n    \"size\",\n    \"header\",\n    \"list\",\n    \"indent\",\n    \"link\",\n    \"color\",\n    \"background\",\n    \"align\",\n    \"font\",\n    \"blockquote\",\n    \"bullet\",\n    \"image\",\n    \"code-block\",\n  ];\n\n  return (\n    <div className=\"step\">\n      <h3 id=\"step1Heading\">Posting URL</h3>\n      <input\n        id=\"jobPostingURL\"\n        name=\"jobPostingURL\"\n        className=\"form-control\"\n        type=\"url\"\n        placeholder=\"URL\"\n        title=\"Job Posting URL\"\n        onChange={(e) => {\n          // setPostingURL(e.target.value);\n        }}\n      />\n\n      <h3>Job Description</h3>\n      <div className=\"text-editor\">\n        {CustomToolbar(id)}\n        <ReactQuill\n          ref={quillRef}\n          style={{\n            backgroundColor: \"white\",\n            minHeight: \"255px\",\n            maxHeight: \"900px\",\n            overflowY: \"auto\",\n          }}\n          className=\"step3Desc\"\n          theme=\"snow\"\n          // defaultValue={value}\n          value={value}\n          placeholder=\"Copy and paste job description here\"\n          onChange={onChange}\n          modules={quillModules}\n          formats={quillFormats}\n        />\n        {previewOpen ? <div dangerouslySetInnerHTML={{ __html: previewContent }} /> : \"\"}\n      </div>\n    </div>\n  );\n}\n","import React, { useState, useMemo } from \"react\";\nimport ReactQuill from \"react-quill\";\nimport \"react-quill/dist/quill.snow.css\";\n\nfunction undoChange() {\n  this.quill.history.undo();\n}\nfunction redoChange() {\n  this.quill.history.redo();\n}\n\nexport default function Step4({ id, value, onChange }) {\n  const quillRef = React.useRef();\n  const [previewOpen, setPreviewOpen] = useState(false);\n  const [previewContent, setPreviewContent] = useState(\"\");\n\n  const CustomToolbar = () => (\n    <div id={`toolbar-${id}`}>\n      <span className=\"ql-formats\">\n        <button className=\"ql-bold\" />\n        <button className=\"ql-italic\" />\n        <button className=\"ql-underline\" />\n        {/* <button className=\"ql-strike\" /> */}\n      </span>\n      <span className=\"ql-formats\">\n        <select className=\"ql-align\" />\n        {/* <select className=\"ql-color\" /> */}\n        {/* <select className=\"ql-background\" /> */}\n      </span>\n      <span className=\"ql-formats\">\n        <button className=\"ql-list\" value=\"ordered\" />\n        <button className=\"ql-list\" value=\"bullet\" />\n        <select className=\"ql-size\" defaultValue={\"\"} onChange={(e) => e.persist()}>\n          {[\"false\", \"small\", \"large\", \"huge\"].map((value, i) => (\n            <option key={value} value={value} />\n          ))}\n        </select>\n\n        {/* <button className=\"ql-indent\" value=\"-1\" /> */}\n        {/* <button className=\"ql-indent\" value=\"+1\" /> */}\n      </span>\n      {/* <span className=\"ql-formats\">\n        <button className=\"ql-undo\">\n          <CustomUndoIcon />\n        </button>\n        <button className=\"ql-redo\">\n          <CustomRedoIcon />\n        </button>\n      </span> */}\n      {/* <span className=\"ql-formats\">\n        <button className=\"ql-code-block\" />\n        <button className=\"ql-clean\" />\n      </span> */}\n      <span className=\"ql-formats\">\n        {/* <select className=\"ql-header\" defaultValue={\"\"} onChange={(e) => e.persist()}>\n          {[\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"false\"].map((value) => (\n            <option key={value} value={value} />\n          ))}\n        </select> */}\n        {/* <select className=\"ql-font\" defaultValue=\"arial\">\n          <option value=\"arial\">Arial</option>\n          <option value=\"comic-sans\">Comic Sans</option>\n          <option value=\"courier-new\">Courier New</option>\n          <option value=\"georgia\">Georgia</option>\n          <option value=\"helvetica\">Helvetica</option>\n          <option value=\"lucida\">Lucida</option>\n        </select> */}\n      </span>\n      <span className=\"ql-formats\">\n        <button className=\"ql-link\" />\n        {/* <button className=\"ql-image\" /> */}\n        {/* <button className=\"ql-video\" /> */}\n      </span>\n    </div>\n  );\n\n  const quillModules = useMemo(() => {\n    return {\n      toolbar: {\n        container: `#toolbar-${id}`,\n        handlers: {\n          preview: function (value) {\n            const html = this.quill.root.innerHTML;\n            setPreviewContent(html);\n            setPreviewOpen(!previewOpen);\n          },\n          undo: undoChange,\n          redo: redoChange,\n        },\n      },\n    };\n  }, [id, previewOpen]);\n\n  const quillFormats = [\n    \"bold\",\n    \"italic\",\n    \"underline\",\n    \"strike\",\n    \"script\",\n    \"size\",\n    \"header\",\n    \"list\",\n    \"indent\",\n    \"link\",\n    \"color\",\n    \"background\",\n    \"align\",\n    \"font\",\n    \"blockquote\",\n    \"bullet\",\n    \"image\",\n    \"code-block\",\n  ];\n\n  return (\n    <div className=\"step\">\n      <h3 id=\"step4Heading\">Application Notes</h3>\n      <div className=\"text-editor\">\n        {CustomToolbar(id)}\n        <ReactQuill\n          ref={quillRef}\n          style={{\n            backgroundColor: \"white\",\n            minHeight: \"150px\",\n            maxHeight: \"770px\",\n            overflowY: \"auto\",\n          }}\n          theme=\"snow\"\n          // defaultValue={value}\n          value={value}\n          placeholder=\"Enter your notes in here\"\n          onChange={onChange}\n          modules={quillModules}\n          formats={quillFormats}\n        />\n        {previewOpen ? <div dangerouslySetInnerHTML={{ __html: previewContent }} /> : \"\"}\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport Dropzone from \"react-dropzone\";\n// https://react-dropzone.js.org/#section-examples\n\nexport default function Step5({ setResumeFile, resumeDisplayFile, setResumeDisplayFile }) {\n  return (\n    <div className=\"step\">\n      <h3>Resume</h3>\n      <Dropzone multiple={false} onDrop={setResumeFile}>\n        {({ getRootProps, getInputProps }) => (\n          <section>\n            <div {...getRootProps({ className: \"dropzone\" })}>\n              <input {...getInputProps()} />\n\n              {resumeDisplayFile.name ? (\n                <div>\n                  <span className=\"text-primary\">\n                    <strong>{resumeDisplayFile.name}</strong> - {resumeDisplayFile.size} bytes\n                    &nbsp;\n                    <button\n                      className=\"btn btn-outline-success\"\n                      onClick={() => {\n                        setResumeDisplayFile({});\n                      }}\n                    >\n                      x\n                    </button>\n                  </span>\n                </div>\n              ) : (\n                <h5>Drag & drop, or click to select.</h5>\n              )}\n            </div>\n            {/*  */}\n          </section>\n        )}\n      </Dropzone>\n    </div>\n  );\n}\n","import React from \"react\";\nimport Dropzone from \"react-dropzone\";\n\nexport default function Step6({\n  setCoverLetterFile,\n  coverLetterDisplayFile,\n  setCoverLetterDisplayFile,\n}) {\n  return (\n    <div className=\"step\">\n      <h3>Cover Letter</h3>\n      <Dropzone multiple={false} onDrop={setCoverLetterFile}>\n        {({ getRootProps, getInputProps }) => (\n          <section>\n            <div {...getRootProps({ className: \"dropzone\" })}>\n              <input {...getInputProps()} />\n              {coverLetterDisplayFile.name ? (\n                <div>\n                  <span className=\"text-primary\">\n                    <strong>{coverLetterDisplayFile.name}</strong> - {coverLetterDisplayFile.size}{\" \"}\n                    bytes &nbsp;\n                    <button\n                      className=\"btn btn-outline-success\"\n                      onClick={() => {\n                        setCoverLetterDisplayFile({});\n                      }}\n                    >\n                      x\n                    </button>\n                  </span>\n                </div>\n              ) : (\n                <h5>Drag & drop, or click to select.</h5>\n              )}\n            </div>\n          </section>\n        )}\n      </Dropzone>\n    </div>\n  );\n}\n","export default function Step6({ setTags }) {\n  return (\n    <div className=\"step\">\n      <h3>Comma-Separated Tags</h3>\n      <input\n        id=\"jobTags\"\n        name=\"jobTags\"\n        className=\"form-control\"\n        type=\"string\"\n        title=\"Job tags\"\n        placeholder=\"i.e. indeed, remote, react\"\n        onChange={(e) => {\n          setTags(e.target.value);\n        }}\n      />\n    </div>\n  );\n}\n","import React, { useContext, useEffect, useState } from \"react\";\nimport Context from \"../utils/context\";\nimport axios from \"axios\";\nimport BtnCareerRenamer from \"../components/BtnCareerRenamer\";\nimport BtnCareerSwitcher from \"../components/BtnCareerSwitcher\";\nimport BtnCareerAdder from \"../components/BtnCareerAdder\";\nimport Step1URL from \"../components/Step1URL\";\nimport Step2NameTitle from \"../components/Step2NameTitle\";\nimport Step3Desc from \"../components/Step3Desc\";\nimport Step4Notes from \"../components/Step4Notes\";\nimport Step5Resume from \"../components/Step5Resume\";\nimport Step6CL from \"../components/Step6CL\";\nimport Step7Tags from \"../components/Step7Tags\";\n\nexport default function HomePage() {\n  const context = useContext(Context);\n  const [currentCareerNum, setCurrentCareerNum] = useState(0);\n  const [careersList, setCareersList] = useState([\"C1\", \"C2\"]);\n  const [postingURL, setPostingURL] = useState(\"\");\n  const [companyName, setCompanyName] = useState(\"\");\n  const [jobTitle, setJobTitle] = useState(\"\");\n  const [jobDescription, setJobDescription] = useState(\"\");\n  const [jobNotes, setJobNotes] = useState(\"\");\n  const [byteaResume, setByteaResume] = useState();\n  const [byteaCoverLetter, setByteaCoverLetter] = useState();\n  const [resumeDisplayFile, setResumeDisplayFile] = useState({});\n  const [coverLetterDisplayFile, setCoverLetterDisplayFile] = useState({});\n  const [tags, setTags] = useState(\"\");\n\n  useEffect(() => {\n    let dbProfile = context.dbProfileState;\n    if (dbProfile) {\n      setCurrentCareerNum(dbProfile.current_career_num);\n      setCareersList(dbProfile.careers_list);\n    }\n  }, [context.dbProfileState]);\n\n  async function setResumeFile(newFile) {\n    const arrayBuffer = await context.getByteArray(newFile[0]);\n    console.log(arrayBuffer);\n    const bytea = new Uint8Array(arrayBuffer);\n    console.log(bytea);\n    setByteaResume(bytea);\n    setResumeDisplayFile(newFile[0]);\n  }\n\n  async function setCoverLetterFile(newFile) {\n    const arrayBuffer = await context.getByteArray(newFile[0]);\n    const bytea = new Uint8Array(arrayBuffer);\n    setByteaCoverLetter(bytea);\n    setCoverLetterDisplayFile(newFile[0]);\n  }\n\n  function handleSaveApp() {\n    if (companyName.length === 0 || jobTitle.length === 0) {\n      document.querySelector(\".required\").style.color = \"red\";\n      alert(\"Save unsuccessful. Required data is missing.\");\n      return;\n    }\n    const data = {\n      username: context.isAuthenticated ? context.user.email : \"demoUser\",\n      postingURL: postingURL,\n      companyName: companyName,\n      jobDescription: jobDescription.toString(\"html\"),\n      jobTitle: jobTitle,\n      jobNotes: jobNotes.toString(\"html\"),\n      resumeFile: byteaResume,\n      coverLetterFile: byteaCoverLetter,\n      tags: tags.split(\",\"),\n      careerName: careersList[currentCareerNum],\n      applicationDate: new Date().toString(),\n    };\n    // console.log(data);\n    axios\n      .post(\"/api/post/postapp\", data)\n      .then((res) => {\n        console.log(\"/api/post/postapp\", res);\n        if (context.isAuthenticated) {\n          console.log(`Saved to user ${context.user.email}'s database.`);\n        } else {\n          console.log(`Saved to public demonstration database.`);\n        }\n        clearForm();\n      })\n      .catch((err) => {\n        console.log(err);\n        alert(\"Not saved. Error: Website under development\");\n      });\n  }\n\n  function clearForm() {\n    setPostingURL(\"\");\n    setJobDescription(\"\");\n    setCompanyName(\"\");\n    setJobTitle(\"\");\n    setJobNotes(\"\");\n    setByteaResume([]);\n    setByteaCoverLetter([]);\n    let nodeList = document.getElementsByTagName(\"input\");\n    let nodeListConvertedToArray = Array.prototype.slice.call(nodeList);\n    nodeListConvertedToArray.forEach((input) => {\n      input.value = \"\";\n    });\n    document.querySelector(\"#step1Heading\").style.color = \"initial\";\n    document.querySelector(\"#step3Heading\").style.color = \"initial\";\n  }\n\n  return (\n    <div className=\"centeredPage\">\n      <h1>Home</h1>\n      <h3>\n        Current Career:&nbsp;\n        <span className=\"text-success\">{careersList[currentCareerNum]}</span>\n      </h3>\n      <div className=\"d-flex\">\n        <BtnCareerSwitcher\n          careersList={careersList}\n          currentCareerNum={currentCareerNum}\n          setCurrentCareerNum={setCurrentCareerNum}\n        />\n        <BtnCareerAdder\n          careersList={careersList}\n          setCareersList={setCareersList}\n          setCurrentCareerNum={setCurrentCareerNum}\n        />\n        <BtnCareerRenamer\n          careersList={careersList}\n          setCareersList={setCareersList}\n          currentCareerNum={currentCareerNum}\n        />\n      </div>\n      <Step1URL setPostingURL={setPostingURL} />\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col w75\">\n            <Step3Desc\n              id=\"step3editor\"\n              name=\"step3editor\"\n              value={jobDescription}\n              onChange={setJobDescription}\n            />\n          </div>\n          <div className=\"col w75\">\n            <Step2NameTitle setCompanyName={setCompanyName} setJobTitle={setJobTitle} />\n            <Step4Notes id=\"step4editor\" value={jobNotes} onChange={setJobNotes} />\n          </div>\n        </div>\n      </div>\n      <Step5Resume\n        setResumeFile={setResumeFile}\n        resumeDisplayFile={resumeDisplayFile}\n        setResumeDisplayFile={setResumeDisplayFile}\n      />\n      <Step6CL\n        setCoverLetterFile={setCoverLetterFile}\n        coverLetterDisplayFile={coverLetterDisplayFile}\n        setCoverLetterDisplayFile={setCoverLetterDisplayFile}\n      />\n      <Step7Tags setTags={setTags} />\n      <div className=\"step w-25\">\n        <button className=\"btn btn-success p-2\" onClick={handleSaveApp}>\n          Save\n        </button>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport Context from \"../utils/context\";\nimport { useState, useEffect, useContext } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport { FormGroup, Label, FormText } from \"reactstrap\";\nimport { DatePicker } from \"reactstrap-date-picker\";\n\nexport default function SearchPage() {\n  const context = useContext(Context);\n  const [appsList, setAppsList] = useState([]);\n  const [selectedSearchOption, setSelectedSearchOption] = useState(\"option1\");\n\n  const [dateRangeStart, setDateRangeStart] = useState(new Date().toISOString());\n  const [fmtRangeStart, setFmtRangeStart] = useState(undefined);\n\n  const [dateRangeEnd, setDateRangeEnd] = useState(new Date().toISOString());\n  const [fmtRangeEnd, setFmtRangeEnd] = useState(undefined);\n\n  function handleSetRangeStart(value, formattedValue) {\n    setDateRangeStart(value);\n    setFmtRangeStart(formattedValue);\n  }\n\n  function handleSetRangeEnd(value, formattedValue) {\n    setDateRangeEnd(value);\n    setFmtRangeEnd(formattedValue);\n  }\n\n  useEffect(() => {\n    console.log(selectedSearchOption);\n  }, [selectedSearchOption]);\n\n  useEffect(() => {\n    console.log(`Formatted start date is ${fmtRangeStart}. Formatted end date is ${fmtRangeEnd}`);\n  }, [fmtRangeStart, fmtRangeEnd]);\n\n  useEffect(() => {\n    // when this component mounts, if user is logged in, retrieve user's applications list from db and store it inside appsList\n    if (context.isAuthenticated && context.dbProfileState) {\n      let username = context.dbProfileState.username;\n      axios\n        .get(\"/api/get/apps\", { params: { email: username } })\n        .then((res) => {\n          // console.log(res.data);\n          setAppsList(res.data);\n        })\n        .catch((err) => console.log(err));\n    }\n  }, [context]);\n\n  return (\n    <div className=\"centeredPage\">\n      <h1>Search</h1>\n      <form className=\"form-inline d-flex my-2 my-lg-0\">\n        <input\n          className=\"form-control mr-sm-2\"\n          type=\"search\"\n          placeholder=\"Search\"\n          aria-label=\"Search\"\n        />\n        <button className=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">\n          Search\n        </button>\n      </form>\n\n      <strong>Criteria:</strong>\n\n      <form>\n        <div className=\"form-check\">\n          <label>\n            <input\n              type=\"radio\"\n              name=\"react-tips\"\n              value=\"option1\"\n              checked={selectedSearchOption === \"option1\"}\n              onClick={() => {\n                setSelectedSearchOption(\"option1\");\n              }}\n              className=\"form-check-input\"\n              readOnly\n            />\n            Company\n          </label>\n        </div>\n\n        <div className=\"form-check\">\n          <label>\n            <input\n              type=\"radio\"\n              name=\"react-tips\"\n              value=\"option2\"\n              checked={selectedSearchOption === \"option2\"}\n              onClick={() => {\n                setSelectedSearchOption(\"option2\");\n              }}\n              className=\"form-check-input\"\n              readOnly\n            />\n            Job Title\n          </label>\n        </div>\n      </form>\n\n      <strong>Select date range</strong>\n      <FormGroup>\n        <Label>Range Start</Label>\n        <DatePicker\n          id=\"example-datepicker\"\n          value={dateRangeStart}\n          onChange={(v, f) => handleSetRangeStart(v, f)}\n        />\n        <FormText>Help</FormText>\n      </FormGroup>\n\n      <FormGroup>\n        <Label>Range End</Label>\n        <DatePicker\n          id=\"example-datepicker\"\n          value={dateRangeEnd}\n          onChange={(v, f) => handleSetRangeEnd(v, f)}\n        />\n        <FormText>Help</FormText>\n      </FormGroup>\n\n      <table className=\"table table-bordered text-center w-50\">\n        <thead>\n          <tr>\n            <th>Date</th>\n            <th>Company</th>\n            <th>Job Title</th>\n            <th>Application</th>\n          </tr>\n        </thead>\n        <tbody>\n          {appsList.length > 0 &&\n            appsList.map((item, i) => {\n              let date = new Date(item.application_date);\n              return (\n                <tr key={i}>\n                  <td>{`${date.getFullYear()}-${date.getMonth() + 1}-${date.getDate()}`}</td>\n                  <td>{item.company_name}</td>\n                  <td>{item.job_title}</td>\n                  <td>\n                    <Link to=\"/appviewer\">View application</Link>\n                  </td>\n                </tr>\n              );\n            })}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n","export default function AppViewer() {\n  return (\n    <div className=\"centeredPage\">\n      <h1>App Viewer</h1>\n      <p>View and edit a selected application</p>\n    </div>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/loading.330b7d99.svg\";","import React from \"react\";\nimport loading from \"../assets/loading.svg\";\n\nconst LoadingSpinner = () => (\n  <div className=\"page\">\n    <h3>Loading</h3>\n    <img src={loading} alt=\"Loading\" />\n  </div>\n);\n\nexport default LoadingSpinner;\n","import React, { useContext } from \"react\";\nimport { useAuth0, withAuthenticationRequired } from \"@auth0/auth0-react\";\nimport LoadingSpinner from \"../components/LoadingSpinner\";\nimport Context from \"../utils/context\";\n\nconst Profile = () => {\n  const { user, logout } = useAuth0();\n  const context = useContext(Context);\n\n  return (\n    <div className=\"centeredPage\">\n      <h1>Profile</h1>\n      <button className=\"btn btn-primary\" onClick={() => logout()}>\n        Log out\n      </button>\n      {user.email && <p>Email: {user.email}</p>}\n      {user.family_name && <p>Family name: {user.family_name}</p>}\n      {user.given_name && <p>Given name: {user.given_name}</p>}\n      {user.name && <p>Name: {user.name}</p>}\n      {user.locale && <p>Locale: {user.locale}</p>}\n      {user.nickname && <p>Nickname: {user.nickname}</p>}\n      {user.sub && <p>User ID: {user.sub}</p>}\n      <button\n        className=\"btn btn-primary\"\n        onClick={() => {\n          console.log(context.stateAuthReducer);\n          console.log(user);\n        }}\n        style={{ padding: \"5px\" }}\n      >\n        Log the user profile(stateAuthReducer) to the console\n      </button>\n    </div>\n  );\n};\n\nexport default withAuthenticationRequired(Profile, {\n  onRedirecting: () => <LoadingSpinner />,\n});\n","import React, { useState } from \"react\";\nimport { Tooltip } from \"reactstrap\";\nimport { BsInfoCircle } from \"react-icons/bs\";\n\nconst Search = () => {\n  const [toolTipOn1, setToolTipOn1] = useState(false);\n\n  return (\n    <div className=\"centeredPage\">\n      <h1>About</h1>\n      <p>About page</p>\n      <h3>\n        <span>\n          <BsInfoCircle id=\"tipBtn\" />\n          <Tooltip\n            placement=\"top\"\n            autohide={false}\n            isOpen={toolTipOn1}\n            target=\"tipBtn\"\n            toggle={() => {\n              setToolTipOn1(!toolTipOn1);\n            }}\n          >\n            This webpage is inteneded to be used while you are applying for a job on a site like\n            Indeed or a company HR site. Fill out this form as you apply, then click the save button\n            after you've submitted your application.\n          </Tooltip>\n        </span>\n      </h3>\n    </div>\n  );\n};\nexport default Search;\n","import React, { useReducer, useEffect } from \"react\";\nimport Context from \"./utils/context\";\nimport * as AuthReducer from \"./store/reducers/authReducer\";\nimport * as ACTIONS from \"./store/actions/actions\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport axios from \"axios\";\nimport { HashRouter, Route, Routes } from \"react-router-dom\";\nimport NavBar from \"./components/NavBar\";\nimport HomePage from \"./pages/HomePage\";\nimport SearchPage from \"./pages/SearchPage\";\nimport AppViewerPage from \"./pages/AppViewerPage\";\nimport ProfilePage from \"./pages/ProfilePage\";\nimport AboutPage from \"./pages/AboutPage\";\n\nexport default function ContextState() {\n  const auth0 = useAuth0();\n\n  useEffect(() => {\n    if (auth0.isAuthenticated) {\n      let profile = auth0.user;\n      dispatchLogin();\n      dispatchSetAuthProfile(profile);\n      axios\n        .post(\"/api/post/userprofiletodb\", profile)\n        .then(\n          axios\n            .get(\"/api/get/userprofilefromdb\", { params: { email: profile.email } })\n            .then((res) => dispatchSetDbProfile(res.data[0]))\n            .catch((err) => console.log(err))\n        )\n        .catch((err) => console.log(err));\n    } else {\n      dispatchLogout();\n      dispatchRemoveAuthProfile();\n    }\n  }, [auth0.isAuthenticated, auth0.user]);\n\n  /*Auth Reducer: although the useAuth0 library object provides global auth state access from the \n  cloud, storing our own version in a reducer at login allows for local retrieval of auth state values \n  in between login/logout*/\n  const [stateAuthReducer, dispatchAuthReducer] = useReducer(\n    AuthReducer.AuthReducer,\n    AuthReducer.initialState\n  );\n\n  function dispatchLogin() {\n    dispatchAuthReducer(ACTIONS.login_success());\n  }\n\n  function dispatchLogout() {\n    dispatchAuthReducer(ACTIONS.login_failure());\n  }\n\n  function dispatchSetAuthProfile(profile) {\n    dispatchAuthReducer(ACTIONS.set_profile(profile));\n  }\n\n  function dispatchSetDbProfile(profile) {\n    dispatchAuthReducer(ACTIONS.set_db_profile(profile));\n  }\n\n  function dispatchRemoveAuthProfile() {\n    dispatchAuthReducer(ACTIONS.remove_profile());\n  }\n\n  function getByteArray(file) {\n    return new Promise((acc, err) => {\n      const reader = new FileReader();\n      reader.onloadend = (event) => {\n        acc(event.target.result);\n      };\n      reader.onerror = (error) => {\n        err(error);\n      };\n      reader.readAsArrayBuffer(file);\n    });\n  }\n\n  return (\n    <Context.Provider\n      value={{\n        auth0: auth0,\n        user: auth0.user,\n        dispatchLogin: () => dispatchLogin(),\n        dispatchLogout: () => dispatchLogout(),\n        dispatchSetAuthProfile: (profile) => dispatchSetAuthProfile(profile),\n        dispatchRemoveAuthProfile: () => dispatchRemoveAuthProfile(),\n        dispatchSetDbProfile: (profile) => dispatchSetDbProfile(profile),\n        stateAuthReducer: stateAuthReducer,\n        isAuthenticated: stateAuthReducer.isAuthenticated,\n        dbProfileState: stateAuthReducer.dbProfile,\n        authProfile: stateAuthReducer.authProfile,\n        getByteArray: (file) => getByteArray(file),\n      }}\n    >\n      <HashRouter basename=\"/\">\n        <NavBar />\n        <Routes>\n          <Route path=\"/\" element={<HomePage />} />\n          <Route path=\"/about\" element={<AboutPage />} />\n          <Route path=\"/home\" element={<HomePage />} />\n          <Route path=\"/search\" element={<SearchPage />} />\n          <Route path=\"/appviewer\" element={<AppViewerPage />} />\n          <Route path=\"/profile\" element={<ProfilePage />} />\n        </Routes>\n      </HashRouter>\n    </Context.Provider>\n  );\n}\n","import * as ACTION_TYPES from \"./actionTypes\";\r\n\r\nexport const SUCCESS = {\r\n  type: ACTION_TYPES.SUCCESS,\r\n};\r\n\r\nexport const FAILURE = {\r\n  type: ACTION_TYPES.FAILURE,\r\n};\r\n\r\nexport const success = () => {\r\n  return {\r\n    type: ACTION_TYPES.SUCCESS,\r\n  };\r\n};\r\n\r\nexport const failure = () => {\r\n  return {\r\n    type: ACTION_TYPES.FAILURE,\r\n  };\r\n};\r\n\r\nexport const set_profile = (profile) => {\r\n  return {\r\n    type: ACTION_TYPES.SET_PROFILE,\r\n    payload: profile,\r\n  };\r\n};\r\n\r\nexport const remove_profile = () => {\r\n  return {\r\n    type: ACTION_TYPES.REMOVE_PROFILE,\r\n  };\r\n};\r\n\r\nexport const login_success = () => {\r\n  return {\r\n    type: ACTION_TYPES.LOGIN_SUCCESS,\r\n  };\r\n};\r\n\r\nexport const login_failure = () => {\r\n  return {\r\n    type: ACTION_TYPES.LOGIN_FAILURE,\r\n  };\r\n};\r\n\r\nexport const user_input_change = (text) => {\r\n  return {\r\n    type: ACTION_TYPES.USER_INPUT_CHANGE,\r\n    payload: text,\r\n  };\r\n};\r\n\r\nexport const user_input_submit = (text) => {\r\n  return {\r\n    type: ACTION_TYPES.USER_INPUT_SUBMIT,\r\n    payload: text,\r\n  };\r\n};\r\n\r\nexport const set_db_profile = (profile) => {\r\n  return {\r\n    type: ACTION_TYPES.SET_DB_PROFILE,\r\n    payload: profile,\r\n  };\r\n};\r\n\r\nexport const remove_db_profile = () => {\r\n  return {\r\n    type: ACTION_TYPES.REMOVE_DB_PROFILE,\r\n  };\r\n};\r\n\r\nexport const set_db_posts = (posts) => {\r\n  return {\r\n    type: ACTION_TYPES.FETCH_DB_POSTS,\r\n    payload: posts,\r\n  };\r\n};\r\n\r\nexport const remove_db_posts = () => {\r\n  return {\r\n    type: ACTION_TYPES.REMOVE_DB_POSTS,\r\n  };\r\n};\r\n","// import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport { Auth0Provider } from \"@auth0/auth0-react\";\nimport { authConfig } from \"./utils/authConfig\";\nimport App from \"./App\";\nimport \"./style.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <Auth0Provider {...authConfig}>\n      <App />\n  </Auth0Provider>\n);\n"],"sourceRoot":""}