{"version":3,"sources":["utils/history.js","utils/authConfig.js","utils/context.js","store/actions/actionTypes.js","store/reducers/authReducer.js","assets/logo2.png","components/NavBar.js","components/BtnModalCareerRenamer.js","components/BtnModalCareerSwitcher.js","components/BtnModalCareerAdder.js","components/Step1UrlDesc.js","components/Step2NameTitle.js","components/Step3Notes.js","components/Step4Resume.js","components/Step5CoverLetter.js","components/Step6Tags.js","components/Step7Date.js","pages/AddPage.js","components/SearchRadio.js","components/BtnModalCreateJob.js","pages/JobsPage.js","pages/AppPage.js","assets/loading.svg","components/LoadingSpinner.js","pages/ProfilePage.js","assets/logo1.png","pages/HomePage.js","App.js","store/actions/actions.js","index.js"],"names":["createBrowserHistory","authConfig","domain","clientId","redirectUri","window","location","origin","onRedirectCallback","appState","history","push","returnTo","pathname","Context","React","createContext","LOGIN_SUCCESS","LOGIN_FAILURE","SET_PROFILE","REMOVE_PROFILE","SET_DB_PROFILE","REMOVE_DB_PROFILE","initialState","isAuthenticated","dbProfile","authProfile","AuthReducer","state","action","type","ACTION_TYPES","payload","NavBar","auth0","useAuth0","navigateTo","useNavigate","className","to","style","padding","width","height","src","logo2","alt","onClick","loginWithPopup","user","email","BtnCareerRenamer","careersList","setCareersList","currentCareerNum","context","useContext","useState","newName","setNewName","modalOn","setModalOn","toggleModal","validateRename","length","find","item","alert","newList","dbProfileState","currentUser","username","oldName","data","oldCareerName","newCareerName","axios","put","then","res","console","log","tempProfile","careers_list","dispatchSetDbProfile","catch","err","updateRenameCareer","isOpen","toggle","onSubmit","e","preventDefault","name","id","title","placeholder","onChange","target","value","color","BtnCareerSwitcher","setCurrentCareerNum","map","i","disabled","newNum","current_career_num","updateCurrentCareerNum","BtnCareerAdder","newCareer","setNewCareer","validateAddCareer","updateCareersList","autoFocus","undoChange","this","quill","undo","redoChange","redo","Step1UrlDesc","setJobDescription","setPostingURL","quillRef","useRef","previewOpen","setPreviewOpen","previewContent","setPreviewContent","quillModules","useMemo","toolbar","container","handlers","preview","html","root","innerHTML","defaultValue","persist","ref","backgroundColor","minHeight","maxHeight","overflowY","theme","modules","formats","dangerouslySetInnerHTML","__html","Step2","setCompanyName","setJobTitle","htmlFor","Step3Notes","Step4Resume","setResumeFile","resumeDisplayFile","setResumeDisplayFile","multiple","onDrop","getRootProps","getInputProps","size","Step5CoverLetter","setCoverLetterFile","coverLetterDisplayFile","setCoverLetterDisplayFile","Step6Tags","setTags","Step7Date","subDate","setSubDate","v","f","String","Date","showClearButton","AddPage","postingURL","companyName","jobTitle","jobDescription","jobNotes","setJobNotes","byteaResume","setByteaResume","byteaCoverLetter","setByteaCoverLetter","tags","newFile","getByteArray","arrayBuffer","bytea","Uint8Array","useEffect","document","querySelector","toString","resumeFile","coverLetterFile","split","careerName","applicationDate","post","nodeList","getElementsByTagName","Array","prototype","slice","call","forEach","input","clearForm","SearchRadio","selectedSearchOption","setSelectedSearchOption","checked","readOnly","BtnModalCreateJob","SearchPage","allAppsList","setAllAppsList","displayedAppsList","setDisplayedAppsList","searchString","setSearchString","dateRangeStart","setDateRangeStart","dateRangeEnd","setDateRangeEnd","newestFirst","setNewestFirst","loadAllRecords","get","params","startDate","endDate","results","app","appDate","application_date","toLowerCase","includes","setDisplayedList","reverse","icon","faSort","date","getFullYear","getMonth","getDate","company_name","job_title","app_id","AppPage","appId","useParams","setApp","career_name","posting_url","job_description","job_notes","LoadingSpinner","loading","withAuthenticationRequired","logout","family_name","given_name","locale","nickname","onRedirecting","HomePage","logo1","ContextState","profile","dispatchLogin","dispatchSetAuthProfile","dispatchLogout","dispatchRemoveAuthProfile","useReducer","stateAuthReducer","dispatchAuthReducer","ACTIONS","Provider","file","Promise","acc","reader","FileReader","onloadend","event","result","onerror","error","readAsArrayBuffer","basename","path","element","ProfilePage","ReactDOM","createRoot","getElementById","render"],"mappings":"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","file":"static/js/main.eac8527a.chunk.js","sourcesContent":["import { createBrowserHistory } from \"history\";\n\nexport default createBrowserHistory();\n","import history from \"./history\";\n\nconst appConfig = {\n  domain: \"dev-9npol9r6.us.auth0.com\",\n  clientId: \"4GfZ4cfLN9HiX42YH3oWPq8NHKTiCAIS\",\n};\n\nconst onRedirectCallback = (appState) => {\n  history.push(appState && appState.returnTo ? appState.returnTo : window.location.pathname);\n};\n\nexport const authConfig = {\n  domain: appConfig.domain,\n  clientId: appConfig.clientId,\n  redirectUri: window.location.origin,\n  onRedirectCallback,\n};\n","import React from \"react\";\n\nconst Context = React.createContext();\n\nexport default Context;\n","\r\nexport const SUCCESS = \"SUCCESS\"\r\n\r\nexport const FAILURE = \"FAILURE\"\r\n\r\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\"\r\n\r\nexport const LOGIN_FAILURE = \"LOGIN_FAILURE\"\r\n\r\nexport const SET_PROFILE = \"SET_PROFILE\"\r\n\r\nexport const REMOVE_PROFILE = \"REMOVE_PROFILE\"\r\n\r\nexport const USER_INPUT_CHANGE = \"USER_INPUT_CHANGE\"\r\n\r\nexport const USER_INPUT_SUBMIT = \"USER_INPUT_SUBMIT\"\r\n\r\nexport const SET_DB_PROFILE = \"SET_DB_PROFILE\"\r\n\r\nexport const REMOVE_DB_PROFILE = \"REMOVE_DB_PROFILE\"\r\n\r\nexport const FETCH_DB_POSTS = \"FETCH_DB_POSTS\"\r\n\r\nexport const REMOVE_DB_POSTS = \"REMOVE_DB_POSTS\"\r\n","import * as ACTION_TYPES from \"../actions/actionTypes\";\n\nexport const initialState = {\n  isAuthenticated: false,\n  dbProfile: null,\n  authProfile: null,\n};\n\nexport const AuthReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ACTION_TYPES.LOGIN_SUCCESS:\n      return {\n        ...state,\n        isAuthenticated: true,\n      };\n    case ACTION_TYPES.LOGIN_FAILURE:\n      return {\n        ...state,\n        isAuthenticated: false,\n      };\n    case ACTION_TYPES.SET_PROFILE:\n      return {\n        ...state,\n        authProfile: action.payload,\n      };\n    case ACTION_TYPES.REMOVE_PROFILE:\n      return {\n        ...state,\n        authProfile: null,\n      };\n    case ACTION_TYPES.SET_DB_PROFILE:\n      return {\n        ...state,\n        dbProfile: action.payload,\n      };\n    case ACTION_TYPES.REMOVE_DB_PROFILE:\n      return {\n        ...state,\n        dbProfile: null,\n      };\n    default:\n      return state;\n  }\n};\n","export default __webpack_public_path__ + \"static/media/logo2.4b930b0d.png\";","import { Link } from \"react-router-dom\";\nimport logo2 from \"../assets/logo2.png\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst NavBar = () => {\n  const auth0 = useAuth0();\n  const navigateTo = useNavigate();\n\n  return (\n    <div className=\"d-flex justify-content-center border\">\n      {/* <nav className=\"navbar navbar-expand-lg navbar-light bg-light \"> */}\n      {/* <div\n          className=\"collapse navbar-collapse container\"\n          id=\"navbarSupportedContent\"\n        > */}\n      {/* <ul className=\"navbar-nav mr-auto row\">\n            <li className=\"nav-item active col\">\n              <Link to=\"/add\" style={{ padding: \"5px\" }}>\n                Add\n              </Link>\n            </li>\n            <li className=\"nav-item col\">\n              <Link to=\"/jobs\" style={{ padding: \"5px\" }}>\n                Jobs\n              </Link>\n            </li>\n            <li className=\"nav-item col\">\n                <button\n                  className=\"btn btn-outline-primary\"\n                  onClick={() => {\n                    auth0.isAuthenticated\n                      ? navigateTo(\"/profile\")\n                      : auth0.loginWithPopup();\n                  }}\n                >\n                  {auth0.isAuthenticated ? auth0.user.email : \"Log in\"}\n                </button>\n            </li>\n          </ul> */}\n\n      {/*  */}\n\n      <div className=\"container\">\n        <div className=\"row d-flex align-items-center\">\n          <div className=\"col  \">\n            <Link to=\"/\" style={{ padding: \"5px\" }}>\n              <img width=\"30\" height=\"30\" src={logo2} alt=\"Logo\"></img>\n            </Link>\n          </div>\n          <div className=\"col   text-center\">\n            <button\n              className=\"btn btn-outline-primary\"\n              onClick={() => {\n                auth0.isAuthenticated\n                  ? navigateTo(\"/profile\")\n                  : auth0.loginWithPopup();\n              }}\n            >\n              {auth0.isAuthenticated ? auth0.user.email : \"Log in\"}\n            </button>\n          </div>\n          <div className=\"col  \"></div>\n        </div>\n      </div>\n\n      {/*  */}\n    </div>\n    //   </nav>\n    // </div>\n  );\n};\n\nexport default NavBar;\n","import { useState, useContext } from \"react\";\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\nimport Context from \"../utils/context\";\nimport axios from \"axios\";\n\nexport default function BtnCareerRenamer({ careersList, setCareersList, currentCareerNum }) {\n  const context = useContext(Context);\n  const [newName, setNewName] = useState(careersList[currentCareerNum]);\n  const [modalOn, setModalOn] = useState(false);\n\n  function toggleModal() {\n    setModalOn(!modalOn);\n  }\n\n  function validateRename() {\n    if (newName.length === 0 || newName === careersList[currentCareerNum]) {\n      return;\n    }\n    if (\n      careersList.find((item) => {\n        return item === newName;\n      })\n    ) {\n      alert(`Error: \"${newName}\" already exists. Cannot create duplicate careers.`);\n    } else {\n      updateRenameCareer(careersList, currentCareerNum, newName);\n      toggleModal();\n    }\n  }\n\n  /* Update both \"users\" table's careersList value and \"apps\" table's career values*/\n  function updateRenameCareer(careersList, currentCareerNum, newName) {\n    let newList = [...careersList];\n    newList[currentCareerNum] = newName;\n    if (context.isAuthenticated && context.dbProfileState) {\n      let currentUser = context.dbProfileState.username;\n      const oldName = careersList[currentCareerNum];\n      const data = {\n        username: currentUser,\n        careersList: newList,\n        oldCareerName: oldName,\n        newCareerName: newName,\n      };\n      axios\n        .put(\"/api/put/renamecareer\", data) // db update\n        .then((res) => {\n          console.log(\"api/put/renamecareer res.data: \", res.data);\n          const tempProfile = { ...context.dbProfileState };\n          tempProfile.careers_list = data.careersList;\n          context.dispatchSetDbProfile(tempProfile); // reducer update\n          setCareersList(newList); // HomePage ui update\n        })\n        .catch((err) => {\n          console.log(\"api/put/careernum err\", err);\n        });\n    } else {\n      setCareersList(newList);\n    }\n\n    // let currentUser =\n    //   context.isAuthenticated && context.dbProfileState\n    //     ? context.dbProfileState.username\n    //     : \"demoUser\";\n  }\n\n  return (\n    <div>\n      <div className=\"dropdown\">\n        <button type=\"button\" className=\"btn btn-success m-1\" onClick={toggleModal}>\n          Rename Career\n        </button>\n        <Modal isOpen={modalOn} toggle={toggleModal}>\n          <ModalHeader toggle={toggleModal}>\n            Rename The Current Career: \"{careersList[currentCareerNum]}\"\n          </ModalHeader>\n          <ModalBody>\n            <form\n              onSubmit={(e) => {\n                e.preventDefault();\n                validateRename();\n              }}\n            >\n              <div>\n                Note: renaming this career will change the \"career\" attribute of all job\n                applications saved with the name \"{careersList[currentCareerNum]}\" to the new\n                name which you're about to enter.\n              </div>\n              <input\n                name=\"renameCareer\"\n                id=\"renameCareer\"\n                type=\"text\"\n                className=\"form-control\"\n                title=\"Rename Career\"\n                placeholder=\"New name\"\n                onChange={(e) => {\n                  setNewName(e.target.value);\n                }}\n              />\n              <button type=\"button\" className=\"btn btn-success w-100\" onClick={validateRename}>\n                Rename\n              </button>\n            </form>\n          </ModalBody>\n          <ModalFooter>\n            <Button color=\"primary\" onClick={toggleModal}>\n              Close\n            </Button>\n          </ModalFooter>\n        </Modal>\n      </div>\n    </div>\n  );\n}\n","import { Link } from \"react-router-dom\";\nimport { useState, useContext } from \"react\";\nimport Context from \"../utils/context\";\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\nimport axios from \"axios\";\n\nexport default function BtnCareerSwitcher({ careersList, currentCareerNum, setCurrentCareerNum }) {\n  const context = useContext(Context);\n  const [modalOn, setModalOn] = useState(false);\n\n  function toggleModal() {\n    setModalOn(!modalOn);\n  }\n\n  function updateCurrentCareerNum(newNum) {\n    if (context.isAuthenticated && context.dbProfileState) {\n      let currentUser = context.dbProfileState.username;\n      const data = {\n        currentCareerNum: newNum,\n        username: currentUser,\n      };\n      axios\n        .put(\"/api/put/careernum\", data) // db update\n        .then((res) => {\n          const tempProfile = { ...context.dbProfileState };\n          tempProfile.current_career_num = data.currentCareerNum;\n          context.dispatchSetDbProfile(tempProfile); // reducer update\n          setCurrentCareerNum(newNum); // HomePage ui update\n        })\n        .catch((err) => {\n          console.log(\"api/put/careernum err\", err);\n        });\n    } else {\n      setCurrentCareerNum(newNum);\n    }\n\n    // let currentUser =\n    //   context.isAuthenticated && context.dbProfileState\n    //     ? context.dbProfileState.username\n    //     : \"demoUser\";\n  }\n\n  return (\n    <div>\n      <div className=\"dropdown\">\n        <button\n          type=\"button\"\n          className=\"btn btn-success m-1\"\n          onClick={() => {\n            toggleModal();\n          }}\n        >\n          Switch Career\n        </button>\n        <Modal isOpen={modalOn} toggle={toggleModal}>\n          <ModalHeader toggle={toggleModal}>Select career:</ModalHeader>\n          <ModalBody>\n            {careersList.map((name, i) => {\n              return (\n                <div key={i}>\n                  <button\n                    type=\"button\"\n                    className=\"btn btn-success w-100\"\n                    disabled={currentCareerNum === i ? true : false}\n                    onClick={() => {\n                      updateCurrentCareerNum(i);\n                      toggleModal();\n                    }}\n                  >\n                    {name}\n                  </button>\n                </div>\n              );\n            })}\n            <div className=\"text-center\">\n              <Link to=\"/about\">How to delete a career</Link>\n            </div>\n          </ModalBody>\n          <ModalFooter>\n            <Button color=\"primary\" onClick={toggleModal}>\n              Close\n            </Button>\n          </ModalFooter>\n        </Modal>\n      </div>\n    </div>\n  );\n}\n","import { useState, useContext } from \"react\";\nimport Context from \"../utils/context\";\nimport axios from \"axios\";\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\n\nexport default function BtnCareerAdder({ careersList, setCareersList }) {\n  const context = useContext(Context);\n  const [newCareer, setNewCareer] = useState(\"\");\n  const [modalOn, setModalOn] = useState(false);\n\n  function toggleModal() {\n    setModalOn(!modalOn);\n  }\n\n  function validateAddCareer() {\n    if (newCareer.length === 0) {\n      return;\n    }\n    if (\n      careersList.find((item) => {\n        return item === newCareer;\n      })\n    ) {\n      alert(`\"${newCareer}\" already exists. Cannot create duplicate careers.`);\n    } else {\n      let newList = [...careersList, newCareer];\n      updateCareersList(newList);\n      toggleModal();\n    }\n  }\n\n  function updateCareersList(newList) {\n    if (context.isAuthenticated && context.dbProfileState) {\n      let currentUser = context.dbProfileState.username;\n      const data = {\n        username: currentUser,\n        careersList: newList,\n      };\n      axios\n        .put(\"/api/put/careerslist\", data) // db update\n        .then((res) => {\n          console.log(\"api/put/careerslist res\", res.data);\n          const tempProfile = { ...context.dbProfileState };\n          tempProfile.careers_list = data.careersList;\n          context.dispatchSetDbProfile(tempProfile); // reducer update\n          setCareersList(newList); // HomePage ui update\n        })\n        .catch((err) => {\n          console.log(\"api/put/careernum err\", err);\n        });\n    } else {\n      setCareersList(newList);\n    }\n\n    // let currentUser =\n    //   context.isAuthenticated && context.dbProfileState\n    //     ? context.dbProfileState.username\n    //     : \"demoUser\";\n  }\n\n  return (\n    <div>\n      <div className=\"dropdown\">\n        <button\n          type=\"button\"\n          className=\"btn btn-success m-1\"\n          onClick={() => {\n            toggleModal();\n          }}\n        >\n          Add Career\n        </button>\n        <Modal isOpen={modalOn} toggle={toggleModal}>\n          <ModalHeader toggle={toggleModal}>New career name:</ModalHeader>\n          <ModalBody>\n            <form\n              autoFocus\n              onSubmit={(e) => {\n                e.preventDefault();\n                validateAddCareer();\n              }}\n            >\n              <input\n                name=\"newCareer\"\n                id=\"newCareer\"\n                type=\"text\"\n                title=\"New Career\"\n                placeholder=\"career\"\n                className=\"form-control\"\n                onChange={(e) => {\n                  setNewCareer(e.target.value);\n                }}\n              />\n              <button type=\"submit\" className=\"btn btn-success w-100\">\n                Add\n              </button>\n              <div className=\"text-center\">Existing Careers:</div>\n              {careersList.map((name, i) => {\n                return (\n                  <div key={i}>\n                    <button type=\"button\" className=\"btn btn-outline-success w-100\" disabled>\n                      {name}\n                    </button>\n                  </div>\n                );\n              })}\n            </form>\n          </ModalBody>\n          <ModalFooter>\n            <Button color=\"primary\" onClick={toggleModal}>\n              Close\n            </Button>\n          </ModalFooter>\n        </Modal>\n      </div>\n    </div>\n  );\n}\n","import React, { useState, useMemo } from \"react\";\nimport ReactQuill from \"react-quill\";\nimport \"react-quill/dist/quill.snow.css\";\n// https://codesandbox.io/s/react-quill-multiple-editor-gttvm?file=/src/App.js:351-359\n\n/* \nThis component will render the inputs for the posting URL and the job description.\nThe job description input will use the react-quill rich text editor.\n*/\n\n/* // For react-quill, custom svgs are needed as the default icons don't always work\nconst CustomUndoIcon = () => (\n  <svg viewBox=\"0 0 18 18\">\n    <polygon className=\"ql-fill ql-stroke\" points=\"6 10 4 12 2 10 6 10\" />\n    <path\n      className=\"ql-stroke\"\n      d=\"M8.09,13.91A4.6,4.6,0,0,0,9,14,5,5,0,1,0,4,9\"\n    />\n  </svg>\n);\n\nconst CustomRedoIcon = () => (\n  <svg viewBox=\"0 0 18 18\">\n    <polygon className=\"ql-fill ql-stroke\" points=\"12 10 14 12 16 10 12 10\" />\n    <path\n      className=\"ql-stroke\"\n      d=\"M9.91,13.91A4.6,4.6,0,0,1,9,14a5,5,0,1,1,5-5\"\n    />\n  </svg>\n);\n */\n// Custom undo and redo functions for Custom Toolbar\nfunction undoChange() {\n  this.quill.history.undo();\n}\nfunction redoChange() {\n  this.quill.history.redo();\n}\n\nexport default function Step1UrlDesc({\n  id,\n  value,\n  setJobDescription,\n  setPostingURL,\n}) {\n  const quillRef = React.useRef();\n  const [previewOpen, setPreviewOpen] = useState(false);\n  const [previewContent, setPreviewContent] = useState(\"\");\n\n  const CustomToolbar = () => (\n    <div id={`toolbar-${id}`}>\n      <span className=\"ql-formats\">\n        <select\n          className=\"ql-header\"\n          defaultValue={\"\"}\n          onChange={(e) => e.persist()}\n        >\n          {[\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"false\"].map((value) => (\n            <option key={value} value={value} />\n          ))}\n        </select>\n        <button className=\"ql-bold\" />\n        <button className=\"ql-italic\" />\n        <button className=\"ql-underline\" />\n        <select className=\"ql-align\" />\n        <button className=\"ql-list\" value=\"bullet\" />\n        <button className=\"ql-list\" value=\"ordered\" />\n        <button className=\"ql-indent\" value=\"-1\" />\n        <button className=\"ql-indent\" value=\"+1\" />\n        <button className=\"ql-clean\" />\n      </span>\n      {/* <span className=\"ql-formats\">\n        <select className=\"ql-color\" />\n        <select className=\"ql-background\" />\n        <button className=\"ql-strike\" /> \n        <button className=\"ql-undo\">\n          <CustomUndoIcon />\n        </button>\n        <button className=\"ql-redo\">\n          <CustomRedoIcon />\n        </button>\n        <select className=\"ql-size\" defaultValue={\"\"} onChange={(e) => e.persist()}>\n          {[\"small\", \"false\", \"large\", \"huge\"].map((value, i) => (\n            <option key={value} value={value} />\n          ))}\n        </select> \n        <select className=\"ql-font\" defaultValue=\"arial\">\n          <option value=\"arial\">Arial</option>\n          <option value=\"comic-sans\">Comic Sans</option>\n          <option value=\"courier-new\">Courier New</option>\n          <option value=\"georgia\">Georgia</option>\n          <option value=\"helvetica\">Helvetica</option>\n          <option value=\"lucida\">Lucida</option>\n        </select> \n        <button className=\"ql-link\" />\n        <button className=\"ql-image\" />\n        <button className=\"ql-video\" />\n        <button className=\"ql-code-block\" />\n      </span> */}\n    </div>\n  );\n\n  const quillModules = useMemo(() => {\n    return {\n      toolbar: {\n        container: `#toolbar-${id}`,\n        handlers: {\n          preview: function (value) {\n            const html = this.quill.root.innerHTML;\n            setPreviewContent(html);\n            setPreviewOpen(!previewOpen);\n          },\n          undo: undoChange,\n          redo: redoChange,\n        },\n      },\n    };\n  }, [id, previewOpen]);\n\n  const quillFormats = [\n    \"bold\",\n    \"italic\",\n    \"underline\",\n    \"strike\",\n    \"script\",\n    \"size\",\n    \"header\",\n    \"list\",\n    \"indent\",\n    \"link\",\n    \"color\",\n    \"background\",\n    \"align\",\n    \"font\",\n    \"blockquote\",\n    \"bullet\",\n    \"image\",\n    \"code-block\",\n  ];\n\n  return (\n    <div className=\"step d-flex  flex-column \">\n      {/* Posting URL input*/}\n      <h3 id=\"step1Heading\">Job posting URL</h3>\n      <input\n        id=\"jobPostingURL\"\n        name=\"jobPostingURL\"\n        className=\"form-control\"\n        type=\"url\"\n        title=\"Job Posting URL\"\n        onChange={(e) => {\n          setPostingURL(e.target.value);\n        }}\n      />\n      {/* Job description input*/}\n      <h3>Job posting description</h3>\n      <div className=\"text-editor\">\n        {CustomToolbar(id)}\n        <ReactQuill\n          ref={quillRef}\n          style={{\n            backgroundColor: \"white\",\n            minHeight: \"280px\",\n            maxHeight: \"900px\",\n            overflowY: \"auto\",\n          }}\n          className=\"step3Desc\"\n          theme=\"snow\"\n          // defaultValue={value}\n          value={value}\n          onChange={setJobDescription}\n          modules={quillModules}\n          formats={quillFormats}\n        />\n        {previewOpen ? (\n          <div dangerouslySetInnerHTML={{ __html: previewContent }} />\n        ) : (\n          \"\"\n        )}\n      </div>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\n\nexport default function Step2({ setCompanyName, setJobTitle }) {\n  const [modalOn, setModalOn] = useState(false);\n\n  function toggleModal() {\n    setModalOn(!modalOn);\n  }\n\n  return (\n    <div className=\"step w-md-75\" style={{ backgroundColor: \"white\", minHeight: \"100px\" }}>\n      <h3>Required</h3>\n      <div className=\"step2 d-flex justify-content-space-between justify-content-md-center gap-1 gap-md-5 required\">\n        <div className=\"d-flex flex-column\">\n          <label htmlFor=\"jobTitle\">Company: </label>\n          <input\n            id=\"companyName\"\n            className=\"form-control w-100\"\n            name=\"companyName\"\n            type=\"text\"\n            title=\"Company Name\"\n            placeholder=\"Company\"\n            // onClick={toggleModal}\n            onChange={(e) => {\n              setCompanyName(e.target.value);\n            }}\n          />\n        </div>\n        <div className=\"d-flex flex-column\">\n          <label htmlFor=\"jobTitle\">Job Title: </label>\n          <input\n            id=\"jobTitle\"\n            className=\"form-control w-100\"\n            name=\"jobTitle\"\n            type=\"text\"\n            title=\"Job Title\"\n            placeholder=\"Job Title\"\n            // onClick={toggleModal}\n            onChange={(e) => {\n              setJobTitle(e.target.value);\n            }}\n          />\n        </div>\n      </div>\n      <Modal isOpen={modalOn} toggle={toggleModal}>\n        <ModalHeader toggle={toggleModal}>You are currently not logged in.</ModalHeader>\n        <ModalBody>\n          If you proceed to save this application without logging in, it will be saved to the public\n          demonstration database. It will not be saved to your personal account. Please log in to\n          save your application privately.\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"primary\" onClick={toggleModal}>\n            Ok\n          </Button>\n        </ModalFooter>\n      </Modal>\n    </div>\n  );\n}\n","import React, { useState, useMemo } from \"react\";\nimport ReactQuill from \"react-quill\";\nimport \"react-quill/dist/quill.snow.css\";\n// https://codesandbox.io/s/react-quill-multiple-editor-gttvm?file=/src/App.js:351-359\n\n/* // Custom svg needed as the default icon doesn't always work\nconst CustomUndoIcon = () => (\n  <svg viewBox=\"0 0 18 18\">\n    <polygon className=\"ql-fill ql-stroke\" points=\"6 10 4 12 2 10 6 10\" />\n    <path\n      className=\"ql-stroke\"\n      d=\"M8.09,13.91A4.6,4.6,0,0,0,9,14,5,5,0,1,0,4,9\"\n    />\n  </svg>\n);\n\nconst CustomRedoIcon = () => (\n  <svg viewBox=\"0 0 18 18\">\n    <polygon className=\"ql-fill ql-stroke\" points=\"12 10 14 12 16 10 12 10\" />\n    <path\n      className=\"ql-stroke\"\n      d=\"M9.91,13.91A4.6,4.6,0,0,1,9,14a5,5,0,1,1,5-5\"\n    />\n  </svg>\n);\n */\n// Undo and redo functions for Custom Toolbar\nfunction undoChange() {\n  this.quill.history.undo();\n}\nfunction redoChange() {\n  this.quill.history.redo();\n}\n\nexport default function Step3Notes({ id, value, onChange }) {\n  const quillRef = React.useRef();\n  const [previewOpen, setPreviewOpen] = useState(false);\n  const [previewContent, setPreviewContent] = useState(\"\");\n\n  const CustomToolbar = () => (\n    <div id={`toolbar-${id}`}>\n      <span className=\"ql-formats\">\n        <select\n          className=\"ql-header\"\n          defaultValue={\"\"}\n          onChange={(e) => e.persist()}\n        >\n          {[\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"false\"].map((value) => (\n            <option key={value} value={value} />\n          ))}\n        </select>\n        <button className=\"ql-bold\" />\n        <button className=\"ql-italic\" />\n        <button className=\"ql-underline\" />\n        <select className=\"ql-align\" />\n        <button className=\"ql-list\" value=\"bullet\" />\n        <button className=\"ql-list\" value=\"ordered\" />\n        <button className=\"ql-indent\" value=\"-1\" />\n        <button className=\"ql-indent\" value=\"+1\" />\n        <button className=\"ql-clean\" />\n      </span>\n      {/* <span className=\"ql-formats\">\n        <select className=\"ql-color\" />\n        <select className=\"ql-background\" />\n        <button className=\"ql-strike\" /> \n        <button className=\"ql-undo\">\n          <CustomUndoIcon />\n        </button>\n        <button className=\"ql-redo\">\n          <CustomRedoIcon />\n        </button>\n        <select className=\"ql-size\" defaultValue={\"\"} onChange={(e) => e.persist()}>\n          {[\"small\", \"false\", \"large\", \"huge\"].map((value, i) => (\n            <option key={value} value={value} />\n          ))}\n        </select> \n        <select className=\"ql-font\" defaultValue=\"arial\">\n          <option value=\"arial\">Arial</option>\n          <option value=\"comic-sans\">Comic Sans</option>\n          <option value=\"courier-new\">Courier New</option>\n          <option value=\"georgia\">Georgia</option>\n          <option value=\"helvetica\">Helvetica</option>\n          <option value=\"lucida\">Lucida</option>\n        </select> \n        <button className=\"ql-link\" />\n        <button className=\"ql-image\" />\n        <button className=\"ql-video\" />\n        <button className=\"ql-code-block\" />\n      </span> */}\n    </div>\n  );\n\n  const quillModules = useMemo(() => {\n    return {\n      toolbar: {\n        container: `#toolbar-${id}`,\n        handlers: {\n          preview: function (value) {\n            const html = this.quill.root.innerHTML;\n            setPreviewContent(html);\n            setPreviewOpen(!previewOpen);\n          },\n          undo: undoChange,\n          redo: redoChange,\n        },\n      },\n    };\n  }, [id, previewOpen]);\n\n  const quillFormats = [\n    \"bold\",\n    \"italic\",\n    \"underline\",\n    \"strike\",\n    \"script\",\n    \"size\",\n    \"header\",\n    \"list\",\n    \"indent\",\n    \"link\",\n    \"color\",\n    \"background\",\n    \"align\",\n    \"font\",\n    \"blockquote\",\n    \"bullet\",\n    \"image\",\n    \"code-block\",\n  ];\n\n  return (\n    <div className=\"step\">\n      <h3 id=\"step4Heading\">Notes for this application</h3>\n      <div className=\"text-editor\">\n        {CustomToolbar(id)}\n        <ReactQuill\n          ref={quillRef}\n          style={{\n            backgroundColor: \"white\",\n            minHeight: \"150px\",\n            maxHeight: \"770px\",\n            overflowY: \"auto\",\n          }}\n          theme=\"snow\"\n          // defaultValue={value}\n          value={value}\n          onChange={onChange}\n          modules={quillModules}\n          formats={quillFormats}\n        />\n        {previewOpen ? (\n          <div dangerouslySetInnerHTML={{ __html: previewContent }} />\n        ) : (\n          \"\"\n        )}\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport Dropzone from \"react-dropzone\";\n// https://react-dropzone.js.org/#section-examples\n\nexport default function Step4Resume({ setResumeFile, resumeDisplayFile, setResumeDisplayFile }) {\n  return (\n    <div className=\"step w-md-75\">\n      <h3>Resume</h3>\n      <Dropzone multiple={false} onDrop={setResumeFile}>\n        {({ getRootProps, getInputProps }) => (\n          <section>\n            <div {...getRootProps({ className: \"dropzone\" })}>\n              <input {...getInputProps()} />\n              {resumeDisplayFile.name ? (\n                <div>\n                  <span className=\"text-primary\">\n                    <strong>{resumeDisplayFile.name}</strong> - {resumeDisplayFile.size} bytes\n                    &nbsp;\n                    <button\n                      className=\"btn btn-outline-success\"\n                      onClick={() => {\n                        setResumeDisplayFile({});\n                      }}\n                    >\n                      x\n                    </button>\n                  </span>\n                </div>\n              ) : (\n                <strong>Drag & drop file, or click to select</strong>\n              )}\n            </div>\n          </section>\n        )}\n      </Dropzone>\n    </div>\n  );\n}\n","import React from \"react\";\nimport Dropzone from \"react-dropzone\";\n\nexport default function Step5CoverLetter({\n  setCoverLetterFile,\n  coverLetterDisplayFile,\n  setCoverLetterDisplayFile,\n}) {\n  return (\n    <div className=\"step w-md-75\">\n      <h3>Cover Letter</h3>\n      <Dropzone multiple={false} onDrop={setCoverLetterFile}>\n        {({ getRootProps, getInputProps }) => (\n          <section>\n            <div {...getRootProps({ className: \"dropzone\" })}>\n              <input {...getInputProps()} />\n              {coverLetterDisplayFile.name ? (\n                <div>\n                  <span className=\"text-primary\">\n                    <strong>{coverLetterDisplayFile.name}</strong> - {coverLetterDisplayFile.size}{\" \"}\n                    bytes &nbsp;\n                    <button\n                      className=\"btn btn-outline-success\"\n                      onClick={() => {\n                        setCoverLetterDisplayFile({});\n                      }}\n                    >\n                      x\n                    </button>\n                  </span>\n                </div>\n              ) : (\n                <strong>Drag & drop file, or click to select</strong>\n              )}\n            </div>\n          </section>\n        )}\n      </Dropzone>\n    </div>\n  );\n}\n","export default function Step6Tags({ setTags }) {\n  return (\n    <div className=\"step w-50\">\n      <strong>Tags Separated By Commas</strong>\n      <input\n        id=\"jobTags\"\n        name=\"jobTags\"\n        className=\"form-control\"\n        type=\"string\"\n        title=\"Job tags\"\n        onChange={(e) => {\n          setTags(e.target.value);\n        }}\n      />\n    </div>\n  );\n}\n","import React from \"react\";\nimport { DatePicker } from \"reactstrap-date-picker\";\n\nexport default function Step7Date({ subDate, setSubDate }) {\n  return (\n    <div className=\"step w-md-75\">\n      <h3>Submit Date</h3>\n      <DatePicker\n        id=\"subDate\"\n        value={subDate}\n        onChange={(v, f) => {\n          // v=value, f=formatted\n          setSubDate(String(new Date(v)));\n        }}\n        showClearButton={false}\n      />\n    </div>\n  );\n}\n","import React, { useContext, useEffect, useState } from \"react\";\n// import { Tooltip } from \"reactstrap\";\n// import { BsInfoCircle } from \"react-icons/bs\";\nimport axios from \"axios\";\nimport Context from \"../utils/context\";\nimport BtnCareerRenamer from \"../components/BtnModalCareerRenamer\";\nimport BtnCareerSwitcher from \"../components/BtnModalCareerSwitcher\";\nimport BtnCareerAdder from \"../components/BtnModalCareerAdder\";\nimport Step1UrlDesc from \"../components/Step1UrlDesc\";\nimport Step2NameTitle from \"../components/Step2NameTitle\";\nimport Step3Notes from \"../components/Step3Notes\";\nimport Step4Resume from \"../components/Step4Resume\";\nimport Step5CoverLetter from \"../components/Step5CoverLetter\";\nimport Step6Tags from \"../components/Step6Tags\";\nimport Step7Date from \"../components/Step7Date\";\n\nexport default function AddPage() {\n  const context = useContext(Context);\n  const [currentCareerNum, setCurrentCareerNum] = useState(0);\n  const [careersList, setCareersList] = useState([\"C1\", \"C2\"]);\n  const [postingURL, setPostingURL] = useState(\"\");\n  const [companyName, setCompanyName] = useState(\"\");\n  const [jobTitle, setJobTitle] = useState(\"\");\n  const [jobDescription, setJobDescription] = useState(\"\");\n  const [jobNotes, setJobNotes] = useState(\"\");\n  const [byteaResume, setByteaResume] = useState();\n  const [byteaCoverLetter, setByteaCoverLetter] = useState();\n  const [resumeDisplayFile, setResumeDisplayFile] = useState({});\n  const [coverLetterDisplayFile, setCoverLetterDisplayFile] = useState({});\n  const [tags, setTags] = useState(\"\");\n  const [toolTipOn1, setToolTipOn1] = useState(false);\n  const [subDate, setSubDate] = useState(String(new Date()));\n\n  useEffect(() => {\n    let dbProfile = context.dbProfileState;\n    if (dbProfile) {\n      setCurrentCareerNum(dbProfile.current_career_num);\n      setCareersList(dbProfile.careers_list);\n    }\n  }, [context.dbProfileState]);\n\n  async function setResumeFile(newFile) {\n    const arrayBuffer = await context.getByteArray(newFile[0]);\n    console.log(arrayBuffer);\n    const bytea = new Uint8Array(arrayBuffer);\n    console.log(bytea);\n    setByteaResume(bytea);\n    setResumeDisplayFile(newFile[0]);\n  }\n\n  async function setCoverLetterFile(newFile) {\n    const arrayBuffer = await context.getByteArray(newFile[0]);\n    const bytea = new Uint8Array(arrayBuffer);\n    setByteaCoverLetter(bytea);\n    setCoverLetterDisplayFile(newFile[0]);\n  }\n\n  function handleSaveApp() {\n    if (companyName.length === 0 || jobTitle.length === 0) {\n      document.querySelector(\".step2\").style.color = \"red\";\n      alert(\"Save unsuccessful. Required data is missing.\");\n      return;\n    }\n    const data = {\n      username: context.isAuthenticated ? context.user.email : \"demoUser\",\n      postingURL: postingURL,\n      companyName: companyName,\n      jobDescription: jobDescription.toString(\"html\"),\n      jobTitle: jobTitle,\n      jobNotes: jobNotes.toString(\"html\"),\n      resumeFile: byteaResume,\n      coverLetterFile: byteaCoverLetter,\n      tags: tags.split(\",\"),\n      careerName: careersList[currentCareerNum],\n      applicationDate: String(subDate),\n    };\n    // console.log(data);\n    axios\n      .post(\"/api/post/postapp\", data)\n      .then((res) => {\n        console.log(\"/api/post/postapp\", res);\n        if (context.isAuthenticated) {\n          console.log(`Saved to user ${context.user.email}'s database.`);\n        } else {\n          console.log(`Saved to public demonstration database.`);\n        }\n        clearForm();\n      })\n      .catch((err) => {\n        console.log(err);\n        alert(\"Not saved. Error: Website under development\");\n      });\n  }\n\n  function clearForm() {\n    setPostingURL(\"\");\n    setJobDescription(\"\");\n    setCompanyName(\"\");\n    setJobTitle(\"\");\n    setJobNotes(\"\");\n    setByteaResume([]);\n    setByteaCoverLetter([]);\n    let nodeList = document.getElementsByTagName(\"input\");\n    let nodeListConvertedToArray = Array.prototype.slice.call(nodeList);\n    nodeListConvertedToArray.forEach((input) => {\n      input.value = \"\";\n    });\n    document.querySelector(\".step2\").style.color = \"initial\";\n  }\n\n  return (\n    <div className=\"centeredPage\">\n      <h5 className=\"text-center text-warning\">Project Under Construction</h5>\n      <h1>Add</h1>\n      <h3>\n        Current Career:&nbsp;\n        <span className=\"text-success\">{careersList[currentCareerNum]}</span>\n      </h3>\n      <div className=\"d-flex\">\n        <BtnCareerSwitcher\n          careersList={careersList}\n          currentCareerNum={currentCareerNum}\n          setCurrentCareerNum={setCurrentCareerNum}\n        />\n        <BtnCareerAdder\n          careersList={careersList}\n          setCareersList={setCareersList}\n          setCurrentCareerNum={setCurrentCareerNum}\n        />\n        <BtnCareerRenamer\n          careersList={careersList}\n          setCareersList={setCareersList}\n          currentCareerNum={currentCareerNum}\n        />\n      </div>\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col\">\n            <Step1UrlDesc\n              id=\"step3editor\"\n              name=\"step3editor\"\n              value={jobDescription}\n              setPostingURL={setPostingURL}\n              setJobDescription={setJobDescription}\n            />\n          </div>\n          <div className=\"col\">\n            <Step2NameTitle\n              setCompanyName={setCompanyName}\n              setJobTitle={setJobTitle}\n            />\n            <Step3Notes\n              id=\"step4editor\"\n              value={jobNotes}\n              onChange={setJobNotes}\n            />\n          </div>\n        </div>\n      </div>\n      <div className=\"container w-50\">\n        <div className=\"row\">\n          <div className=\"col\">\n            <Step4Resume\n              setResumeFile={setResumeFile}\n              resumeDisplayFile={resumeDisplayFile}\n              setResumeDisplayFile={setResumeDisplayFile}\n            />\n          </div>\n          <div className=\"col\">\n            <Step5CoverLetter\n              setCoverLetterFile={setCoverLetterFile}\n              coverLetterDisplayFile={coverLetterDisplayFile}\n              setCoverLetterDisplayFile={setCoverLetterDisplayFile}\n            />\n          </div>\n        </div>\n      </div>\n      <Step6Tags setTags={setTags} />\n      <Step7Date subDate={subDate} setSubDate={setSubDate} />\n      <div className=\"step w-50\">\n        <button className=\"btn btn-success p-2\" onClick={handleSaveApp}>\n          Save\n        </button>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\n\nexport default function SearchRadio({ selectedSearchOption, setSelectedSearchOption }) {\n  return (\n    <form className=\"d-flex mt-2\">\n      <div className=\"form-check\">\n        <label>\n          <input\n            type=\"radio\"\n            name=\"react-tips\"\n            value=\"job_title\"\n            checked={selectedSearchOption === \"job_title\"}\n            onClick={() => {\n              setSelectedSearchOption(\"job_title\");\n            }}\n            className=\"form-check-input\"\n            readOnly\n          />\n          Job Title\n        </label>\n      </div>\n      &nbsp;\n      <div className=\"form-check\">\n        <label>\n          <input\n            type=\"radio\"\n            name=\"react-tips\"\n            value=\"company_name\"\n            checked={selectedSearchOption === \"company_name\"}\n            onClick={() => {\n              setSelectedSearchOption(\"company_name\");\n            }}\n            className=\"form-check-input\"\n            readOnly\n          />\n          Company\n        </label>\n      </div>\n      &nbsp;\n      <div className=\"form-check\">\n        <label>\n          <input\n            type=\"radio\"\n            name=\"react-tips\"\n            value=\"job_description\"\n            checked={selectedSearchOption === \"job_description\"}\n            onClick={() => {\n              setSelectedSearchOption(\"job_description\");\n            }}\n            className=\"form-check-input\"\n            readOnly\n          />\n          Description\n        </label>\n      </div>\n    </form>\n  );\n}\n","import { Link } from \"react-router-dom\";\nimport SearchRadio from \"./SearchRadio\";\nimport { useState, useContext } from \"react\";\nimport Context from \"../utils/context\";\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\n\nexport default function BtnModalCreateJob({}) {\n  const context = useContext(Context);\n  const [modalOn, setModalOn] = useState(false);\n\n  function toggleModal() {\n    setModalOn(!modalOn);\n  }\n\n  return (\n    // <div>\n    <div className=\"dropdown text-center\">\n      <button\n        type=\"button\"\n        className=\"btn btn-primary m-1\"\n        onClick={() => {\n          toggleModal();\n        }}\n      >\n        + Create\n      </button>\n      <Modal isOpen={modalOn} toggle={toggleModal}>\n        <ModalHeader toggle={toggleModal}></ModalHeader>\n        <ModalBody>\n          <div className=\"step2 d-flex justify-content-space-between justify-content-md-center gap-1 gap-md-5 required\">\n            <div className=\"d-flex flex-column\">\n              <label htmlFor=\"jobTitle\">Company: </label>\n              <input\n                id=\"companyName\"\n                className=\"form-control w-100\"\n                name=\"companyName\"\n                type=\"text\"\n                title=\"Company Name\"\n                placeholder=\"Company\"\n                onChange={(e) => {\n                  // setCompanyName(e.target.value);\n                }}\n              />\n            </div>\n            <div className=\"d-flex flex-column\">\n              <label htmlFor=\"jobTitle\">Job Title: </label>\n              <input\n                id=\"jobTitle\"\n                className=\"form-control w-100\"\n                name=\"jobTitle\"\n                type=\"text\"\n                title=\"Job Title\"\n                placeholder=\"Job Title\"\n                onChange={(e) => {\n                  // setJobTitle(e.target.value);\n                }}\n              />\n            </div>\n          </div>\n        </ModalBody>\n        <ModalFooter>\n          <Button\n            color=\"primary\"\n            onClick={() => {\n              alert(\"Add\");\n              /* Insert function to check db for similar comanies/ positions and display them  */\n            }}\n          >\n            Add\n          </Button>\n        </ModalFooter>\n      </Modal>\n    </div>\n    // </div>\n  );\n}\n","import React from \"react\";\nimport Context from \"../utils/context\";\nimport { useState, useEffect, useContext } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport { FormGroup, Label } from \"reactstrap\";\nimport { DatePicker } from \"reactstrap-date-picker\";\nimport SearchRadio from \"../components/SearchRadio\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSort } from \"@fortawesome/free-solid-svg-icons\";\nimport BtnModalCreateJob from \"../components/BtnModalCreateJob\";\n\nexport default function SearchPage() {\n  const context = useContext(Context);\n  const [allAppsList, setAllAppsList] = useState([]);\n  const [displayedAppsList, setDisplayedAppsList] = useState([]);\n  const [searchString, setSearchString] = useState(\"\");\n  const [selectedSearchOption, setSelectedSearchOption] = useState(\"job_title\");\n  const [dateRangeStart, setDateRangeStart] = useState(\"\");\n  const [dateRangeEnd, setDateRangeEnd] = useState(\"\");\n  const [newestFirst, setNewestFirst] = useState(true);\n\n  /* The allAppsList state will contain all of current user's records in this format: \n    [{app_id: 1, application_date: 'Sat Dec 24 2022 13:07:37 GMT-0800 (Pacific Standard Time)', company_name: 'xyz', job_title: 'abc', job_description: ''},\n    {app_id: 2, application_date: 'Sat Dec 24 2022 13:07:37 GMT-0800 (Pacific Standard Time)', company_name: 'xyz', job_title: 'abc', job_description: ''},\n    {app_id: 3, application_date: 'Sat Dec 24 2022 13:07:37 GMT-0800 (Pacific Standard Time)', company_name: 'xyz', job_title: 'abc', job_description: ''}] \n    Use the input values of searchString, selectedSearchOption, dateRangeStart, and dateRangeEnd to create a subset of these records that corresponds to \n    these input values. Set displayedAppsList equal to the resulting subset using setDisplayedAppsList. */\n\n  // get all records from db\n  function loadAllRecords() {\n    if (context.isAuthenticated && context.dbProfileState) {\n      const username = context.dbProfileState.username;\n      axios\n        .get(\"/api/get/all-user-apps\", { params: { email: username } })\n        .then((res) => {\n          setAllAppsList(res.data);\n          setDisplayedAppsList(res.data);\n          // console.log(res.data);\n        })\n        .catch((err) => console.log(err));\n    }\n  }\n\n  function resetSearchParams() {\n    setSearchString(\"\");\n    setDateRangeStart(\"\");\n    setDateRangeEnd(\"\");\n  }\n\n  function toggleDateSort() {\n    setNewestFirst(!newestFirst);\n    setDisplayedAppsList(displayedAppsList.reverse());\n  }\n\n  function setDisplayedList(searchString) {\n    const startDate = dateRangeStart ? new Date(dateRangeStart) : new Date(0);\n    const endDate = dateRangeEnd ? new Date(dateRangeEnd) : new Date();\n    let results = [];\n    allAppsList.forEach((app) => {\n      const appDate = new Date(app.application_date);\n      if (\n        app[selectedSearchOption]\n          .toLowerCase()\n          .includes(searchString.toLowerCase()) &&\n        appDate >= startDate &&\n        appDate <= endDate\n      ) {\n        results.push(app);\n      }\n    });\n    setDisplayedAppsList(results);\n  }\n\n  /*  \n  // server side search will be used if we decide to load only some records at page load and make server requests later for ones we don't have\n  function serverSideSearch() {\n    if (context.isAuthenticated && context.dbProfileState) {\n      const username = context.dbProfileState.username;\n      axios\n        .get(\"/api/get/search-terms\", {\n          params: {\n            email: username,\n            searchStr: searchString,\n            searchOption: selectedSearchOption,\n          },\n        })\n        .then((res) => {\n          setDisplayedAppsList(res.data);\n          console.log(res.data);\n        })\n        .catch((err) => console.log(err));\n    }\n  }\n  */\n\n  useEffect(() => {\n    console.log(searchString);\n    setDisplayedList(searchString);\n  }, [searchString, dateRangeStart, dateRangeEnd]);\n\n  // load all records on mount or context change\n  useEffect(() => {\n    loadAllRecords();\n  }, [context]);\n\n  return (\n    <div className=\"centeredPage\">\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col\"></div>\n          <div className=\"col text-center\">\n            <h1>My Jobs</h1>\n          </div>\n          <div className=\"col\">\n            <BtnModalCreateJob />\n          </div>\n        </div>\n      </div>\n\n      {/* ********** Search Form Start ********** */}\n      <form\n        className=\"form-inline d-flex my-2 my-lg-0\"\n        onSubmit={(e) => {\n          e.preventDefault();\n        }}\n      >\n        <input\n          className=\"form-control mr-sm-2\"\n          id=\"searchInput\"\n          type=\"search\"\n          placeholder=\"Search\"\n          aria-label=\"Search\"\n          value={searchString}\n          onChange={(e) => {\n            setSearchString(e.target.value);\n          }}\n        />\n        <button\n          className=\"btn btn-outline-success my-2 my-sm-0\"\n          onClick={() => {\n            loadAllRecords();\n            resetSearchParams();\n          }}\n        >\n          Reset\n        </button>\n      </form>\n      <SearchRadio\n        selectedSearchOption={selectedSearchOption}\n        setSelectedSearchOption={setSelectedSearchOption}\n      />\n      <div className=\"d-flex mt-3\">\n        <FormGroup className=\"d-flex align-items-center\">\n          <Label>From:&nbsp;</Label>\n          <DatePicker\n            id=\"example-datepicker1\"\n            value={dateRangeStart}\n            onChange={(v, f) => {\n              //v=value, f=formatted\n              setDateRangeStart(v);\n            }}\n          />\n        </FormGroup>\n        &nbsp;\n        <FormGroup className=\"d-flex align-items-center\">\n          <Label>To:&nbsp;</Label>\n          <DatePicker\n            id=\"example-datepicker2\"\n            value={dateRangeEnd}\n            onChange={(v, f) => {\n              //v=value, f=formatted\n              setDateRangeEnd(v);\n            }}\n          />\n        </FormGroup>\n      </div>\n      {/* *********** Search Form End ********* */}\n\n      <table className=\"table table-bordered text-center w-50 mt-4\">\n        <thead>\n          <tr>\n            <th>\n              Date &nbsp;\n              <button onClick={toggleDateSort}>\n                <FontAwesomeIcon icon={faSort} />\n              </button>\n            </th>\n            <th>Company</th>\n            <th>Job Title</th>\n            <th>Application</th>\n          </tr>\n        </thead>\n        <tbody>\n          {displayedAppsList.length > 0 ? (\n            displayedAppsList.map((item, i) => {\n              let date = new Date(item.application_date);\n              return (\n                <tr key={i}>\n                  <td>\n                    <div>{`${date.getFullYear()}-${\n                      date.getMonth() + 1\n                    }-${date.getDate()}`}</div>\n                  </td>\n                  <td>\n                    <div>{item.company_name}</div>\n                  </td>\n                  <td>\n                    <div>{item.job_title}</div>\n                  </td>\n                  <td>\n                    <Link to={`/app/${item.app_id}`}>View/Edit</Link>\n                  </td>\n                </tr>\n              );\n            })\n          ) : (\n            <h1>Click \"+ Create\" to add new job applications.</h1>\n          )}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n","import { useParams } from \"react-router-dom\";\nimport Context from \"../utils/context\";\nimport { useEffect, useState, useContext } from \"react\";\nimport axios from \"axios\";\n\nexport default function AppPage() {\n  const { appId } = useParams();\n  const context = useContext(Context);\n  const [app, setApp] = useState();\n\n  // get all records from db\n  function loadApp() {\n    if (context.isAuthenticated && context.dbProfileState) {\n      axios\n        .get(\"/api/get/app\", { params: { appId: appId } })\n        .then((res) => {\n          setApp(res.data);\n        })\n        .catch((err) => console.log(err));\n    }\n  }\n\n  useEffect(() => {\n    loadApp();\n  }, [context]);\n\n  /* \n  app_id SERIAL UNIQUE,\n  username TEXT UNIQUE REFERENCES users(username),\n  career_name TEXT,\n  posting_url TEXT,\n  company_name TEXT NOT NULL,\n  job_title TEXT NOT NULL,\n  job_description TEXT,\n  job_notes TEXT,\n  resume_file BYTEA, \n  cover_letter_file BYTEA,\n  tags TEXT [],\n  application_date TEXT,\n  */\n  return (\n    app && (\n      <div className=\"centeredPage\">\n        <h1>Application ID: {appId}</h1>\n        <div>application_date: {app.application_date}</div>\n        <div>company_name: {app.company_name}</div>\n        <div>job_title: {app.job_title}</div>\n        <div>career_name: {app.career_name}</div>\n        <div>posting_url: {app.posting_url}</div>\n        <div>job_description: {app.job_description}</div>\n        <div>job_notes: {app.job_notes}</div>\n        <div>tags: {app.tags}</div>\n      </div>\n    )\n  );\n}\n","export default __webpack_public_path__ + \"static/media/loading.330b7d99.svg\";","import React from \"react\";\nimport loading from \"../assets/loading.svg\";\n\nconst LoadingSpinner = () => (\n  <div className=\"page\">\n    <h3>Loading</h3>\n    <img src={loading} alt=\"Loading\" />\n  </div>\n);\n\nexport default LoadingSpinner;\n","import React from \"react\";\nimport { useAuth0, withAuthenticationRequired } from \"@auth0/auth0-react\";\nimport LoadingSpinner from \"../components/LoadingSpinner\";\n\nconst Profile = () => {\n  const { user, logout } = useAuth0();\n \n  return (\n    <div className=\"centeredPage\">\n      <h1>Profile</h1>\n      <button className=\"btn btn-primary\" onClick={() => logout()}>\n        Log out\n      </button>\n      {user.email && <p>Email: {user.email}</p>}\n      {user.family_name && <p>Family name: {user.family_name}</p>}\n      {user.given_name && <p>Given name: {user.given_name}</p>}\n      {user.name && <p>Name: {user.name}</p>}\n      {user.locale && <p>Locale: {user.locale}</p>}\n      {user.nickname && <p>Nickname: {user.nickname}</p>}\n    </div>\n  );\n};\n\nexport default withAuthenticationRequired(Profile, {\n  onRedirecting: () => <LoadingSpinner />,\n});\n","export default __webpack_public_path__ + \"static/media/logo1.37c20868.png\";","import React from \"react\";\nimport logo1 from \"../assets/logo1.png\";\n\nexport default function HomePage() {\n  return (\n    <div className=\"centeredPage\">\n      <h1>Job Tracker</h1>\n      \n      <img src={logo1} alt=\"logo\"></img>\n      <h3>Log in</h3>\n    </div>\n  );\n}\n","import React, { useReducer, useEffect } from \"react\";\nimport Context from \"./utils/context\";\nimport * as AuthReducer from \"./store/reducers/authReducer\";\nimport * as ACTIONS from \"./store/actions/actions\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport axios from \"axios\";\nimport { HashRouter, Route, Routes } from \"react-router-dom\";\nimport NavBar from \"./components/NavBar\";\nimport AddPage from \"./pages/AddPage\";\nimport JobsPage from \"./pages/JobsPage\";\nimport AppPage from \"./pages/AppPage\";\nimport ProfilePage from \"./pages/ProfilePage\";\nimport HomePage from \"./pages/HomePage\";\n\nexport default function ContextState() {\n  const auth0 = useAuth0();\n\n  useEffect(() => {\n    if (auth0.isAuthenticated) {\n      let profile = auth0.user;\n      dispatchLogin();\n      dispatchSetAuthProfile(profile);\n      axios\n        .post(\"/api/post/userprofiletodb\", profile)\n        .then(\n          axios\n            .get(\"/api/get/userprofilefromdb\", {\n              params: { email: profile.email },\n            })\n            .then((res) => dispatchSetDbProfile(res.data[0]))\n            .catch((err) => console.log(err))\n        )\n        .catch((err) => console.log(err));\n    } else {\n      dispatchLogout();\n      dispatchRemoveAuthProfile();\n    }\n  }, [auth0.isAuthenticated, auth0.user]);\n\n  /*Auth Reducer: although the useAuth0 library object provides global auth state access from the \n  cloud, storing our own version in a reducer at login allows for local retrieval of auth state values \n  in between login/logout*/\n  const [stateAuthReducer, dispatchAuthReducer] = useReducer(\n    AuthReducer.AuthReducer,\n    AuthReducer.initialState\n  );\n\n  function dispatchLogin() {\n    dispatchAuthReducer(ACTIONS.login_success());\n  }\n\n  function dispatchLogout() {\n    dispatchAuthReducer(ACTIONS.login_failure());\n  }\n\n  function dispatchSetAuthProfile(profile) {\n    dispatchAuthReducer(ACTIONS.set_profile(profile));\n  }\n\n  function dispatchSetDbProfile(profile) {\n    dispatchAuthReducer(ACTIONS.set_db_profile(profile));\n  }\n\n  function dispatchRemoveAuthProfile() {\n    dispatchAuthReducer(ACTIONS.remove_profile());\n  }\n\n  function getByteArray(file) {\n    return new Promise((acc, err) => {\n      const reader = new FileReader();\n      reader.onloadend = (event) => {\n        acc(event.target.result);\n      };\n      reader.onerror = (error) => {\n        err(error);\n      };\n      reader.readAsArrayBuffer(file);\n    });\n  }\n\n  return (\n    <Context.Provider\n      value={{\n        auth0: auth0,\n        user: auth0.user,\n        dispatchLogin: () => dispatchLogin(),\n        dispatchLogout: () => dispatchLogout(),\n        dispatchSetAuthProfile: (profile) => dispatchSetAuthProfile(profile),\n        dispatchRemoveAuthProfile: () => dispatchRemoveAuthProfile(),\n        dispatchSetDbProfile: (profile) => dispatchSetDbProfile(profile),\n        stateAuthReducer: stateAuthReducer,\n        isAuthenticated: stateAuthReducer.isAuthenticated,\n        dbProfileState: stateAuthReducer.dbProfile,\n        authProfile: stateAuthReducer.authProfile,\n        getByteArray: (file) => getByteArray(file),\n      }}\n    >\n      <HashRouter basename=\"/\">\n        <NavBar />\n        <Routes>\n          <Route\n            path=\"/\"\n            element={auth0.isAuthenticated ? <JobsPage /> : <HomePage />}\n          />\n          <Route path=\"/about\" element={<HomePage />} />\n          <Route path=\"/add\" element={<AddPage />} />\n          <Route path=\"/jobs\" element={<JobsPage />} />\n          <Route path=\"/app/:appId\" element={<AppPage />} />\n          <Route path=\"/profile\" element={<ProfilePage />} />\n        </Routes>\n      </HashRouter>\n    </Context.Provider>\n  );\n}\n","import * as ACTION_TYPES from \"./actionTypes\";\r\n\r\nexport const SUCCESS = {\r\n  type: ACTION_TYPES.SUCCESS,\r\n};\r\n\r\nexport const FAILURE = {\r\n  type: ACTION_TYPES.FAILURE,\r\n};\r\n\r\nexport const success = () => {\r\n  return {\r\n    type: ACTION_TYPES.SUCCESS,\r\n  };\r\n};\r\n\r\nexport const failure = () => {\r\n  return {\r\n    type: ACTION_TYPES.FAILURE,\r\n  };\r\n};\r\n\r\nexport const set_profile = (profile) => {\r\n  return {\r\n    type: ACTION_TYPES.SET_PROFILE,\r\n    payload: profile,\r\n  };\r\n};\r\n\r\nexport const remove_profile = () => {\r\n  return {\r\n    type: ACTION_TYPES.REMOVE_PROFILE,\r\n  };\r\n};\r\n\r\nexport const login_success = () => {\r\n  return {\r\n    type: ACTION_TYPES.LOGIN_SUCCESS,\r\n  };\r\n};\r\n\r\nexport const login_failure = () => {\r\n  return {\r\n    type: ACTION_TYPES.LOGIN_FAILURE,\r\n  };\r\n};\r\n\r\nexport const user_input_change = (text) => {\r\n  return {\r\n    type: ACTION_TYPES.USER_INPUT_CHANGE,\r\n    payload: text,\r\n  };\r\n};\r\n\r\nexport const user_input_submit = (text) => {\r\n  return {\r\n    type: ACTION_TYPES.USER_INPUT_SUBMIT,\r\n    payload: text,\r\n  };\r\n};\r\n\r\nexport const set_db_profile = (profile) => {\r\n  return {\r\n    type: ACTION_TYPES.SET_DB_PROFILE,\r\n    payload: profile,\r\n  };\r\n};\r\n\r\nexport const remove_db_profile = () => {\r\n  return {\r\n    type: ACTION_TYPES.REMOVE_DB_PROFILE,\r\n  };\r\n};\r\n\r\nexport const set_db_posts = (posts) => {\r\n  return {\r\n    type: ACTION_TYPES.FETCH_DB_POSTS,\r\n    payload: posts,\r\n  };\r\n};\r\n\r\nexport const remove_db_posts = () => {\r\n  return {\r\n    type: ACTION_TYPES.REMOVE_DB_POSTS,\r\n  };\r\n};\r\n","// import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport { Auth0Provider } from \"@auth0/auth0-react\";\nimport { authConfig } from \"./utils/authConfig\";\nimport App from \"./App\";\nimport \"./style.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <Auth0Provider {...authConfig}>\n      <App />\n  </Auth0Provider>\n);\n"],"sourceRoot":""}